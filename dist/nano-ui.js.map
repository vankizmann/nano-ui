{"version":3,"sources":["webpack://nano-ui/webpack/universalModuleDefinition","webpack://nano-ui/webpack/bootstrap","webpack://nano-ui/external {\"root\":\"Nano\",\"commonjs\":\"nano-js\",\"commonjs2\":\"nano-js\",\"amd\":\"nano-js\"}","webpack://nano-ui/external {\"root\":\"Vue\",\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"amd\":\"vue\"}","webpack://nano-ui/./src/notification/src/notification/notification.js","webpack://nano-ui/./node_modules/optiscroll/dist/optiscroll.js","webpack://nano-ui/(webpack)/buildin/global.js","webpack://nano-ui/./src/mixins/src/ctor.js","webpack://nano-ui/./src/mixins/src/cmer.js","webpack://nano-ui/./src/draggable/src/draghandler/draghandler.js","webpack://nano-ui/./src/index.js","webpack://nano-ui/./src/notification/index.js","webpack://nano-ui/./src/table/src/table/table.js","webpack://nano-ui/./src/table/src/table-column/table-column.js","webpack://nano-ui/./src/table/src/table-cell/table-cell.js","webpack://nano-ui/./src/table/src/table-cell/types/table-cell-string.js","webpack://nano-ui/./src/table/src/table-cell/types/table-cell-boolean.js","webpack://nano-ui/./src/table/src/table-cell/types/table-cell-datetime.js","webpack://nano-ui/./src/table/src/table-cell/types/table-cell-option.js","webpack://nano-ui/./src/table/src/table-cell/types/table-cell-image.js","webpack://nano-ui/./src/table/src/table-cell/types/table-cell-matrix.js","webpack://nano-ui/./src/table/src/table-filter/table-filter.js","webpack://nano-ui/./src/table/src/table-filter/types/table-filter-string.js","webpack://nano-ui/./src/table/src/table-filter/types/table-filter-boolean.js","webpack://nano-ui/./src/table/src/table-filter/types/table-filter-datetime.js","webpack://nano-ui/./src/table/src/table-filter/types/table-filter-option.js","webpack://nano-ui/./src/table/index.js","webpack://nano-ui/./src/info/src/info/info.js","webpack://nano-ui/./src/info/src/info-column/info-column.js","webpack://nano-ui/./src/info/src/info-field/info-field.js","webpack://nano-ui/./src/info/src/info-field/types/info-field-string.js","webpack://nano-ui/./src/info/src/info-field/types/info-field-boolean.js","webpack://nano-ui/./src/info/src/info-field/types/info-field-datetime.js","webpack://nano-ui/./src/info/src/info-field/types/info-field-option.js","webpack://nano-ui/./src/info/src/info-field/types/info-field-image.js","webpack://nano-ui/./src/info/index.js","webpack://nano-ui/./src/draggable/src/draglist/draglist.js","webpack://nano-ui/./src/draggable/src/draglist-item/draglist-item.js","webpack://nano-ui/./src/draggable/src/draggable/draggable.js","webpack://nano-ui/./src/draggable/src/draggrid/draggrid.js","webpack://nano-ui/./src/draggable/index.js","webpack://nano-ui/./src/form/src/form/form.js","webpack://nano-ui/./src/form/src/form-group/form-group.js","webpack://nano-ui/./src/form/src/form-item/form-item.js","webpack://nano-ui/./src/form/index.js","webpack://nano-ui/./src/popover/src/popover/popover.js","webpack://nano-ui/./src/popover/src/popover-option/popover-option.js","webpack://nano-ui/./src/popover/index.js","webpack://nano-ui/./src/button/src/button/button.js","webpack://nano-ui/./src/button/src/button-group/button-group.js","webpack://nano-ui/./src/button/index.js","webpack://nano-ui/./src/select/src/select/select.js","webpack://nano-ui/./src/select/src/select-option/select-option.js","webpack://nano-ui/./src/select/index.js","webpack://nano-ui/./src/checkbox/src/checkbox/checkbox.js","webpack://nano-ui/./src/checkbox/src/checkbox-group/checkbox-group.js","webpack://nano-ui/./src/checkbox/index.js","webpack://nano-ui/./src/radio/src/radio/radio.js","webpack://nano-ui/./src/radio/src/radio-group/radio-group.js","webpack://nano-ui/./src/radio/index.js","webpack://nano-ui/./src/cascader/src/cascader-panel/cascader-panel.js","webpack://nano-ui/./src/cascader/src/cascader/cascader.js","webpack://nano-ui/./src/cascader/index.js","webpack://nano-ui/./src/datepicker/src/datepicker-panel/datepicker-panel.js","webpack://nano-ui/./src/datepicker/src/datepicker/datepicker.js","webpack://nano-ui/./src/datepicker/index.js","webpack://nano-ui/./src/timepicker/src/timepicker-panel/timepicker-panel.js","webpack://nano-ui/./src/timepicker/src/timepicker/timepicker.js","webpack://nano-ui/./src/timepicker/index.js","webpack://nano-ui/./src/tabs/src/tabs/tabs.js","webpack://nano-ui/./src/tabs/src/tabs-item/tabs-item.js","webpack://nano-ui/./src/tabs/index.js","webpack://nano-ui/./src/empty/src/empty-icon/empty-icon.js","webpack://nano-ui/./src/empty/index.js","webpack://nano-ui/./src/config/src/config/config.js","webpack://nano-ui/./src/config/index.js","webpack://nano-ui/./src/scrollbar/src/scrollbar/scrollbar.js","webpack://nano-ui/./src/scrollbar/index.js","webpack://nano-ui/./src/virtualscroller/src/virtualscroller/virtualscroller.beta.js","webpack://nano-ui/./src/virtualscroller/index.js","webpack://nano-ui/./src/loader/src/loader/loader.js","webpack://nano-ui/./src/loader/index.js","webpack://nano-ui/./src/resizer/src/resizer/resizer.js","webpack://nano-ui/./src/resizer/index.js","webpack://nano-ui/./src/modal/src/modal/modal.js","webpack://nano-ui/./src/modal/index.js","webpack://nano-ui/./src/input/src/input/input.js","webpack://nano-ui/./src/input/index.js","webpack://nano-ui/./src/textarea/src/textarea/textarea.js","webpack://nano-ui/./src/textarea/index.js","webpack://nano-ui/./src/switch/src/switch/switch.js","webpack://nano-ui/./src/switch/index.js","webpack://nano-ui/./src/confirm/src/confirm/confirm.js","webpack://nano-ui/./src/confirm/index.js","webpack://nano-ui/./src/transfer/src/transfer/transfer.js","webpack://nano-ui/./src/transfer/index.js","webpack://nano-ui/./src/paginator/src/paginator/paginator.js","webpack://nano-ui/./src/paginator/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Notification","text","type","options","duration","iconPrimary","global","NanoIcons","info","iconSecondary","iconSuccess","success","iconWarning","warning","iconDanger","danger","iconInfo","this","Obj","assign","render","Str","ucfirst","el","document","body","appendTo","setTimeout","addClass","remove","classList","Dom","make","join","onclick","icon","getIcon","html","Notify","args","uid","undefined","wrapper","getWrapper","notifications","append","UUID","zIndex","style","position","find","empty","css","NanoStyles","notifyPosition","Math","Optiscroll","element","Instance","GS","globalSettings","scrollMinUpdateInterval","checkFrequency","pauseCheck","defaults","preventParentScroll","forceScrollbars","scrollStopDelay","maxTrackSize","minTrackSize","draggableTracks","autoUpdate","classPrefix","wrapContent","rtl","settings","_extend","getComputedStyle","direction","cache","init","shouldCreateScrollbars","scrollEl","Utils","createWrapper","firstElementChild","toggleClass","scrollbars","v","Scrollbar","h","G","scrollbarSpec","width","hideNativeScrollbars","_invoke","isTouch","update","instances","push","checkTimer","checkLoop","fn","threshhold","last","deferTimer","listeners","ev","scroll","Events","context","now","Date","arguments","clearTimeout","apply","touchstart","touchend","mousewheel","wheel","addEventListener","passiveEvent","oldcH","clientH","sH","scrollHeight","cH","clientHeight","sW","scrollWidth","cW","clientWidth","scrollH","scrollW","clientW","contains","destroy","fireCustomEvent","scrollTo","destX","destY","startX","startY","endX","endY","scrollLeft","scrollTop","animateScroll","scrollIntoView","elem","delta","eDim","sDim","leftEdge","topEdge","rightEdge","bottomEdge","offsetX","offsetY","querySelector","length","jquery","top","right","bottom","left","getBoundingClientRect","height","self","startTime","isNaN","pow","max","abs","animate","time","min","easedTime","easingFunction","scrollAnimation","requestAnimationFrame","child","removeEventListener","childNodes","insertBefore","removeChild","index","indexOf","splice","eventName","eventData","event","scrollbarV","scrollbarH","scrollBottom","size","scrollRight","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","passive","timerStop","scrollStop","cacheV","cacheH","preventScroll","cancelAnimationFrame","enabled","percent","which","instance","isVertical","parentEl","scrollbarCache","sizeProp","clientSize","scrollSize","scrollProp","evSuffixes","evTypesMatcher","rtlMode","scrollbarEl","trackEl","events","dragData","dragStart","preventDefault","evData","touches","x","pageX","y","pageY","match","dragMove","deltaRatio","dragMode","dragEnd","on","method","moveEv","upEv","toggle","bool","createElement","className","appendChild","PointerEvent","forEach","evType","newSize","oldSize","newDim","newRelPos","deltaPos","calc","fireEdgeEv","marginRight","cssTransform","viewS","scrollS","sizeRatio","sizeDiff","was","parentNode","isRtl","scrollElStyle","setAttribute","addCssRule","selector","rules","styleSheet","getElementById","id","createTextNode","head","sheet","insertRule","e","cssTransition","cssTest","outerEl","innerEl","htmlEl","documentElement","cssText","offsetWidth","getScrollbarSpec","capture","prop","ucProp","charAt","toUpperCase","slice","props","classes","split","dest","src","merge","collection","j","g","Function","ctor","fallback","$options","cmer","attrsList","Any","isString","isArray","Arr","each","isPlain","$attrs","NDragCounter","$el","count","Locale","choice","dataTransfer","setData","setDragImage","DragCounter","NDragIndicator","safezone","strategy","rect","clientY","hasClass","has","show","hide","map","item","DragIndicator","NDraghandler","rootNode","set","unset","onDragenterRoot","onDragoverRoot","onDragleaveRoot","onDragendRoot","onDragdropRoot","Event","bindDragstart","bindDragend","bindDragdrop","off","unbind","target","closest","cacheNodes","frames","allowDrop","isFunction","rainbow","node","removeClass","fire","moveNodes","group","allowGroups","JSON","parse","stringify","dropNodes","tempSelected","$emit","removeNode","clone","items","unlinkNodes","removeNodes","isSelected","virtuals","route","resolve","targetNode","isInSelf","cascade","_","unbindNode","handle","onDragstartNode","onDragenterNode","onDragoverNode","onDragleaveNode","onDragendNode","onDragdropNode","transformDrop","insertNode","moveNodesRoot","moveNodesInto","moveNodesBefore","moveNodesAfter","sources","filter","childProp","disableMove","targetRoute","children","replace","reduce","reduceItem","Num","depth","cascades","unique","uniqueProp","tempCascade","virtual","parent","isEmpty","childRoute","checked","circle","intermediate","clock","calendar","times","primary","angleUp","angleRight","angleDown","angleLeft","angleDoubleLeft","angleDoubleRight","iconPosition","NanoInstall","App","Icons","Styles","Nano","console","error","install","config","globalProperties","CtorMixin","CmerMixin","trans","icons","styles","Notifcation","alias","provide","NTable","Array","visible","current","selected","expanded","sortProp","String","sortDir","closeFilterOnEnter","Boolean","showEmptyIcon","itemHeight","Number","itemOffset","scrollTopOnChange","renderSelect","renderExpand","renderCurrent","allowSelect","allowDrag","bufferItems","threshold","keyEvents","highlightTimeout","computed","data","elements","tempVisible","tempVisibleProps","tempSortProp","tempSortDir","tempFilter","tempFilterProps","mounted","$watch","makeVisibleProps","deep","detectVisible","methods","addColumn","column","add","removeColumn","getColumnIndex","findIndex","getColumnVisiblity","getColumnSorted","getColumnFilter","filterProp","getColumnFiltered","detectVisibity","intersect","extract","sortByColumn","dir","replaceFilter","search","filters","resetFilter","selectAll","$refs","draggable","highlightNode","syncCurrent","refreshCurrent","modelValue","disabled","onClick","renderBody","columns","values","renderContext","label","renderHead","defaultRender","except","$props","renderNode","draggableHtml","default","$slots","inject","NDraggable","tooltip","align","sort","breakpoint","previewProp","matrix","optionsValue","optionsLabel","fluid","fixedWidth","minWidth","maxWidth","emptyText","undefinedText","trueText","falseText","datetimeFormat","NTableColumn","tempWidth","beforeMount","beforeUnmount","sortDirection","display","renderHeadLabel","labelHtml","renderHeadSort","renderHeadFilter","angleHtml","component","resolveComponent","offset","passed","class","required","input","extends","TableCell","convertString","convertBoolean","convertDatetime","$value","$index","isObject","option","preview","getYoutube","matchId","matchPath","matchEmbed","getVimeo","matchUrl","renderYoutube","renderVimeo","renderImage","renderPreview","htmlPreview","linkYoutube","linkVimeo","toggleMatrix","veValue","combine","isChecked","checkedState","canReset","canApply","mountFilter","onKeydown","getFilterProp","getDefaultFilter","applyFilter","clearFilter","popover","close","renderForm","renderApply","link","renderReset","renderFooter","trigger","footer","TableFilter","operator","li","nl","eq","ne","1","0","lt","gt","form","getFilterProps","string","keys","Table","TableColumn","TableCellString","TableCellBoolean","TableCellDatetime","TableCellOption","TableCellImage","TableCellMatrix","TableFilterString","TableFilterBoolean","TableFilterDatetime","TableFilterOption","model","syncEvent","relative","tempValue","bindSyncEvent","unbindSyncEvent","setValue","NInfo","renderEmpty","renderLabel","renderCell","InfoField","Info","InfoColumn","InfoFieldString","InfoFieldBoolean","InfoFieldDatetime","InfoFieldOption","InfoFieldImage","renderHandle","highlight","firstSelected","tempCurrent","tempExpanded","drag","bindRoot","watchSelected","async","refreshVirtuals","unbindRoot","unmounted","watch","filterVirtuals","first","log","virtualscroller","isDraggable","canDrag","isHighlight","refresh","recursive","$nextTick","scrollToHighlight","isCurrent","setCurrent","setRawCurrent","setNextCurrent","setPrevCurrent","reset","isDisabled","hasChildren","getChildren","isExpanded","expandItem","expandCurrent","isTotalSelected","isInterSelected","selectItem","indexies","unselectAll","bindKeydown","unbindKeydown","stopPropagation","renderItem","only","onMouseenter","onMouseleave","bindNode","onDblclick","renderElement","renderFunction","renderSpacer","Draglist","DraglistItem","errors","propagation","forceChange","forceErrors","addItem","veItems","removeItem","setForm","veForm","md5","setErrors","veErrors","NForm","legend","checkable","tooltipPosition","nativeValue","toggleValue","$render","actions","NTabs","NTabsItem","tooltipWindow","focusInput","$input","focus","gotoInput","changeTab","renderTooltip","contain","renderError","Form","FormGroup","FormItem","NPopover","listen","scrollClose","framerate","delay","refreshVisible","clientX","prevent","previous","onHover","onContext","onExit","onCloseEvent","active","open","timer","pause","unpause","stopRefreshInterval","startRefreshInterval","passedOffset","setInterval","updatePosition","clearInterval","isSameOffset","isSameSize","passedSize","getTargetHorizontal","targetRect","windowRect","posY","start","end","posX","center","inverse","broken","innerHeight","innerWidth","getTargetVertical","getTargetOffset","round","isScrollClose","source","result","keyCode","raw","header","viewBody","isNull","clickClose","tempSize","renderIcon","Popover","PopoverOption","square","buttonType","nativeType","innerHtml","Button","ButtonGroup","clearValue","multiple","collapse","clearable","placeholder","collapseText","allowCreate","optionsDisabled","tempClear","searched","NSelect","searchOptions","scrollToClosest","clear","addOption","removeOption","resetInput","onFocusInput","onInputInput","onKeydownInput","createOrToggle","selectPrev","selectNext","searchRegex","RegExp","toggleOption","getOptionLabel","tempLabel","newIndex","scrollToCurrent","createOption","scrollbar","created","renderLabelClear","onMousedown","renderLabelAngle","renderLabelItem","renderLabelCollapse","firstHtml","renderLabelItems","renderMultiple","isEmptyValue","isNumber","onFocus","onInput","inputHtml","renderSingle","modelLabel","renderDisplay","displayHtml","renderItems","emptyHtml","renderPopover","onClose","renderOptions","inheritAttrs","valueProp","labelProp","toggleItem","renderOption","isMultipleActive","isSingleActive","Select","SelectOption","NCheckboxGroup","tempComputed","globalChecked","tempChecked","tempIntermediate","globalIntermediate","tempDisabled","globalDisabled","addCheckbox","removeCheckbox","check","checkCheckbox","uncheck","uncheckCheckbox","eventShiftClick","shiftCheckbox","eventLocalClick","shiftKey","toggleCheckbox","eventGlobalClick","toggleAll","updateFromGroup","renderCheckbox","interHtml","checkHtml","checkbox","emit","checkboxes","uncheckAll","checkAll","Checkbox","CheckboxGroup","NRadioGroup","addRadio","removeRadio","checkRadio","renderRadio","radio","NRadio","hover","disabledProp","tempHover","clearCascader","hoverItem","onSelect","updateHover","clickTimer","lastclick","isTouchDevice","navigator","msMaxTouchPoints","hoverTimer","fireSelectItem","onMousemove","onTouchstart","renderCascade","renderList","onCascaderInput","onCascaderHover","onPopoverInput","itemLabel","CascaderPanel","Cascader","arrive","clearArrive","depart","clearDepart","minDate","maxDate","range","monthPanels","format","weekdays","months","yearsGrid","tempCache","getYears","monthsGrid","getMonths","Now","tempArrive","tempDepart","tempView","tempRanger","cacheArrive","cacheDepart","gotoDate","gotoMonth","gotoYear","patchDate","patchMonth","printRange","patchYear","patchRange","renderToolbarPrev","closure","renderToolbarNext","renderToolbarMonth","monthsHtml","month","addMonths","renderToolbarYear","yearsHtml","year","renderToolbar","prev","next","renderDateItem","equalDate","valid","isNotBeforeMin","after","isNotAfterMax","before","renderRangeDateItem","viewMode","isTempValid","between","arriveFirst","renderDate","legendHtml","day","bodyHtml","chunk","getDatesGrid","chunks","panelHtml","prevMonth","nextMonth","renderMonthItem","equal","renderMonth","prevYear","nextYear","renderYearItem","renderYear","prevDecade","nextDecade","placeholderArrive","placeholderDepart","rangeSeparator","boundary","displayFormat","clearDatepicker","clearRangeDatepicker","clearSingleDatepicker","onValueInput","moment","isValid","date","onArriveInput","onDepartInput","onDatepickerInput","onDatepickerDepart","onDatepickerArrive","initialDate","renderRange","arriveProps","departProps","DatepickerPanel","Datepicker","hoursInterval","minutesInterval","secondsInterval","hoursGrid","getHours","minutesGrid","getMinutes","secondsGrid","getSeconds","eventSelect","renderHourItem","hour","renderHourPanel","renderMinuteItem","minute","renderMinutePanel","renderSecondItem","second","renderSecondPanel","clearTimepicker","onTimepickerInput","renderPanel","TimepickerPanel","Timepicker","addTab","tab","removeTab","getTab","updateEvent","currentTab","sorted","repeatNext","updated","renderHeaderIndicator","transform","renderHeader","tabs","preload","keep","_key","renderHeaderIcon","renderHeaderLabel","Tabs","TabsItem","EmptyIcon","scope","solveAwait","$$scope","$$value","solveValue","solveEvent","$configRefs","solveContent","prepareValue","veModel","path","deepSet","inputClosure","obj","val","shift","renderLayer","setup","vIf","vShow","vAwait","$on","content","slots","resolved","NConfig","NScrollbar","fixture","wrapClass","bindAdaptHeight","bindAdaptWidth","bindOptiscroll","onResize","debounce","onUpdate","onSizechange","onScroll","optiscroll","passedHeight","passedWidth","unbindAdaptHeight","unbindAdaptWidth","unbindOptiscroll","onScrollTo","onScrollIntoView","adaptHeight","spacer","refreshHeight","adaptWidth","refreshWidth","$child","actual","state","startIndex","endIndex","updateRender","isIndexRendered","scrollToIndex","targetTop","clearState","refreshDriver","onScrollupdate","startItem","endItem","newState","isEqual","topOffset","Virtualscroller","NLoader","minimum","applyTimer","timing","startTimer","restartTimer","timeout","Loader","resizerWidth","sizeFixed","updateWidth","bindSizechange","forceWidth","unbindSizechange","flex","updateHandle","onLeftMousedown","onLeftMouseup","onLeftMousemove","scrollX","targetWidth","onRightMousedown","onRightMouseup","onRightMousemove","frameStyle","Resizer","title","closable","renderClose","startRefreshTimeout","NModal","eventClick","eventKeydown","openModal","force","closeModal","stopRefreshTimeout","attr","backdrop","indexes","modal","renderFrame","renderBackdrop","Modal","iconDisabled","eventIconClick","eventInput","renderInput","Input","autoRows","maxRows","minRows","maxLength","rows","currentRows","Textarea","onValue","offValue","onType","offType","renderSwitch","Switch","abort","confirm","renderAction","WIN","Confirm","sourceLabel","targetLabel","sourceChecked","selectedSource","tempSource","sourceIntermediate","targetChecked","selectedTarget","tempTarget","targetIntermediate","sourceSearch","searchPattern","targetSearch","moveItemsTarget","moveItemsSource","moveRowTarget","moveRowSource","moveToSource","moveToTarget","updateSelectedSource","updateSelectedTarget","renderSourceSelect","renderSourceTitle","counterHtml","renderSourceHeader","renderSourceSearch","renderSourceBody","onMove","renderTargetSelect","renderTargetTitle","renderTargetHeader","renderTargetSearch","renderTargetBody","renderMoveSource","renderMoveTarget","Transfer","page","limit","limitOptions","total","maxPages","layout","pages","ceil","tempLimit","pageOptions","tempPage","forcePage","updatePaginate","paginate","onPrevPage","onPageInput","onNextPage","onFirstPage","onLastPage","onLimitInput","renderLimit","renderCount","renderGoto","renderPrev","renderNext","renderFirst","renderLast","renderPage","renderPages","renderSlot","view","Paginator"],"mappings":"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","file":"nano-ui.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nano-js\"), require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nano-js\", \"vue\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nano-ui\"] = factory(require(\"nano-js\"), require(\"vue\"));\n\telse\n\t\troot[\"nano-ui\"] = factory(root[\"Nano\"], root[\"Vue\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { UUID, Str, Obj, Dom } from \"nano-js\";\n\nclass Notification {\n\n    el = null;\n\n    text = '';\n\n    icon = '';\n\n    type = '';\n\n    options = {\n        duration: 4500,\n        iconPrimary: global.NanoIcons.info,\n        iconSecondary: global.NanoIcons.info,\n        iconSuccess: global.NanoIcons.success,\n        iconWarning: global.NanoIcons.warning,\n        iconDanger: global.NanoIcons.danger,\n        iconInfo: global.NanoIcons.info\n    };\n\n    constructor(text, type = 'primary', options = {})\n    {\n        this.text = text;\n        this.type = type;\n\n        this.options = Obj.assign(this.options, options);\n\n        this.render();\n    }\n\n    getIcon()\n    {\n        return Obj.get(this.options,\n            'icon' + Str.ucfirst(this.type));\n    }\n\n    append(el = document.body)\n    {\n        this.el.appendTo(el);\n\n        setTimeout(() => this.el.addClass('n-active'), 100);\n\n        return this;\n    }\n\n    remove()\n    {\n        this.el.get(0).remove();\n\n        return this;\n    }\n\n    render()\n    {\n        let classList = [\n            'n-notification',\n            'n-notification--' + this.type\n        ];\n\n        this.el = Dom.make('div', {\n            classList: classList.join(' '), onclick: () => this.remove()\n        });\n        \n\n        let icon = Dom.make('div', {\n            classList: 'n-notification__icon'\n        });\n\n        icon.appendTo(this.el);\n\n        let iconSpan = Dom.make('span', {\n            classList: this.getIcon()\n        });\n\n        iconSpan.appendTo(icon);\n\n        let text = Dom.make('div', {\n            classList: 'n-notification__text'\n        });\n\n        text.html(this.text).appendTo(this.el);\n    }\n\n}\n\nexport default class Notify {\n\n    static alias = 'Notify';\n\n    static position = global.NanoStyles.notifyPosition;\n\n    static notifications = {};\n\n    static handle(...args)\n    {\n        let uid = Notify.create(undefined, ...args);\n\n        let wrapper = Notify.getWrapper();\n\n        // Append element to dom\n        Notify.notifications[uid].append(wrapper);\n\n        // Queue remove\n        setTimeout(() => Notify.remove(uid),\n            Notify.notifications[uid].options.duration);\n\n        return uid;\n    }\n\n    static create(uid = UUID(), ...args)\n    {\n        Notify.notifications[uid] = new Notification(...args);\n\n        return uid;\n    }\n\n    static remove(uid)\n    {\n        if ( Notify.notifications[uid] === undefined ) {\n            return;\n        }\n\n        // Remove dom element\n        Notify.notifications[uid].remove();\n\n        // Remove from list\n        delete Notify.notifications[uid];\n    }\n\n    static getWrapper()\n    {\n        if ( ! window.zIndex ) {\n            window.zIndex = 9000;\n        }\n\n        let style = {\n            'z-index': window.zIndex + 100\n        };\n\n        let classList = [\n            'n-notification-frame',\n            'n-' + this.position\n        ];\n\n        if ( Dom.find('.n-notification-frame').empty() === true ) {\n            Dom.make('div', { classList: classList.join(' ') }).appendTo(document.body);\n        }\n\n        Dom.find('.n-notification-frame').css(style);\n\n        return Dom.find('.n-notification-frame');\n    }\n\n}\n","/*!\n* Optiscroll.js v3.2.1\n* https://github.com/albertogasparin/Optiscroll/\n* \n* @copyright 2018 Alberto Gasparin\n* @license Released under MIT LICENSE\n*/\n\n;(function ( window, document, Math, undefined ) {\n  'use strict';\n\n\n\n/**\n * Optiscroll, use this to create instances\n * ```\n * var scrolltime = new Optiscroll(element);\n * ```\n */\nvar Optiscroll = function Optiscroll(element, options) {\n  return new Optiscroll.Instance(element, options || {});\n};\n\n\n\nvar GS = Optiscroll.globalSettings = {\n  scrollMinUpdateInterval: 1000 / 40, // 40 FPS\n  checkFrequency: 1000,\n  pauseCheck: false,\n};\n\nOptiscroll.defaults = {\n  preventParentScroll: false,\n  forceScrollbars: false,\n  scrollStopDelay: 300,\n  maxTrackSize: 95,\n  minTrackSize: 5,\n  draggableTracks: true,\n  autoUpdate: true,\n  classPrefix: 'optiscroll-',\n  wrapContent: true,\n  rtl: false,\n};\n\n\n\nOptiscroll.Instance = function (element, options) {\n  // instance variables\n  this.element = element;\n  this.settings = _extend(_extend({}, Optiscroll.defaults), options || {});\n  if (typeof options.rtl !== 'boolean') {\n    this.settings.rtl = window.getComputedStyle(element).direction === 'rtl';\n  }\n  this.cache = {};\n\n  this.init();\n};\n\n\n\nOptiscroll.Instance.prototype = {\n\n\n  init: function () {\n    var element = this.element,\n        settings = this.settings,\n        shouldCreateScrollbars = false;\n\n    var scrollEl = this.scrollEl = settings.wrapContent\n      ? Utils.createWrapper(element)\n      : element.firstElementChild;\n\n    toggleClass(scrollEl, settings.classPrefix + 'content', true);\n    toggleClass(element, 'is-enabled' + (settings.rtl ? ' is-rtl' : ''), true);\n\n    // initialize scrollbars\n    this.scrollbars = {\n      v: Scrollbar('v', this),\n      h: Scrollbar('h', this),\n    };\n\n    // create DOM scrollbars only if they have size or if it's forced\n    if(G.scrollbarSpec.width || settings.forceScrollbars) {\n      shouldCreateScrollbars = Utils.hideNativeScrollbars(scrollEl, settings.rtl);\n    }\n\n    if(shouldCreateScrollbars) {\n      _invoke(this.scrollbars, 'create');\n    }\n\n    if(G.isTouch && settings.preventParentScroll) {\n      toggleClass(element, settings.classPrefix + 'prevent', true);\n    }\n\n    // calculate scrollbars\n    this.update();\n\n    // bind container events\n    this.bind();\n\n    // add instance to global array for timed check\n    if(settings.autoUpdate) {\n      G.instances.push(this);\n    }\n\n    // start the timed check if it is not already running\n    if(settings.autoUpdate && !G.checkTimer) {\n      Utils.checkLoop();\n    }\n\n  },\n\n\n\n  bind: function () {\n    var listeners = this.listeners = {},\n        scrollEl = this.scrollEl;\n\n    // scroll event binding\n    listeners.scroll = _throttle(Events.scroll.bind(this), GS.scrollMinUpdateInterval);\n\n    if(G.isTouch) {\n      listeners.touchstart = Events.touchstart.bind(this);\n      listeners.touchend = Events.touchend.bind(this);\n    }\n\n    // Safari does not support wheel event\n    listeners.mousewheel = listeners.wheel = Events.wheel.bind(this);\n\n    for (var ev in listeners) {\n      scrollEl.addEventListener(ev, listeners[ev], G.passiveEvent);\n    }\n\n  },\n\n\n\n\n  update: function () {\n    var scrollEl = this.scrollEl,\n        cache = this.cache,\n        oldcH = cache.clientH,\n        sH = scrollEl.scrollHeight,\n        cH = scrollEl.clientHeight,\n        sW = scrollEl.scrollWidth,\n        cW = scrollEl.clientWidth;\n\n    if(sH !== cache.scrollH || cH !== cache.clientH ||\n      sW !== cache.scrollW || cW !== cache.clientW) {\n\n      cache.scrollH = sH;\n      cache.clientH = cH;\n      cache.scrollW = sW;\n      cache.clientW = cW;\n\n      // only fire if cache was defined\n      if(oldcH !== undefined) {\n\n        // if the element is no more in the DOM\n        if(sH === 0 && cH === 0 && !document.body.contains(this.element)) {\n          this.destroy();\n          return false;\n        }\n\n        this.fireCustomEvent('sizechange');\n      }\n\n      // this will update the scrollbar\n      // and check if bottom is reached\n      _invoke(this.scrollbars, 'update');\n    }\n  },\n\n\n\n\n  /**\n   * Animate scrollTo\n   */\n  scrollTo: function (destX, destY, duration) {\n    var cache = this.cache,\n        startX, startY, endX, endY;\n\n    G.pauseCheck = true;\n    // force update\n    this.update();\n\n    startX = this.scrollEl.scrollLeft;\n    startY = this.scrollEl.scrollTop;\n\n    endX = +destX;\n    if(destX === 'left') { endX = 0; }\n    if(destX === 'right') { endX = cache.scrollW - cache.clientW; }\n    if(destX === false) { endX = startX; }\n\n    endY = +destY;\n    if(destY === 'top') { endY = 0; }\n    if(destY === 'bottom') { endY = cache.scrollH - cache.clientH; }\n    if(destY === false) { endY = startY; }\n\n    // animate\n    this.animateScroll(startX, endX, startY, endY, +duration);\n\n  },\n\n\n\n  scrollIntoView: function (elem, duration, delta) {\n    var scrollEl = this.scrollEl,\n        eDim, sDim,\n        leftEdge, topEdge, rightEdge, bottomEdge,\n        offsetX, offsetY,\n        startX, startY, endX, endY;\n\n    G.pauseCheck = true;\n    // force update\n    this.update();\n\n    if(typeof elem === 'string') { // selector\n      elem = scrollEl.querySelector(elem);\n    } else if(elem.length && elem.jquery) { // jquery element\n      elem = elem[0];\n    }\n\n    if(typeof delta === 'number') { // same delta for all\n      delta = { top: delta, right: delta, bottom: delta, left: delta };\n    }\n\n    delta = delta || {};\n    eDim = elem.getBoundingClientRect();\n    sDim = scrollEl.getBoundingClientRect();\n\n    startX = endX = scrollEl.scrollLeft;\n    startY = endY = scrollEl.scrollTop;\n    offsetX = startX + eDim.left - sDim.left;\n    offsetY = startY + eDim.top - sDim.top;\n\n    leftEdge = offsetX - (delta.left || 0);\n    topEdge = offsetY - (delta.top || 0);\n    rightEdge = offsetX + eDim.width - this.cache.clientW + (delta.right || 0);\n    bottomEdge = offsetY + eDim.height - this.cache.clientH + (delta.bottom || 0);\n\n    if(leftEdge < startX) { endX = leftEdge; }\n    if(rightEdge > startX) { endX = rightEdge; }\n\n    if(topEdge < startY) { endY = topEdge; }\n    if(bottomEdge > startY) { endY = bottomEdge; }\n\n    // animate\n    this.animateScroll(startX, endX, startY, endY, +duration);\n  },\n\n\n\n\n  animateScroll: function (startX, endX, startY, endY, duration) {\n    var self = this,\n        scrollEl = this.scrollEl,\n        startTime = Date.now();\n\n    if(endX === startX && endY === startY) {\n      return;\n    }\n\n    if(duration === 0) {\n      scrollEl.scrollLeft = endX;\n      scrollEl.scrollTop = endY;\n      return;\n    }\n\n    if(isNaN(duration)) { // undefined or auto\n      // 500px in 430ms, 1000px in 625ms, 2000px in 910ms\n      duration = Math.pow(Math.max(Math.abs(endX - startX), Math.abs(endY - startY)), 0.54) * 15;\n    }\n\n    (function animate () {\n      var time = Math.min(1, ((Date.now() - startTime) / duration)),\n          easedTime = Utils.easingFunction(time);\n\n      if(endY !== startY) {\n        scrollEl.scrollTop = ~~(easedTime * (endY - startY)) + startY;\n      }\n      if(endX !== startX) {\n        scrollEl.scrollLeft = ~~(easedTime * (endX - startX)) + startX;\n      }\n\n      self.scrollAnimation = time < 1 ? window.requestAnimationFrame(animate) : null;\n    }());\n  },\n\n\n\n\n  destroy: function () {\n    var self = this,\n        element = this.element,\n        scrollEl = this.scrollEl,\n        listeners = this.listeners,\n        child;\n\n    if(!this.scrollEl) { return; }\n\n    // unbind events\n    for (var ev in listeners) {\n      scrollEl.removeEventListener(ev, listeners[ev]);\n    }\n\n    // remove scrollbars elements\n    _invoke(this.scrollbars, 'remove');\n\n    // unwrap content\n    if (this.settings.wrapContent) {\n      while(child = scrollEl.childNodes[0]) {\n        element.insertBefore(child, scrollEl);\n      }\n      element.removeChild(scrollEl);\n      this.scrollEl = null;\n    }\n\n    // remove classes\n    toggleClass(element, this.settings.classPrefix + 'prevent', false);\n    toggleClass(element, 'is-enabled', false);\n\n    // defer instance removal from global array\n    // to not affect checkLoop _invoke\n    window.requestAnimationFrame(function () {\n      var index = G.instances.indexOf(self);\n      if (index > -1) {\n        G.instances.splice(index, 1);\n      }\n    });\n  },\n\n\n\n\n  fireCustomEvent: function (eventName) {\n    var cache = this.cache,\n        sH = cache.scrollH, sW = cache.scrollW,\n        eventData;\n\n    eventData = {\n      // scrollbars data\n      scrollbarV: _extend({}, cache.v),\n      scrollbarH: _extend({}, cache.h),\n\n      // scroll position\n      scrollTop: cache.v.position * sH,\n      scrollLeft: cache.h.position * sW,\n      scrollBottom: (1 - cache.v.position - cache.v.size) * sH,\n      scrollRight: (1 - cache.h.position - cache.h.size) * sW,\n\n      // element size\n      scrollWidth: sW,\n      scrollHeight: sH,\n      clientWidth: cache.clientW,\n      clientHeight: cache.clientH,\n    };\n\n    var event;\n    if (typeof CustomEvent === 'function') {\n      event = new CustomEvent(eventName, { detail: eventData });\n    } else { // IE does not support CustomEvent\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(eventName, false, false, eventData);\n    }\n    this.element.dispatchEvent(event);\n  },\n\n};\n\n\n\n\nvar Events = {\n\n  scroll: function (ev) {\n\n    if (!G.pauseCheck) {\n      this.fireCustomEvent('scrollstart');\n    }\n    G.pauseCheck = true;\n\n    this.scrollbars.v.update();\n    this.scrollbars.h.update();\n\n    this.fireCustomEvent('scroll');\n\n    clearTimeout(this.cache.timerStop);\n    this.cache.timerStop = setTimeout(Events.scrollStop.bind(this), this.settings.scrollStopDelay);\n  },\n\n\n  touchstart: function (ev) {\n    G.pauseCheck = false;\n    this.scrollbars.v.update();\n    this.scrollbars.h.update();\n\n    Events.wheel.call(this, ev);\n  },\n\n\n  touchend: function (ev) {\n    // prevents touchmove generate scroll event to call\n    // scrollstop  while the page is still momentum scrolling\n    clearTimeout(this.cache.timerStop);\n  },\n\n\n  scrollStop: function () {\n    this.fireCustomEvent('scrollstop');\n    G.pauseCheck = false;\n  },\n\n\n  wheel: function (ev) {\n    var cache = this.cache,\n        cacheV = cache.v,\n        cacheH = cache.h,\n        preventScroll = this.settings.preventParentScroll && G.isTouch;\n\n    window.cancelAnimationFrame(this.scrollAnimation);\n\n    if(preventScroll && cacheV.enabled && cacheV.percent % 100 === 0) {\n      this.scrollEl.scrollTop = cacheV.percent ? (cache.scrollH - cache.clientH - 1) : 1;\n    }\n    if(preventScroll && cacheH.enabled && cacheH.percent % 100 === 0) {\n      this.scrollEl.scrollLeft = cacheH.percent ? (cache.scrollW - cache.clientW - 1) : 1;\n    }\n  },\n\n\n};\n\n\nvar Scrollbar = function (which, instance) {\n\n  var isVertical = (which === 'v'),\n      parentEl = instance.element,\n      scrollEl = instance.scrollEl,\n      settings = instance.settings,\n      cache = instance.cache,\n      scrollbarCache = cache[which] = {},\n\n      sizeProp = isVertical ? 'H' : 'W',\n      clientSize = 'client' + sizeProp,\n      scrollSize = 'scroll' + sizeProp,\n      scrollProp = isVertical ? 'scrollTop' : 'scrollLeft',\n      evSuffixes = isVertical ? ['top','bottom'] : ['left','right'],\n      evTypesMatcher = /^(mouse|touch|pointer)/,\n\n      rtlMode = G.scrollbarSpec.rtl,\n      enabled = false,\n      scrollbarEl = null,\n      trackEl = null;\n\n  var events = {\n    dragData: null,\n\n    dragStart: function (ev) {\n      ev.preventDefault();\n      var evData = ev.touches ? ev.touches[0] : ev;\n      events.dragData = { x: evData.pageX, y: evData.pageY, scroll: scrollEl[scrollProp] };\n      events.bind(true, ev.type.match(evTypesMatcher)[1]);\n    },\n\n    dragMove: function (ev) {\n      var evData = ev.touches ? ev.touches[0] : ev,\n          dragMode = settings.rtl && rtlMode === 1 && !isVertical ? -1 : 1,\n          delta, deltaRatio;\n\n      ev.preventDefault();\n      delta = isVertical ? evData.pageY - events.dragData.y : evData.pageX - events.dragData.x;\n      deltaRatio = delta / cache[clientSize];\n\n      scrollEl[scrollProp] = events.dragData.scroll + deltaRatio * cache[scrollSize] * dragMode;\n    },\n\n    dragEnd: function (ev) {\n      events.dragData = null;\n      events.bind(false, ev.type.match(evTypesMatcher)[1]);\n    },\n\n    bind: function (on, type) {\n      var method = (on ? 'add' : 'remove') + 'EventListener',\n          moveEv = type + 'move',\n          upEv = type + (type === 'touch' ? 'end' : 'up');\n\n      document[method](moveEv, events.dragMove);\n      document[method](upEv, events.dragEnd);\n      document[method](type + 'cancel', events.dragEnd);\n    },\n\n  };\n\n  return {\n\n\n    toggle: function (bool) {\n      enabled = bool;\n\n      if(trackEl) {\n        toggleClass(parentEl, 'has-' + which + 'track', enabled);\n      }\n\n      // expose enabled\n      scrollbarCache.enabled = enabled;\n    },\n\n\n    create: function () {\n      scrollbarEl = document.createElement('div');\n      trackEl = document.createElement('b');\n\n      scrollbarEl.className = settings.classPrefix + which;\n      trackEl.className = settings.classPrefix + which + 'track';\n      scrollbarEl.appendChild(trackEl);\n      parentEl.appendChild(scrollbarEl);\n\n      if(settings.draggableTracks) {\n        var evTypes = window.PointerEvent ? ['pointerdown'] : ['touchstart', 'mousedown'];\n        evTypes.forEach(function (evType) {\n          trackEl.addEventListener(evType, events.dragStart);\n        });\n      }\n    },\n\n\n    update: function () {\n      var newSize, oldSize,\n          newDim, newRelPos, deltaPos;\n\n      // if scrollbar is disabled and no scroll\n      if(!enabled && cache[clientSize] === cache[scrollSize]) {\n        return;\n      }\n\n      newDim = this.calc();\n      newSize = newDim.size;\n      oldSize = scrollbarCache.size;\n      newRelPos = (1 / newSize) * newDim.position * 100;\n      deltaPos = Math.abs(newDim.position - (scrollbarCache.position || 0)) * cache[clientSize];\n\n      if(newSize === 1 && enabled) {\n        this.toggle(false);\n      }\n\n      if(newSize < 1 && !enabled) {\n        this.toggle(true);\n      }\n\n      if(trackEl && enabled) {\n        this.style(newRelPos, deltaPos, newSize, oldSize);\n      }\n\n      // update cache values\n      scrollbarCache = _extend(scrollbarCache, newDim);\n\n      if(enabled) {\n        this.fireEdgeEv();\n      }\n\n    },\n\n\n    style: function (newRelPos, deltaPos, newSize, oldSize) {\n      if(newSize !== oldSize) {\n        trackEl.style[ isVertical ? 'height' : 'width' ] = newSize * 100 + '%';\n        if (settings.rtl && !isVertical) {\n          trackEl.style.marginRight = (1 - newSize) * 100 + '%';\n        }\n      }\n      trackEl.style[G.cssTransform] = 'translate(' +\n        (isVertical ? '0%,' + newRelPos + '%' : newRelPos + '%' + ',0%')\n        + ')';\n    },\n\n\n    calc: function () {\n      var position = scrollEl[scrollProp],\n          viewS = cache[clientSize],\n          scrollS = cache[scrollSize],\n          sizeRatio = viewS / scrollS,\n          sizeDiff = scrollS - viewS,\n          positionRatio, percent;\n\n      if(sizeRatio >= 1 || !scrollS) { // no scrollbars needed\n        return { position: 0, size: 1, percent: 0 };\n      }\n      if (!isVertical && settings.rtl && rtlMode) {\n        position = sizeDiff - position * rtlMode;\n      }\n\n      percent = 100 * position / sizeDiff;\n\n      // prevent overscroll effetcs (negative percent)\n      // and keep 1px tolerance near the edges\n      if(position <= 1) { percent = 0; }\n      if(position >= sizeDiff - 1) { percent = 100; }\n\n      // Capped size based on min/max track percentage\n      sizeRatio = Math.max(sizeRatio, settings.minTrackSize / 100);\n      sizeRatio = Math.min(sizeRatio, settings.maxTrackSize / 100);\n\n      positionRatio = (1 - sizeRatio) * (percent / 100);\n\n      return { position: positionRatio, size: sizeRatio, percent: percent };\n    },\n\n\n    fireEdgeEv: function () {\n      var percent = scrollbarCache.percent;\n\n      if(scrollbarCache.was !== percent && percent % 100 === 0) {\n        instance.fireCustomEvent('scrollreachedge');\n        instance.fireCustomEvent('scrollreach' + evSuffixes[percent / 100]);\n      }\n\n      scrollbarCache.was = percent;\n    },\n\n\n    remove: function () {\n      // remove parent custom classes\n      this.toggle(false);\n      // remove elements\n      if(scrollbarEl) {\n        scrollbarEl.parentNode.removeChild(scrollbarEl);\n        scrollbarEl = null;\n      }\n    },\n\n  };\n\n};\n\n\nvar Utils = {\n\n  hideNativeScrollbars: function (scrollEl, isRtl) {\n    var size = G.scrollbarSpec.width,\n        scrollElStyle = scrollEl.style;\n    if(size === 0) {\n      // hide Webkit/touch scrollbars\n      var time = Date.now();\n      scrollEl.setAttribute('data-scroll', time);\n      return Utils.addCssRule('[data-scroll=\"' + time + '\"]::-webkit-scrollbar', 'display:none;width:0;height:0;');\n    } else {\n      scrollElStyle[isRtl ? 'left' : 'right'] = -size + 'px';\n      scrollElStyle.bottom = -size + 'px';\n      return true;\n    }\n  },\n\n\n  addCssRule: function (selector, rules) {\n    var styleSheet = document.getElementById('scroll-sheet');\n    if(!styleSheet) {\n      styleSheet = document.createElement('style');\n      styleSheet.id = 'scroll-sheet';\n      styleSheet.appendChild(document.createTextNode('')); // WebKit hack\n      document.head.appendChild(styleSheet);\n    }\n    try {\n      styleSheet.sheet.insertRule(selector + ' {' + rules + '}', 0);\n      return true;\n    } catch (e) { return; }\n  },\n\n\n  createWrapper: function (element, className) {\n    var wrapper = document.createElement('div'),\n        child;\n    while(child = element.childNodes[0]) {\n      wrapper.appendChild(child);\n    }\n    return element.appendChild(wrapper);\n  },\n\n\n  // Global height checker\n  // looped to listen element changes\n  checkLoop: function () {\n\n    if(!G.instances.length) {\n      G.checkTimer = null;\n      return;\n    }\n\n    if(!G.pauseCheck) { // check size only if not scrolling\n      _invoke(G.instances, 'update');\n    }\n\n    if(GS.checkFrequency) {\n      G.checkTimer = setTimeout(function () {\n        Utils.checkLoop();\n      }, GS.checkFrequency);\n    }\n  },\n\n\n  // easeOutCubic function\n  easingFunction: function (t) {\n    return (--t) * t * t + 1;\n  },\n\n\n};\n\n\n\n// Global variables\nvar G = Optiscroll.G = {\n  isTouch: 'ontouchstart' in window,\n  cssTransition: cssTest('transition'),\n  cssTransform: cssTest('transform'),\n  scrollbarSpec: getScrollbarSpec(),\n  passiveEvent: getPassiveSupport(),\n\n  instances: [],\n  checkTimer: null,\n  pauseCheck: false,\n};\n\n\n// Get scrollbars width, thanks Google Closure Library\nfunction getScrollbarSpec () {\n  var htmlEl = document.documentElement,\n      outerEl, innerEl, width = 0, rtl = 1; // IE is reverse\n\n  outerEl = document.createElement('div');\n  outerEl.style.cssText = 'overflow:scroll;width:50px;height:50px;position:absolute;left:-100px;direction:rtl';\n\n  innerEl = document.createElement('div');\n  innerEl.style.cssText = 'width:100px;height:100px';\n\n  outerEl.appendChild(innerEl);\n  htmlEl.appendChild(outerEl);\n  width = outerEl.offsetWidth - outerEl.clientWidth;\n  if (outerEl.scrollLeft > 0) {\n    rtl = 0; // webkit is default\n  } else {\n    outerEl.scrollLeft = 1;\n    if (outerEl.scrollLeft === 0) {\n      rtl = -1; // firefox is negative\n    }\n  }\n  htmlEl.removeChild(outerEl);\n\n  return { width: width, rtl: rtl };\n}\n\n\nfunction getPassiveSupport () {\n  var passive = false;\n  var options = Object.defineProperty({}, 'passive', {\n    get: function () { passive = true; },\n  });\n  window.addEventListener('test', null, options);\n  return passive ? { capture: false, passive: true } : false;\n}\n\n\n// Detect css3 support, thanks Modernizr\nfunction cssTest (prop) {\n  var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n      el = document.createElement('test'),\n      props = [prop, 'Webkit' + ucProp];\n\n  for (var i in props) {\n    if(el.style[props[i]] !== undefined) { return props[i]; }\n  }\n  return '';\n}\n\n\n\nfunction toggleClass (el, value, bool) {\n  var classes = el.className.split(/\\s+/),\n      index = classes.indexOf(value);\n\n  if(bool) {\n    ~index || classes.push(value);\n  } else {\n    ~index && classes.splice(index, 1);\n  }\n\n  el.className = classes.join(' ');\n}\n\n\n\n\nfunction _extend (dest, src, merge) {\n  for(var key in src) {\n    if(!src.hasOwnProperty(key) || dest[key] !== undefined && merge) {\n      continue;\n    }\n    dest[key] = src[key];\n  }\n  return dest;\n}\n\n\nfunction _invoke (collection, fn, args) {\n  var i, j;\n  if(collection.length) {\n    for(i = 0, j = collection.length; i < j; i++) {\n      collection[i][fn].apply(collection[i], args);\n    }\n  } else {\n    for (i in collection) {\n      collection[i][fn].apply(collection[i], args);\n    }\n  }\n}\n\nfunction _throttle(fn, threshhold) {\n  var last, deferTimer;\n  return function () {\n    var context = this,\n        now = Date.now(),\n        args = arguments;\n    if (last && now < last + threshhold) {\n      // hold on to it\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshhold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}\n\n\n\n  // AMD export\n  if(typeof define == 'function' && define.amd) {\n    define(function(){\n      return Optiscroll;\n    });\n  }\n\n  // commonjs export\n  if(typeof module !== 'undefined' && module.exports) {\n    module.exports = Optiscroll;\n  }\n\n  window.Optiscroll = Optiscroll;\n\n})(window, document, Math);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { Arr, Obj } from \"nano-js\";\n\nexport default {\n\n    ctor(key, fallback = null)\n    {\n        let ctor = Obj.get(this.$options, key.split('.'), -1);\n\n\n\n        //console.log(this.$options, ctor);\n\n        // console.log(ctor);\n\n        // if ( ctor === -1 ) {\n        //     ctor = Obj.get(this.$vnode.componentOptions.Ctor,\n        //         Arr.merge(['options'], key.split('.')), -1);\n        // }\n\n        if ( ctor === -1 ) {\n            ctor = fallback;\n        }\n\n        if ( typeof ctor !== 'function' ) {\n            return ctor;\n        }\n\n        return (...args) => ctor.apply(this, args);\n    }\n\n}\n","import { Arr, Obj, Any } from \"nano-js\";\n\nexport default {\n\n    cmer(classList)\n    {\n        let attrsList = {};\n\n        if ( Any.isString(classList) ) {\n            attrsList[classList] = true;\n        }\n\n        if ( Any.isArray(classList) ) {\n            Arr.each(classList, (value) => attrsList[value] = true);\n        }\n\n        if ( Any.isPlain(classList) ) {\n            Obj.assign(attrsList, classList);\n        }\n\n        if ( Any.isString(this.$attrs.class) ) {\n            attrsList[this.$attrs.class] = true;\n        }\n\n        if ( Any.isArray(this.$attrs.class) ) {\n            Arr.each(this.$attrs.class, (value) => attrsList[value] = true);\n        }\n\n        if ( Any.isPlain(this.$attrs.class) ) {\n            Obj.assign(attrsList, this.$attrs.class);\n        }\n\n        return attrsList;\n    }\n\n}\n","import { Arr, Obj, Num, Any, Dom, Event, Locale, UUID } from \"nano-js\";\n\nclass NDragCounter {\n\n    $el = null;\n\n    constructor()\n    {\n        this.$el = Dom.make('div', {\n            classList: ['n-draggable__counter']\n        });\n\n        this.$el.appendTo(document.body);\n    }\n\n    get(event, count)\n    {\n        this.$el.html(\n            `<span>${Locale.choice(':count Item|:count Items', count)}</span>`\n        );\n\n        // Fix data transfer\n        event.dataTransfer.setData('text/plain', '');\n\n        if ( typeof event.dataTransfer.setDragImage !== 'function' ) {\n            return;\n        }\n\n        // Set finally the drop image\n        event.dataTransfer.setDragImage(this.$el.get(0), 0, 0);\n    }\n\n}\n\nglobal.DragCounter = new NDragCounter;\n\nclass NDragIndicator {\n\n    $el = null;\n\n    parent = null;\n\n    constructor()\n    {\n        this.$el = Dom.make('div', {\n            classList: ['n-draggable__indicator']\n        });\n\n        this.$el.appendTo(document.body);\n    }\n\n    resolve(event, safezone, el, strategy = 'inner')\n    {\n        let rect = el.getBoundingClientRect();\n\n        if ( event.clientY < rect.y + safezone ) {\n            strategy = 'before';\n        }\n\n        if ( event.clientY > rect.y + rect.height - safezone ) {\n            strategy = 'after';\n        }\n\n        if ( Dom.find(el).hasClass('n-expanded') ) {\n            strategy = strategy === 'after' ? 'inner' : strategy;\n        }\n\n        Arr.has(['before', 'after'], strategy) ? \n            this.show(rect, strategy) : this.hide();\n    \n\n        return strategy;\n    }\n\n    show(rect, strategy)\n    {\n        let style = {\n            top: rect.y, left: rect.x, width: rect.width\n        };\n\n        if ( strategy === 'after' ) {\n            style.top = rect.y + rect.height;\n        }\n\n        this.$el.css(Obj.map(style, (item) => item + 'px'));\n    }\n\n    hide()\n    {\n        this.$el.css(null);\n    }\n\n    destroy()\n    {\n        this.$el.get(0).remove();\n    }\n\n}\n\nglobal.DragIndicator = new NDragIndicator();\n\nclass NDraghandler {\n\n    uid = null;\n\n    uniqueProp = 'id';\n    childProp = 'children';\n\n    rootNode = null;\n    childNodes = {};\n\n    dropNodes = [];\n    cacheNodes = [];\n\n    strategy = 'nodrop';\n    frames = 0;\n    timeout = 0;\n\n    constructor(rootNode)\n    {\n        this.rootNode = rootNode;\n\n        Obj.set(global, ['DragHandler', this.uid = UUID()], this);\n    }\n\n    destroy()\n    {\n        Obj.unset(global, ['DragHandler', this.uid], this);\n    }\n\n    bindRoot()\n    {\n        Dom.find(this.rootNode.$el).on('dragenter', (event) => {\n            this.onDragenterRoot(event);\n        });\n\n        Dom.find(this.rootNode.$el).on('dragover', (event) => {\n            this.onDragoverRoot(event);\n        });\n\n        Dom.find(this.rootNode.$el).on('dragleave', (event) => {\n            this.onDragleaveRoot(event);\n        });\n\n        Dom.find(this.rootNode.$el).on('dragend', (event) => {\n            this.onDragendRoot(event);\n        });\n\n        Dom.find(this.rootNode.$el).on('drop', (event) => {\n            this.onDragdropRoot(event);\n        });\n\n        Dom.find(this.rootNode.$el).on('dragdrop', (event) => {\n            this.onDragdropRoot(event);\n        });\n\n        Event.bind('NDrag:start', this.bindDragstart.bind(this), \n            this.uid);\n\n        Event.bind('NDrag:end', this.bindDragend.bind(this), \n            this.uid);\n\n        Event.bind('NDrag:drop', this.bindDragdrop.bind(this), \n            this.uid);\n    }\n\n    unbindRoot()\n    {\n        let events = [\n            'dragstart', \n            'dragenter', \n            'dragover', \n            'dragleave', \n            'dragend', \n            'drop', \n            'dragdrop',\n        ];\n\n        Dom.find(this.rootNode.$el).off(events);\n\n        Event.unbind('NDrag:start', this.uid);\n        Event.unbind('NDrag:end', this.uid);\n        Event.unbind('NDrag:drop', this.uid);\n    }\n\n    onDragenterRoot(event)\n    {\n        event.preventDefault();\n    }\n\n    onDragoverRoot(event)\n    {\n        let isNode = Dom.find(event.target)\n            .closest('.n-draglist-item');\n\n        if ( isNode || ! this.cacheNodes.length ) {\n            return;\n        }\n\n        event.preventDefault();\n\n        if ( this.frames && new Date - this.frames < 35 ) {\n            return;\n        }\n\n        let allowDrop = this.rootNode.allowDrop;\n\n        if ( ! Any.isFunction(allowDrop) ) {\n            allowDrop = () => this.rootNode.allowDrop;\n        }\n\n        let rainbow = Arr.each(this.cacheNodes, (node) => {\n            return !! allowDrop(node, null, this.strategy);\n        });\n\n        this.strategy = 'root';\n\n        if ( Arr.has(rainbow, false) ) {\n            this.strategy = 'nodrop';\n        }\n\n        global.DragIndicator.hide();\n\n        if ( this.strategy !== 'nodrop' ) {\n            Dom.find(this.rootNode.$el).addClass('n-dragover');\n        } else {\n            Dom.find(this.rootNode.$el).removeClass('n-dragover');\n        }\n\n        if ( this.strategy === 'nodrop' ) {\n            Dom.find(this.rootNode.$el).addClass('n-nodrop');\n        } else {\n            Dom.find(this.rootNode.$el).removeClass('n-nodrop');\n        }\n\n        this.frames = new Date;\n    }\n\n    onDragleaveRoot(event)\n    {\n        Dom.find(this.rootNode.$el)\n            .removeClass('n-dragover n-nodrop');\n    }\n\n    onDragendRoot(event)\n    {\n        if ( ! this.cacheNodes.length ) {\n            return;\n        }\n\n        Dom.find(this.rootNode.$el)\n            .removeClass('n-dragover n-nodrop');\n\n        if ( this.strategy !== 'root' ) {\n            return;\n        }\n\n        Event.fire('NDrag:end');\n    }\n\n    onDragdropRoot(event)\n    {\n        if ( ! this.cacheNodes.length ) {\n            return;\n        }\n\n        Dom.find(this.rootNode.$el)\n            .removeClass('n-dragover n-nodrop');\n\n        if ( this.strategy !== 'root' ) {\n            return;\n        }\n\n        event.preventDefault();\n\n        this.moveNodes(null, this.strategy);\n\n        Event.fire('NDrag:drop');\n    }\n\n    bindDragstart(group, cache)\n    {\n        if ( Arr.has(this.rootNode.allowGroups, group) ) {\n            this.cacheNodes = JSON.parse(JSON.stringify(cache));\n        }\n    }\n\n    bindDragend()\n    {\n        this.cacheNodes = this.dropNodes = [];\n    }\n\n    bindDragdrop(...args)\n    {\n        if ( ! this.dropNodes.length ) {\n            return;\n        }\n\n        this.rootNode.tempSelected = [];\n\n        this.rootNode.$emit('update:selected', \n            this.rootNode.tempSelected);\n\n        if ( ! this.rootNode.removeNode ) {\n            return;\n        }\n\n        let clone = {\n            items: Obj.clone(this.rootNode.items)\n        };\n\n        this.unlinkNodes(clone);\n        this.removeNodes(clone);\n\n        this.rootNode.$emit('update:items', clone.items);\n    }\n\n    onDragstartNode(event, node)\n    {\n        if ( ! this.rootNode.isSelected(node) ) {\n            this.rootNode.$emit('update:selected', \n                this.rootNode.tempSelected = [node.value.id]);\n        }\n\n        let cache = Arr.each(this.rootNode.tempSelected, (id) => {\n            return Arr.find(this.rootNode.virtuals, { id });\n        });\n\n        global.DragCounter.get(event, cache.length);\n\n        Arr.map(cache, (value) => {\n            return { value, item: Obj.get(this.rootNode, value.route) };\n        });\n\n        Event.fire('NDrag:start', this.rootNode.group, \n            this.dropNodes = cache);\n    }\n\n    onDragenterNode(event, node)\n    {\n        event.preventDefault();\n    }\n\n    onDragoverNode(event, node)\n    {\n        if ( ! this.cacheNodes.length ) {\n            return;\n        }\n\n        event.preventDefault();\n\n        if ( this.frames && new Date - this.frames < 35 ) {\n            return;\n        }\n\n        let safezone = this.rootNode\n            .safezone(node.$el.clientHeight);\n\n        this.strategy = global.DragIndicator\n            .resolve(event, safezone, node.$el);\n\n        let targetNode = {\n            value: node.value, item: node.item\n        };\n\n        let allowDrop = this.rootNode.allowDrop;\n\n        if ( ! Any.isFunction(allowDrop) ) {\n            allowDrop = () => this.rootNode.allowDrop;\n        }\n\n        let rainbow = Arr.each(this.cacheNodes, (node) => {\n            return !! allowDrop(node, targetNode, this.strategy);\n        });\n\n        let isInSelf = Arr.has(node.value.cascade, \n            this.rootNode.tempSelected);\n\n        rainbow.push(! isInSelf);\n\n        if ( Arr.has(rainbow, false) ) {\n            this.strategy = 'nodrop';\n        }\n\n        if ( this.strategy === 'nodrop' ) {\n            global.DragIndicator.hide();\n        }\n\n        if ( this.strategy !== 'nodrop' ) {\n            Dom.find(node.$el).addClass('n-dragover');\n        } else {\n            Dom.find(node.$el).removeClass('n-dragover');\n        }\n\n        if ( this.strategy === 'nodrop' ) {\n            Dom.find(node.$el).addClass('n-nodrop');\n        } else {\n            Dom.find(node.$el).removeClass('n-nodrop');\n        }\n\n        this.frames = new Date;\n    }\n\n    onDragleaveNode(event, node)\n    {\n        Dom.find(node.$el).removeClass('n-dragover n-nodrop');\n\n        global.DragIndicator.hide();\n    }\n\n    onDragendNode(event, node)\n    {\n        Dom.find(node.$el).removeClass('n-dragover n-nodrop');\n\n        global.DragIndicator.hide();\n\n        Event.fire('NDrag:end');\n    }\n\n    onDragdropNode(event, node)\n    {\n        if ( ! this.cacheNodes.length ) {\n            return;\n        }\n        \n        Dom.find(node.$el).removeClass('n-dragover n-nodrop');\n\n        global.DragIndicator.hide();\n\n        if ( this.strategy === 'nodrop' ) {\n            return;\n        }\n\n        event.preventDefault();\n\n        this.moveNodes(node, this.strategy);\n\n        Event.fire('NDrag:drop');\n    }\n\n    bindNode(node)\n    {\n        if ( this.childNodes[node._.uid] ) {\n            this.unbindNode(node);\n        }\n\n        let $el = Dom.find(node.$el);\n\n        if ( this.rootNode.handle ) {\n            $el = handle.find('[draggable]');\n        }\n\n        $el.on('dragstart', (event) => {\n            this.onDragstartNode(event, node);\n        });\n\n        $el.on('dragenter', (event) => {\n            this.onDragenterNode(event, node);\n        });\n\n        $el.on('dragover', (event) => {\n            this.onDragoverNode(event, node);\n        });\n\n        $el.on('dragleave', (event) => {\n            this.onDragleaveNode(event, node);\n        });\n\n        $el.on('dragend', (event) => {\n            this.onDragendNode(event, node);\n        });\n\n        $el.on('drop', (event) => {\n            this.onDragdropNode(event, node);\n        });\n\n        $el.on('dragdrop', (event) => {\n            this.onDragdropNode(event, node);\n        });\n\n        this.childNodes[node._.uid] = node;\n    }\n\n    unbindNode(node)\n    {\n        let $el = Dom.find(node.$el);\n\n        if ( this.rootNode.handle ) {\n            $el = handle.find('[draggable]');\n        }\n\n        $el.off([\n            'dragstart', \n            'dragenter', \n            'dragover', \n            'dragleave', \n            'dragend', \n            'drop',\n            'dragdrop', \n        ]);\n\n        Dom.find(node.$el).removeClass('n-dragover n-nodrop');\n\n        global.DragIndicator.hide();\n\n        delete this.childNodes[node._.uid];\n    }\n\n    moveNodes(target, strategy)\n    {\n        let clone = {\n            items: Obj.clone(this.rootNode.items)\n        };\n\n        if ( this.rootNode.removeNode ) {\n            this.unlinkNodes(clone);\n        }\n\n        this.cacheNodes = Arr.each(this.cacheNodes,\n            this.rootNode.transformDrop);\n\n        if ( this.rootNode.insertNode && strategy === 'root' ) {\n            clone = this.moveNodesRoot(clone, target);\n        }\n\n        if ( this.rootNode.insertNode && strategy === 'inner' ) {\n            clone = this.moveNodesInto(clone, target);\n        }\n\n        if ( this.rootNode.insertNode && strategy === 'before' ) {\n            clone = this.moveNodesBefore(clone, target);\n        }\n\n        if ( this.rootNode.insertNode && strategy === 'after' ) {\n            clone = this.moveNodesAfter(clone, target);\n        }\n\n        if ( this.rootNode.removeNode ) {\n            clone = this.removeNodes(clone);\n        }\n\n        let sources = Arr.each(this.cacheNodes, (node) => {\n            return node.value.id;\n        });\n\n        this.dropNodes = this.rootNode.tempSelected = [];\n\n        this.rootNode.$emit('move', sources, \n            Obj.get(target, 'value.id'), strategy);\n\n        this.rootNode.$emit('moveraw', this.cacheNodes, \n            target, strategy);\n\n        this.rootNode.$emit('update:selected', \n            this.rootNode.tempSelected);\n\n        this.rootNode.$emit('update:items', clone.items);\n    }\n\n    unlinkNodes(clone)\n    {\n        Arr.each(this.dropNodes, (node) => {\n            Obj.set(clone, node.value.route, null);\n        });\n    }\n\n    removeNodes(clone, prop = 'items')\n    {\n        clone[prop] = Arr.filter(clone[prop], (node) => {\n            return !! node;\n        });\n\n        Arr.map(clone[prop], (node) => {\n\n            if ( ! node[this.childProp] ) {\n                return node;\n            }\n\n            return this.removeNodes(node, \n                this.childProp);\n        });\n\n        return clone;\n    }\n\n    moveNodesRoot(clone)\n    {\n        if ( this.rootNode.disableMove ) {\n            return clone;\n        }\n\n        Arr.each(this.cacheNodes, (node) => {\n            clone.items.push(node.item);\n        });\n\n        return clone;\n    }\n\n    moveNodesInto(clone, target)\n    {\n        if ( this.rootNode.disableMove ) {\n            return clone;\n        }\n\n        let targetRoute = [target.value.route, \n            this.childProp].join('.');\n\n        let children = Obj.get(clone, \n            targetRoute, []);\n\n        Arr.each(this.cacheNodes, (node) => {\n            children.push(node.item);\n        });\n\n        Obj.set(clone, targetRoute, children);\n\n        return clone;\n    }\n\n    moveNodesBefore(clone, target)\n    {\n        if ( this.rootNode.disableMove ) {\n            return clone;\n        }\n\n        let targetRoute = target.value.route\n            .replace(/\\.[0-9]+$/, '');\n\n        let items = Obj.get(clone, targetRoute);\n\n        Arr.each(this.cacheNodes, (node, index) => {\n            items.splice(target.value.index + index, 0, node.item);\n        });\n\n        Obj.set(clone, targetRoute, items);\n\n        return clone;\n    }\n\n    moveNodesAfter(clone, target)\n    {\n        if ( this.rootNode.disableMove ) {\n            return clone;\n        }\n\n        let targetRoute = target.value.route\n            .replace(/\\.[0-9]+$/, '');\n\n        let items = Obj.get(clone, targetRoute);\n\n        Arr.each(this.cacheNodes, (node, index) => {\n            items.splice(target.value.index + index + 1, 0, node.item);\n        });\n\n        Obj.set(clone, targetRoute, items);\n\n        return clone;\n    }\n\n    reduce(items, ...props) {\n        return Arr.reduce(items, (merge, item, index) => \n            this.reduceItem(merge, item, Num.int(index), ...props), []);\n    }\n\n    reduceItem(merge, item, index, depth = 0, route = 'items', cascades = [])\n    {\n        // Get a unique id\n        let unique = Obj.get(item, \n            this.uniqueProp, UUID());\n\n        // Add unique to cascader\n        let tempCascade = Arr.merge(cascades, \n            [unique]);\n\n        let virtual = {\n            index: index,\n            depth: depth,\n            route: [route, index].join('.'),\n            parent: Arr.last(cascades),\n            cascade: tempCascade,\n        };\n\n        virtual[this.uniqueProp] = unique;\n\n        let children = Obj.get(item, this.childProp, []);\n\n        if ( Any.isEmpty(children) ) {\n            return Arr.merge(merge, [virtual]);\n        }\n\n        let childRoute = [route, index, \n            this.childProp].join('.');\n\n        let props = [\n            depth + 1, childRoute, tempCascade\n        ]\n\n        return Arr.merge(merge, [virtual], \n            this.reduce(children, ...props));\n    }\n\n}\n\nexport default NDraghandler;","import CtorMixin from \"./mixins/src/ctor\";\nimport CmerMixin from \"./mixins/src/cmer\";\n\nlet NanoIcons = {\n    handle: 'fa fa-ellipsis-v',\n    checked: 'fa fa-check',\n    circle: 'fa fa-circle',\n    intermediate: 'fa fa-minus',\n    clock: 'fa fa-clock',\n    calendar: 'fa fa-calendar',\n    times: 'fa fa-times',\n    primary: 'fa fa-info-circle',\n    success: 'fa fa-check-circle',\n    warning: 'fa fa-exclamation-circle',\n    danger: 'fa fa-times-circle',\n    info: 'fa fa-info-circle',\n    angleUp: 'fa fa-angle-up',\n    angleRight: 'fa fa-angle-right',\n    angleDown: 'fa fa-angle-down',\n    angleLeft: 'fa fa-angle-left',\n    angleDoubleLeft: 'fa fa-angle-double-left',\n    angleDoubleRight: 'fa fa-angle-double-right'\n};\n\nlet NanoStyles = {\n    iconPosition: 'before',\n    notifyPosition: 'bottom-start'\n};\n\nexport function NanoInstall(App, Icons = {}, Styles = {})\n{\n    if ( global.Nano === undefined ) {\n        return console.error('Nano JS is not available in scope.');\n    }\n\n    global.Nano.install(App.config.globalProperties);\n\n    App.config.globalProperties.ctor = CtorMixin.ctor;\n    App.config.globalProperties.cmer = CmerMixin.cmer;\n\n    App.config.globalProperties.trans = global.Nano.Locale.trans;\n    App.config.globalProperties.choice = global.Nano.Locale.choice;\n\n    if ( ! global.NanoIcons ) {\n        global.NanoIcons = Nano.Obj.assign(NanoIcons, global.NanoIcons);\n    }\n\n    App.config.globalProperties.icons = Nano.Obj.assign(global.NanoIcons, Icons);\n\n    if ( ! global.NanoStyles ) {\n        global.NanoStyles = Nano.Obj.assign(NanoStyles, global.NanoStyles);\n    }\n\n    App.config.globalProperties.styles = Nano.Obj.assign(global.NanoStyles, Styles);\n\n    require('./notification/index').default(App);\n    require('./empty/index').default(App);\n    require('./config/index').default(App); //!complex 17.1\n    require('./scrollbar/index').default(App);\n    require('./virtualscroller/index').default(App);\n    require('./draggable/index').default(App);\n    require('./loader/index').default(App);\n    require('./resizer/index').default(App); //check\n    require('./popover/index').default(App);\n    require('./modal/index').default(App);\n    require('./button/index').default(App); // group 17.1\n    require('./input/index').default(App);\n    require('./textarea/index').default(App);\n    require('./select/index').default(App);\n    require('./checkbox/index').default(App);\n    require('./radio/index').default(App);\n    require('./switch/index').default(App);\n    require('./confirm/index').default(App);\n    require('./cascader/index').default(App);\n    require('./datepicker/index').default(App);\n    require('./timepicker/index').default(App);\n    // require('./datetimepicker/index'); 18.1\n    require('./transfer/index').default(App); // check\n    require('./form/index').default(App); // check\n    require('./tabs/index').default(App);\n    require('./table/index').default(App); // 18.1 matrix, options, select\n    require('./paginator/index').default(App);\n    require('./info/index').default(App); //!complex 16.1\n\n    // require('./map/index'); // SX only ez 17.1\n    // require('./file-list/index'); // SX only 17.1\n    // require('./file/index'); // SX only 17.1\n\n    // require('./chart/index'); // Ignore\n    // require('./wysiwyg/index'); // Ignore\n}\n\nglobal.NanoInstall = NanoInstall;\n\nexport default NanoInstall;\n","import Notifcation from './src/notification/notification';\n\nexport default function (App) {\n    App.config.globalProperties[Notifcation.alias] = window[Notifcation.alias] = Notifcation.handle;\n}\n","import { Any, Arr, Obj, Event, UUID } from \"nano-js\";\nimport { h, resolveComponent } from \"vue\";\n\nexport default {\n\n    name: 'NTable',\n\n    provide()\n    {\n        return {\n            NTable: this\n        };\n    },\n\n    props: {\n\n        items: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        visible: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        current: {\n            default()\n            {\n                return null;\n            },\n            type: [Array]\n        },\n\n        selected: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        expanded: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        filter: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        sortProp: {\n            default()\n            {\n                return 'id';\n            },\n            type: [String]\n        },\n\n        sortDir: {\n            default()\n            {\n                return 'desc';\n            },\n            type: [String]\n        },\n\n        closeFilterOnEnter: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        group: {\n            default()\n            {\n                return ['default'];\n            },\n            type: [Array]\n        },\n\n        allowGroups: {\n            default()\n            {\n                return ['default'];\n            },\n            type: [Array]\n        },\n\n        safezone: {\n            default()\n            {\n                return (height) => height * 0.51;\n            }\n        },\n\n        showEmptyIcon: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        itemHeight: {\n            default()\n            {\n                return 34;\n            },\n            type: [Number]\n        },\n\n        itemOffset: {\n            default()\n            {\n                return 30;\n            },\n            type: [Number]\n        },\n\n        scrollTopOnChange: {\n            default()\n            {\n                return false;\n            }\n        },\n\n        uniqueProp: {\n            default()\n            {\n                return 'id';\n            },\n            type: [String]\n        },\n\n        childProp: {\n            default()\n            {\n                return 'children';\n            },\n            type: [String]\n        },\n\n        renderSelect: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        renderExpand: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        renderCurrent: {\n            default()\n            {\n                return true;\n            }\n        },\n\n        transformDrop: {\n            default()\n            {\n                return (node) => node;\n            }\n        },\n\n        disableMove: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        insertNode: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        removeNode: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        allowSelect: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        allowDrag: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        allowDrop: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        bufferItems: {\n            default()\n            {\n                return 24;\n            },\n            type: [Number]\n        },\n\n        threshold: {\n            default()\n            {\n                return 40;\n            },\n            type: [Number]\n        },\n\n        keyEvents: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        highlightTimeout: {\n            default()\n            {\n                return 7000;\n            },\n            type: [Number]\n        },\n\n    },\n\n    computed: {\n\n        checked()\n        {\n            return !! this.tempSelected.length &&\n                this.tempSelected.length === this.items.length;\n        },\n\n        intermediate()\n        {\n            return !! this.tempSelected.length && \n                this.tempSelected.length !== this.items.length\n        }\n\n    },\n\n    data()\n    {\n        return {\n            uid: UUID(),\n            elements: [],\n            tempVisible: this.visible,\n            tempVisibleProps: [],\n            tempSelected: [],\n            tempSortProp: this.sortProp,\n            tempSortDir: this.sortDir,\n            tempFilter: this.filter,\n            tempFilterProps: [],\n        }\n    },\n\n    mounted()\n    {\n        this.$watch('tempVisible', \n            this.makeVisibleProps, { deep: true });\n\n        if ( ! this.tempVisible.length ) {\n            Arr.each(this.elements, this.detectVisible);\n        }\n    },\n\n    methods: {\n\n        addColumn(column)\n        {\n            Arr.add(this.elements, column, \n                { uid: column.uid });\n        },\n\n        removeColumn(column)\n        {\n            Arr.remove(this.elements, \n                { uid: column.uid });\n        },\n\n        getColumnIndex(column)\n        {\n            if ( ! Any.isString(column) ) {\n                column = column['prop'];\n            }\n\n            return Arr.findIndex(this.tempVisibleProps, \n                column);\n        },\n\n        getColumnVisiblity(column)\n        {\n            if ( ! Any.isString(column) ) {\n                column = column.prop;\n            }\n\n            return Arr.has(this.tempVisible, column);\n        },\n\n        getColumnSorted(column)\n        {\n            let prop = column;\n\n            if ( ! Any.isString(prop) ) {\n                prop = column.sortProp;\n            }\n\n            if ( Any.isEmpty(prop) ) {\n                prop = column.prop;\n            }\n\n            if ( this.tempSortProp !== prop ) {\n                return null;\n            }\n\n            return this.tempSortDir;\n        },\n\n        getColumnFilter(column)\n        {\n            let prop = column;\n\n            if ( ! Any.isString(prop) ) {\n                prop = column.filterProp;\n            }\n\n            if ( Any.isEmpty(prop) ) {\n                prop = column.prop;\n            }\n\n            return Arr.find(this.tempFilter, {\n                property: prop\n            });\n        },\n\n        getColumnFiltered(column)\n        {\n            let prop = column;\n\n            if ( ! Any.isString(prop) ) {\n                prop = column.filterProp;\n            }\n\n            if ( Any.isEmpty(prop) ) {\n                prop = column.prop;\n            }\n\n            return Arr.has(this.tempFilterProps, prop);\n        },\n\n        detectVisible(column)\n        {\n            if ( column.detectVisibity() ) {\n                Arr.add(this.tempVisible, column.prop);\n            }\n        },\n\n        makeVisibleProps()\n        {\n            this.tempVisibleProps = Arr.intersect(\n                Arr.extract(this.elements, 'prop'), this.tempVisible);\n        },\n\n        sortByColumn(column)\n        {\n            let prop = column;\n\n            if ( ! Any.isString(prop) ) {\n                prop = column.sortProp;\n            }\n\n            if ( Any.isEmpty(prop) ) {\n                prop = column.prop;\n            }\n\n\n            let dir = this.tempSortDir;\n\n            if ( prop === this.tempSortProp && this.tempSortDir === 'desc' ) {\n                dir = 'asc';\n            }\n\n            if ( prop === this.tempSortProp && this.tempSortDir === 'asc' ) {\n                dir = 'desc';\n            }\n\n            if ( this.tempSortDir !== dir ) {\n                this.$emit('update:sortDir', this.tempSortDir = dir);\n            }\n\n            if ( this.tempSortProp !== prop ) {\n                this.$emit('update:sortProp', this.tempSortProp = prop);\n            }\n\n            this.$emit('sort', this.tempSortProp, this.tempSortDir);\n        },\n\n        replaceFilter(filter, search)\n        {\n            Arr.replace(this.tempFilter, filter, search);\n\n            let filters = Arr.filter(this.tempFilter, (filter) => {\n                return Arr.has(this.tempFilterProps, filter.property);\n            });\n\n            this.$emit('update:filter', filters);\n\n            this.$emit('filter', filters, this.tempFilterProps);\n        },\n\n        resetFilter()\n        {\n            this.tempFilter = this.tempFilterProps = [];\n\n            Event.fire('NTable:reset', this.uid);\n\n            this.$emit('update:filter', this.tempFilter);\n\n            this.$emit('filter', this.tempFilter, this.tempFilterProps);\n        },\n\n        selectAll()\n        {\n            this.$refs.draggable.selectAll();\n        },\n\n        highlightNode(value, key = null)\n        {\n            this.$refs.draggable.highlightNode(value, key);\n        },\n\n        syncCurrent()\n        {\n            return this.$refs.draggable.syncCurrent();\n        },\n\n        refreshCurrent()\n        {\n            this.$refs.draggable.refreshCurrent();\n        },\n\n    },\n\n    renderExpand()\n    {\n        if ( ! this.renderExpand ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-draglist-item__expand\">\n                { /* Only used in row */ }\n            </div>\n        )\n    },\n\n    renderSelect()\n    {\n        if ( ! this.renderSelect ) {\n            return null;\n        }\n\n        let props = {\n            modelValue: this.checked,\n            intermediate: this.intermediate,\n            disabled: ! this.items.length,\n            onClick: this.selectAll\n        };\n\n        return (\n            <div class=\"n-draglist-item__select\">\n                <NCheckbox {...props}></NCheckbox>\n            </div>\n        );\n    },\n\n    renderBody(props)\n    {\n        let columns = Obj.each(this.elements, (column) => {\n            return column.ctor('renderBody')(props);\n        });\n\n        return Obj.values(columns);\n    },\n\n    renderContext()\n    {\n        let columns = Obj.each(this.elements, (column) => {\n            return (\n                <NCheckbox class=\"n-table__checkbox\" value={column.prop}>\n                    { column.label }\n                </NCheckbox>\n            );\n        });\n\n        return (\n            <NPopover trigger=\"context\" width={140}>\n                <NCheckboxGroup vModel={this.tempVisible} align=\"vertical\">\n                    { Obj.values(columns) }\n                </NCheckboxGroup>\n            </NPopover>\n        );\n    },\n\n    renderHead()\n    {\n        let defaultRender = [\n            this.ctor('renderExpand')(),\n            this.ctor('renderSelect')(), \n            this.ctor('renderContext')()\n        ];\n\n        let columns = Obj.each(this.elements, (column) => {\n            return column.ctor('renderHead')();\n        });\n\n        return (\n            <div class=\"n-table__header\">\n                { defaultRender } { Obj.values(columns) }\n            </div>\n        );\n    },\n\n    render()\n    {\n        let except = [\n            'visible', 'filter', 'sortProp', \n            'sortDir', 'closeFilterOnEnter'\n        ];\n\n        let props = Obj.except(this.$props, except, {\n            items: this.items, \n            selected: this.tempSelected,\n            renderNode: this.ctor('renderBody')\n        });\n\n        props['onUpdate:items'] = (value) => {\n            this.$emit('update:items', value);\n        }\n\n        props['onUpdate:current'] = (value) => {\n            this.$emit('update:current', value);\n        }\n\n        props['onUpdate:expanded'] = (value) => {\n            this.$emit('update:expanded', value);\n        }\n\n        props['onUpdate:selected'] = (value) => {\n            this.$emit('update:selected', this.tempSelected = value);\n        }\n        \n        let draggableHtml = (\n            <div class=\"n-table__body\">\n                <NDraglist ref=\"draggable\" {...props}>\n                    { { default: () => this.ctor('renderBody')() } }\n                </NDraglist>\n            </div>\n        );\n    \n        return (\n            <div class=\"n-table\" style=\"min-height: 500px;\">\n                <NScrollbar class=\"n-table__wrap\" fixture={true}>\n                    { [this.ctor('renderHead')(), draggableHtml] }\n                </NScrollbar>\n                { this.$slots.default && this.$slots.default()}\n            </div>\n        );\n    },\n\n}","import { Any, Arr, Obj, Str, Dom, UUID } from \"nano-js\";\nimport { h, resolveComponent } from \"vue\";\n\nexport default {\n\n    name: 'NTableColumn',\n\n    inject: {\n\n        NDraggable: {\n            default: undefined\n        },\n\n        NTable: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        value: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        prop: {\n            default()\n            {\n                return 'id';\n            },\n            type: [String]\n        },\n\n        label: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        tooltip: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'string';\n            },\n            type: [String]\n        },\n\n        align: {\n            default()\n            {\n                return 'left';\n            },\n            type: [String]\n        },\n\n        sort: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        filter: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        visible: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean, Function]\n        },\n\n        breakpoint: {\n            default()\n            {\n                return 0;\n            },\n            type: [Number]\n        },\n\n        previewProp: {\n            default()\n            {\n                return 'preview';\n            },\n            type: [String]\n        },\n\n        matrix: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number, String]\n        },\n\n        options: {\n            default()\n            {\n                return [];\n            },\n            type: [Object, Array, Function]\n        },\n\n        optionsValue: {\n            default()\n            {\n                return '$value';\n            },\n            type: [String]\n        },\n\n        optionsLabel: {\n            default()\n            {\n                return '$value';\n            },\n            type: [String]\n        },\n\n        sortProp: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        filterProp: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        fluid: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        fixedWidth: {\n            default()\n            {\n                return 0;\n            }\n        },\n\n        width: {\n            default()\n            {\n                return 170;\n            }\n        },\n\n        minWidth: {\n            default()\n            {\n                return 120;\n            }\n        },\n\n        maxWidth: {\n            default()\n            {\n                return 0;\n            }\n        },\n\n        emptyText: {\n            default()\n            {\n                return '-';\n            },\n            type: [String]\n        },\n\n        undefinedText: {\n            default()\n            {\n                return '-';\n            },\n            type: [String]\n        },\n\n        trueText: {\n            default()\n            {\n                return 'Yes';\n            },\n            type: [String]\n        },\n\n        falseText: {\n            default()\n            {\n                return 'No';\n            },\n            type: [String]\n        },\n\n        datetimeFormat: {\n            default()\n            {\n                return 'YYYY-MM-DD HH:mm';\n            },\n            type: [String]\n        }\n\n    },\n\n    provide()\n    {\n        return {\n            NTableColumn: this\n        };\n    },\n\n    data()\n    {\n        return {\n            uid: UUID(), tempWidth: 0,\n        };\n    },\n\n    methods: {\n\n        detectVisibity()\n        {\n            let visible = this.visible;\n\n            if ( this.breakpoint ) {\n                visible &= Dom.find(this.NTable.$el).width() > this.breakpoint;\n            }\n\n            return visible;\n        },\n\n        sortByColumn(event)\n        {\n            if ( ! Dom.find(event.target).closest('.n-table-column__filter') ) {\n                this.NTable.sortByColumn(this);\n            }\n        },\n\n    },\n\n    beforeMount()\n    {\n        this.NTable.addColumn(this);\n    },\n\n    beforeUnmount()\n    {\n        this.NTable.removeColumn(this);\n    },\n\n    renderHead()\n    {\n        let classList = [\n            'n-table-column', \n            'n-table-column--' + this.align,\n            'n-table-column--' + this.type,\n        ];\n\n        let sortDirection = this.NTable.getColumnSorted(this);\n\n        if ( sortDirection ) {\n            classList.push('n-sorted', 'n-' + sortDirection);\n        }\n\n        if ( this.fluid ) {\n            classList.push('n-fluid');\n        }\n\n        if ( this.fixedWidth ) {\n            classList.push('n-fixed');\n        }\n\n        if ( this.NTable.getColumnFiltered(this)  ) {\n            classList.push('n-filtered');\n        }\n\n        let style = {};\n\n        if ( ! this.NTable.getColumnVisiblity(this) ) {\n            style.display = 'none';\n        }\n\n        if ( this.fixedWidth ) {\n            style.width = this.fixedWidth + 'px';\n        }\n\n        let props = {\n            minWidth: this.minWidth,\n            maxWidth: this.maxWidth,\n            disabled: !! this.fixedWidth,\n            group: [this.NTable.uid],\n        };\n\n        if ( this.sort ) {\n            props.onClick = this.sortByColumn;\n        }\n\n        return (\n            <NResizer ref=\"column\" class={classList} style={style} vModel={this.tempWidth} {...props}>\n                { this.ctor('renderHeadSort')() }\n                { this.ctor('renderHeadLabel')() }\n                { this.ctor('renderHeadFilter')() }\n            </NResizer>\n        );\n    },\n\n    renderHeadLabel()\n    {\n        let classList = [\n            'n-table-column__label'\n        ];\n\n        let labelHtml = (\n            <div class={classList}>\n                <span>{ this.label }</span>\n            </div>\n        );\n\n        if ( Any.isEmpty(this.tooltip) ) {\n            return labelHtml;\n        }\n\n        let tooltipHtml = (\n            <NPopover type=\"tooltip\">{ this.tooltip }</NPopover>\n        );\n\n        return [labelHtml, tooltipHtml];\n    },\n\n    renderHeadSort()\n    {\n        if ( ! this.sort ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-table-column__sort\">\n                <i>{ /* Sorting angles */ }</i>\n            </div>\n        )\n    },\n\n    renderHeadFilter()\n    {\n        if ( ! this.filter ) {\n            return null;\n        }\n\n        let angleHtml = (\n            <div class=\"n-table-column__filter\">\n                <i class={this.icons.angleDown}></i>\n            </div>\n        );\n\n        let component = resolveComponent('NTableFilter' + \n            Str.ucfirst(this.type));\n\n        return [\n            angleHtml, h(component, { column: this })\n        ];\n    },\n\n    renderBody(props)\n    {\n        let classList = [\n            'n-table-cell',\n            'n-table-cell--' + this.align,\n            'n-table-cell--' + this.type,\n        ];\n\n        if ( this.fluid ) {\n            classList.push('n-fluid');\n        }\n\n        if ( this.tempWidth ) {\n            classList.push('n-fixed');\n        }\n\n        let index = this.NTable.getColumnIndex(this);\n\n        let offset = 0;\n\n        if ( index === 0 ) {\n            offset = props.value.depth * this.NTable.itemOffset;\n        }\n\n        let style = {\n            width: (this.tempWidth - offset) + 'px'\n        };\n\n        if ( this.minWidth ) {\n            style.minWidth = (this.minWidth - offset) + 'px';\n        }\n\n        if ( this.maxWidth ) {\n            style.maxWidth = (this.maxWidth - offset) + 'px';\n        }\n\n        if ( ! this.NTable.getColumnVisiblity(this) ) {\n            style.display = 'none';\n        }\n\n        let passed = Obj.except(this.$attrs, [], {\n            ...props, class: classList, style: style, column: this\n        });\n\n        let component = resolveComponent('NTableCell' + \n            Str.ucfirst(this.type));\n\n        return h(component, passed);\n    },\n\n    render()\n    {\n        return null;\n    }\n}","import { Obj } from \"nano-js\";\n\nexport default {\n\n    inject: {\n\n        NTable: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        column: {\n            required: true\n        },\n\n        value: {\n            required: true\n        },\n\n        item: {\n            required: true\n        }\n\n    },\n\n    computed: {\n\n        input()\n        {\n            return Obj.get(this.item, this.column.prop);\n        }\n\n    },\n\n    render()\n    {\n        return (\n            <div>\n                <span>{ this.input }</span>\n            </div>\n        );\n    }\n\n}\n","import TableCell from \"../table-cell\";\nimport { Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableCellString',\n\n    extends: TableCell,\n\n    render()\n    {\n        return (\n            <div>\n                <span>{ Any.convertString(this.input, this.column.emptyText) }</span>\n            </div>\n        );\n    }\n\n}\n","import TableCell from \"../table-cell\";\nimport { Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableCellBoolean',\n\n    extends: TableCell,\n\n    render()\n    {\n        return (\n            <div>\n                <span>{ Any.convertBoolean(this.input, this.column.trueText, this.column.falseText) }</span>\n            </div>\n        );\n    }\n\n}\n","import TableCell from \"../table-cell\";\nimport { Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableCellDatetime',\n\n    extends: TableCell,\n\n    render()\n    {\n        return (\n            <div>\n                <span>{ Any.convertDatetime(this.input, this.column.datetimeFormat, this.column.emptyText) }</span>\n            </div>\n        );\n    }\n\n}\n","import TableCell from \"../table-cell\";\nimport { Arr, Obj, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableCellOption',\n\n    extends: TableCell,\n\n    render()\n    {\n        let options = Any.isFunction(this.column.options) ?\n            this.column.options(this.value) : this.column.options;\n\n        options = Arr.map(Arr.clone(options), (value, index) => {\n            return { $value: value, $index: index };\n        });\n\n        let className = [\n            'n-table-cell',\n            'n-table-cell--' + this.column.type\n        ];\n\n        return <div class={className}>\n            <span>\n                {\n                    Arr.each(! Any.isObject(this.input) ? [this.input] : this.input, (value) => {\n\n                        let option = Arr.find(options, (item) => {\n                            return Obj.get(item, this.column.optionsValue) == value;\n                        });\n\n                        return Obj.get(option, this.column.optionsLabel, this.column.undefinedText);\n\n                    }).join(', ') || this.column.emptyText\n                }\n            </span>\n        </div>;\n    }\n\n}\n","import TableCell from \"../table-cell\";\nimport { Obj, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableCellImage',\n\n    extends: TableCell,\n\n    computed: {\n\n        preview()\n        {\n            return Obj.get(this.value, this.column.previewProp);\n        }\n\n    },\n\n    methods: {\n\n        getYoutube()\n        {\n            if ( Any.isEmpty(this.preview) ) {\n                return null;\n            }\n\n            let page = this.preview.match(/^https?:\\/\\/(www\\.)?(youtube\\.com|youtu\\.be)/);\n\n            if ( page === null ) {\n                return null;\n            }\n\n            let matchId = this.preview.match(/(\\?v=.*?)(?=&|$)/);\n\n            if ( matchId !== null && matchId.length === 2 ) {\n                return matchId[0].replace(/^\\?v=/, '');\n            }\n\n            let matchPath = this.preview.match(/(\\.be\\/.*?)(?=\\?|$)/);\n\n            if ( matchPath !== null && matchPath.length === 2 ) {\n                return matchPath[0].replace(/^\\.be\\//, '');\n            }\n\n            let matchEmbed = this.preview.match(/(\\/embed\\/)(.*?$)/);\n\n            if ( matchEmbed !== null && matchEmbed.length === 3 ) {\n                return matchEmbed[0].replace(/^\\/embed\\//, '');\n            }\n\n            return null;\n        },\n\n        getVimeo()\n        {\n            if ( Any.isEmpty(this.preview) ) {\n                return null;\n            }\n\n            let page = this.preview.match(/^https?:\\/\\/(www\\.|player\\.)?vimeo\\.com/);\n\n            if ( page === null ) {\n                return null;\n            }\n\n            let matchUrl = this.preview.match(/(\\/[0-9]+)(&|$)/);\n\n            if ( matchUrl !== null && matchUrl.length === 3 ) {\n                return matchUrl[0].replace(/(^\\/|&$)/, '');\n            }\n\n            return null;\n        }\n\n    },\n\n    renderYoutube(id)\n    {\n        return (\n            <div class=\"table-cell-preview__streamable\">\n                <iframe src={'https://www.youtube.com/embed/' + id} fwidth=\"640\" height=\"320\" frame-border=\"0\"></iframe>\n            </div>\n        );\n    },\n\n    renderVimeo(id)\n    {\n        return (\n            <div class=\"table-cell-preview__streamable\">\n                <iframe src={'https://player.vimeo.com/video/' + id} fwidth=\"640\" height=\"320\" frame-border=\"0\"></iframe>\n            </div>\n        );\n    },\n\n    renderImage()\n    {\n        return (\n            <div class=\"table-cell-preview__image\">\n                <img src={this.preview} />\n            </div>\n        )\n    },\n\n    renderPreview()\n    {\n        let htmlPreview = null;\n\n        if ( ! this.preview ) {\n            return null;\n        }\n\n        let linkYoutube = this.getYoutube();\n\n        if ( linkYoutube ) {\n            htmlPreview = this.ctor('renderYoutube')(linkYoutube);\n        }\n\n        let linkVimeo = this.getVimeo();\n\n        if ( linkVimeo ) {\n            htmlPreview = this.ctor('renderVimeo')(linkVimeo);\n        }\n\n        if ( Any.isEmpty(htmlPreview) ) {\n            htmlPreview = this.ctor('renderImage')();\n        }\n\n        return (\n            <NModal type=\"preview\" window={true}>\n                { htmlPreview }\n            </NModal>\n        )\n    },\n\n    render()\n    {\n        let classList = [\n            'n-table-cell',\n            'n-table-cell--' + this.column.type\n        ];\n\n        if ( this.preview ) {\n            classList.push('has-preview');\n        }\n\n        return (\n            <div class={classList}>\n                <div style={'background-image: url(\\'' + this.input + '\\');'} />\n            </div>\n        );\n    }\n\n}\n","import TableCell from \"../table-cell\";\nimport { Num, Any, Obj, Arr } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableCellMatrix',\n\n    extends: TableCell,\n\n    methods: {\n\n        toggleMatrix()\n        {\n            let item = Arr.find(this.column.veValue, {\n                [this.NTable.uniqueProp]: this.value[this.NTable.uniqueProp]\n            });\n\n            if ( ! item ) {\n                item = Obj.assign({}, this.value, { [this.column.prop]: 0 });\n            }\n\n            let matrix = Arr.toggle(\n                Num.matrix(Num.int(item[this.column.prop])), Num.int(this.column.matrix)\n            );\n\n            item[this.column.prop] = Num.combine(matrix);\n\n            Arr.replace(this.column.veValue, item, {\n                [this.NTable.uniqueProp]: item[this.NTable.uniqueProp]\n            });\n\n            this.column.$emit('input', this.column.veValue);\n        },\n\n        isChecked()\n        {\n            let item = Arr.find(this.column.veValue, {\n                [this.NTable.uniqueProp]: this.value[this.NTable.uniqueProp]\n            });\n\n            if ( ! item ) {\n                return false;\n            }\n\n            let matrix = Num.matrix(item[this.column.prop]);\n\n            if ( Num.int(this.column.matrix) === -1 ) {\n                return true;\n            }\n\n            return Arr.has(matrix, Num.int(this.column.matrix));\n        },\n\n    },\n\n    render()\n    {\n        let classList = [\n            'n-table-cell',\n            'n-table-cell--' + this.column.type\n        ];\n\n        let checkedState = this.isChecked();\n\n        let disabled = Any.isFunction(this.column.disabled) ?\n            this.column.disabled(this.value) : this.column.disabled;\n\n        return (\n            <div class={classList}>\n                <NCheckbox checked={checkedState} disabled={disabled && ! checkedState} vOn:input={this.toggleMatrix} />\n            </div>\n        );\n    }\n\n}\n","import {Arr, Obj, Any, Dom, Event, UUID} from \"nano-js\";\n\nexport default {\n\n    inject: {\n\n        NTable: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        column: {\n            required: true\n        }\n\n    },\n\n    computed: {\n\n        tempFilter()\n        {\n            return this.NTable.getColumnFilter(this.column);\n        },\n\n        canReset()\n        {\n            return ! this.NTable.getColumnFiltered(this.column);\n        },\n\n        canApply()\n        {\n            return ! Any.isEmpty(this.filter.value);\n        }\n\n    },\n\n    data()\n    {\n        return {\n            filter: Obj.clone(this.tempFilter), visible: false\n        };\n    },\n\n    beforeMount()\n    {\n        this.mountFilter();\n    },\n\n    mounted()\n    {\n        Event.bind('NTable:reset', \n            this.resetFilter, this._.uid);\n\n        Dom.find(document).on('keydown', \n            this.onKeydown, this._.uid);\n    },\n\n    beforeUnmount()\n    {\n        Event.unbind('NTable:reset', \n            this._.uid);\n\n        Dom.find(document).off('keydown', \n            null, this._.uid);\n    },\n\n    methods: {\n\n        getFilterProp()\n        {\n            return this.column.filterProp || \n                this.column.prop;\n        },\n\n        getDefaultFilter()\n        {\n            return {\n                type:       this.column.type, \n                value:      null,\n                property:   this.getFilterProp(), \n            };\n        },\n\n        mountFilter()\n        {\n            if ( this.filter ) {\n                return this.applyFilter();\n            }\n\n            this.filter = this.getDefaultFilter();\n\n            Arr.add(this.NTable.tempFilter, this.filter, {\n                property: this.getFilterProp()\n            });\n        },\n\n        resetFilter(uid)\n        {\n            if ( this.NTable.uid !== uid ) {\n                return;\n            }\n\n            this.filter = this.getDefaultFilter();\n\n            Arr.add(this.NTable.tempFilter, this.filter, {\n                property: this.getFilterProp()\n            });\n        },\n\n        onKeydown(event)\n        {\n            if ( ! this.visible ) {\n                return;\n            }\n\n            if ( event.which === 13 && this.canApply ) {\n                this.applyFilter();\n            }\n\n            if ( event.which === 13 && ! this.canApply ) {\n                this.clearFilter();\n            }\n\n            let closeAnyway = event.which === 13 &&\n                this.NTable.closeFilterOnEnter;\n\n            if ( closeAnyway || event.which === 27 ) {\n                this.$refs.popover.close();\n            }\n        },\n\n        applyFilter()\n        {\n            let filter = Obj.clone(this.filter);\n\n            this.NTable.replaceFilter(filter, {\n                property: this.getFilterProp()\n            });\n\n            Arr.add(this.NTable.tempFilterProps, \n                this.getFilterProp());\n        },\n\n        clearFilter()\n        {\n            let filter = this.getDefaultFilter();\n\n            this.NTable.replaceFilter(filter, {\n                property: this.getFilterProp()\n            });\n\n            Arr.remove(this.NTable.tempFilterProps, \n                this.getFilterProp());\n\n            this.filter = filter;\n        }\n\n    },\n\n    renderForm()\n    {\n        return null;\n    },\n\n    renderApply()\n    {\n        let props = {\n            type: 'primary',\n            link: true,\n            size: 'xs',\n            disabled: ! this.canApply\n        };\n\n        return (\n            <NButton {...props} onClick={this.applyFilter}>\n                { this.trans('Apply') }\n            </NButton>\n        );\n    },\n\n    renderReset()\n    {\n        let props = {\n            type: 'danger',\n            link: true,\n            size: 'xs',\n            disabled: this.canReset,\n        };\n\n        return (\n            <NButton {...props} onClick={this.clearFilter}>\n                { this.trans('Reset') }\n            </NButton>\n        );\n    },\n\n    renderFooter()\n    {\n        return (\n            <div class=\"n-table-filter__footer\">\n                { this.ctor('renderReset')() }\n                { this.ctor('renderApply')() }\n            </div>\n        )\n    },\n\n    render()\n    {\n        let props = {\n            class: 'n-table-filter__popover',\n            trigger: 'click',\n            size: 'sm',\n            width: 190,\n        }\n\n        return (\n            <NPopover ref=\"popover\" vModel={this.visible} {...props}>\n                {\n                    { default: this.ctor('renderForm'), footer: this.ctor('renderFooter') }\n                }\n            </NPopover>\n        );\n    }\n}\n","import TableFilter from \"../table-filter\";\nimport { Dom, Any, Locale } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableFilterString',\n\n    extends: TableFilter,\n\n    methods: {\n\n        getDefaultFilter()\n        {\n            return {\n                type:       this.column.type, \n                value:      null, \n                operator:   'li',\n                property:   this.getFilterProp(), \n            };\n        }\n\n    },\n\n    renderForm()\n    {\n        let options = {\n            li: this.trans('Includes value'),\n            nl: this.trans('Excludes value'),\n            eq: this.trans('Equal value'),\n            ne: this.trans('Except value'),\n        };\n\n        return (\n            <NForm>\n                <NFormItem>\n                    <NInput size=\"sm\" vModel={this.filter.value} />\n                </NFormItem>\n                <NFormItem>\n                    <NSelect size=\"sm\" vModel={this.filter.operator} options={options} />\n                </NFormItem>\n            </NForm>\n        );\n    }\n\n}\n","import TableFilter from \"../table-filter\";\nimport { Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableFilterBoolean',\n\n    extends: TableFilter,\n\n    methods: {\n\n        getDefaultFilter()\n        {\n            return {\n                type:       this.column.type, \n                value:      null, \n                operator:   'in',\n                property:   this.getFilterProp(), \n            };\n        }\n\n    },\n\n    renderForm()\n    {\n        let options = {\n            1: this.trans(this.column.trueText),\n            0: this.trans(this.column.falseText),\n        };\n\n        return (\n            <NForm>\n                <NFormItem>\n                    <NSelect size=\"sm\" vModel={this.filter.value} options={options} clearable={true} />\n                </NFormItem>\n            </NForm>\n        );\n    }\n\n}\n","import TableFilter from \"../table-filter\";\n\nexport default {\n\n    name: 'NTableFilterDatetime',\n\n    extends: TableFilter,\n\n    methods: {\n\n        getDefaultFilter()\n        {\n            return {\n                type:       this.column.type, \n                value:      null, \n                operator:   'eq',\n                property:   this.getFilterProp(), \n            };\n        }\n\n    },\n\n    renderForm()\n    {\n        let options = {\n            eq: this.trans('Exact date'),\n            lt: this.trans('Before date'),\n            gt: this.trans('After date'),\n        };\n\n        return (\n            <NForm>\n                <NFormItem>\n                    <NDatepicker size=\"sm\" vModel={this.filter.value} format={this.column.datetimeFormat} />\n                </NFormItem>\n                <NFormItem>\n                    <NSelect size=\"sm\" vModel={this.filter.operator} options={options} />\n                </NFormItem>\n            </NForm>\n        );\n    }\n\n}\n","import TableFilter from \"../table-filter\";\nimport { Arr, Obj, Any, Locale } from \"nano-js\";\n\nexport default {\n\n    name: 'NTableFilterOption',\n\n    extends: TableFilter,\n\n    methods: {\n\n        resetFilter()\n        {\n            this.form.value = [];\n            this.form.operator = 'in';\n        }\n\n    },\n\n    data()\n    {\n        let defaults = {\n            property: this.column.filterProp, type: this.column.type, value: [], operator: 'in'\n        };\n\n        let form = this.getFilterProps(defaults);\n\n        if ( ! Any.isArray(form.value) ) {\n            form.value = Any.string(form.value).split(',');\n        }\n\n        return { form };\n    },\n\n    renderForm()\n    {\n        let options = Any.isFunction(this.column.options) ?\n            this.column.options(null) : this.column.options;\n\n        options = Arr.map(Any.keys(options), (index) => {\n            return { $value: options[index], $index: index };\n        });\n\n        return (\n            <NForm form={this.form}>\n                <NFormItem>\n                    <NCheckboxGroup size=\"small\" align=\"vertical\" vModel={this.form.value}>\n                        {\n                            Arr.each(options, (option) => {\n                                return <NCheckbox size=\"small\" value={Obj.get(option, this.column.optionsValue)}>\n                                    { Obj.get(option, this.column.optionsLabel) }\n                                </NCheckbox>;\n                            })\n                        }\n                    </NCheckboxGroup>\n                </NFormItem>\n                <NFormItem>\n                    <NSelect size=\"small\" vModel={this.form.operator}>\n                        <NSelectOption value=\"in\" label={this.trans('Includes value')} />\n                        <NSelectOption value=\"ni\" label={this.trans('Excludes value')} />\n                    </NSelect>\n                </NFormItem>\n            </NForm>\n        );\n    }\n\n}\n","import Table from './src/table/table';\n\nimport TableColumn from './src/table-column/table-column';\n\nimport TableCellString from './src/table-cell/types/table-cell-string';\n\nimport TableCellBoolean from './src/table-cell/types/table-cell-boolean';\n\nimport TableCellDatetime from './src/table-cell/types/table-cell-datetime';\n\nimport TableCellOption from './src/table-cell/types/table-cell-option';\n\nimport TableCellImage from './src/table-cell/types/table-cell-image';\n\nimport TableCellMatrix from './src/table-cell/types/table-cell-matrix';\n\nimport TableFilterString from './src/table-filter/types/table-filter-string';\n\nimport TableFilterBoolean from './src/table-filter/types/table-filter-boolean';\n\nimport TableFilterDatetime from './src/table-filter/types/table-filter-datetime';\n\nimport TableFilterOption from './src/table-filter/types/table-filter-option';\n\n\nexport default function (App) {\n    App.component(Table.name, Table);\n    App.component(TableColumn.name, TableColumn);\n    App.component(TableCellString.name, TableCellString);\n    App.component(TableCellBoolean.name, TableCellBoolean);\n    App.component(TableCellDatetime.name, TableCellDatetime);\n    App.component(TableCellOption.name, TableCellOption);\n    App.component(TableCellImage.name, TableCellImage);\n    App.component(TableCellMatrix.name, TableCellMatrix);\n    App.component(TableFilterString.name, TableFilterString);\n    App.component(TableFilterBoolean.name, TableFilterBoolean);\n    App.component(TableFilterDatetime.name, TableFilterDatetime);\n    App.component(TableFilterOption.name, TableFilterOption);\n}","import { Arr, Any, Dom, Event, UUID } from \"nano-js\";\n\nexport default {\n\n    name: 'NInfo',\n\n    model: {\n        prop: 'item'\n    },\n\n    props: {\n\n        item: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        syncEvent: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        relative: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        showEmptyIcon: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n    },\n\n    data()\n    {\n        return {\n            uid: UUID(),\n            elements: [],\n            options: [],\n            tempValue: this.item, \n        };\n    },\n\n    mounted()\n    {\n        this.bindSyncEvent();\n    },\n\n    beforeUnmount()\n    {\n        this.unbindSyncEvent();\n    },\n\n    methods: {\n\n        bindSyncEvent()\n        {\n            if ( ! this.syncEvent ) {\n                return;\n            }\n\n            this.options = this.syncEvent;\n\n            if ( Any.isFunction(this.options) ) {\n                this.options = this.options(this);\n            }\n\n            let syncFunction = (value, uid = null) => {\n                if ( uid === this.options[1] ) {\n                    this.setValue(value);\n                }\n            };\n\n            Event.bind(this.options[0], syncFunction, \n                this.uid);\n        },\n\n        unbindSyncEvent()\n        {\n            Event.unbind(this.options[0], this.uid);\n        },\n\n        setValue(value)\n        {\n            this.$emit('update:modelValue', \n                this.tempValue = value);\n        },\n\n        addColumn(column)\n        {\n            Arr.add(this.elements, \n                column, { uid: column.uid });\n        },\n\n        removeColumn(column)\n        {\n            Arr.remove(this.elements, \n                { uid: column.uid });\n        },\n\n    },\n\n    provide()\n    {\n        return {\n            NInfo: this\n        };\n    },\n\n    renderEmpty()\n    {\n        return (\n            <NEmptyIcon disabled={! this.showEmptyIcon} class=\"n-info__empty\">\n                 { this.$slots.empty && this.$slots.empty() || this.trans('No entry') }\n            </NEmptyIcon>\n        );\n    },\n\n    renderBody()\n    {\n        if ( Any.isEmpty(this.tempValue) ) {\n            return this.ctor('renderEmpty')();\n        }\n        return (\n                <div class=\"n-info__body\">\n                    {\n                        Arr.each(this.elements, (column) => {\n                            return (\n                                <div class=\"n-info__column\">\n                                    { column.ctor('renderLabel')({ item: this.tempValue }) }\n                                    { column.ctor('renderBody')({ item: this.tempValue }) }\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-info',\n            'n-info--' + this.type,\n            'n-info--' + this.size,\n        ];\n\n        return (\n            <div class={classList}>\n                <NScrollbar relative={this.relative}>\n                    { this.ctor('renderBody')() }\n                </NScrollbar>\n                { this.$slots.default() }\n            </div>\n        );\n    }\n}\n","import { UUID, Num, Arr, Obj, Any, Dom, Locale, Str } from \"nano-js\";\nimport { h, resolveComponent } from \"vue\";\n\nexport default {\n\n    name: 'NInfoColumn',\n\n    inject: {\n\n        NInfo: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        prop: {\n            default()\n            {\n                return 'id';\n            },\n            type: [String]\n        },\n\n        label: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'string';\n            },\n            type: [String]\n        },\n\n        options: {\n            default()\n            {\n                return [];\n            },\n            type: [Object, Array, Function]\n        },\n\n        optionsValue: {\n            default()\n            {\n                return '$value';\n            },\n            type: [String]\n        },\n\n        optionsLabel: {\n            default()\n            {\n                return '$value';\n            },\n            type: [String]\n        },\n\n        emptyText: {\n            default()\n            {\n                return Locale.trans('-');\n            },\n            type: [String]\n        },\n\n        trueText: {\n            default()\n            {\n                return Locale.trans('Yes');\n            },\n            type: [String]\n        },\n\n        falseText: {\n            default()\n            {\n                return Locale.trans('No');\n            },\n            type: [String]\n        },\n\n        datetimeFormat: {\n            default()\n            {\n                return Locale.trans('YYYY-MM-DD HH:mm');\n            },\n            type: [String]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            uid: UUID()\n        };\n    },\n\n    beforeMount()\n    {\n        this.NInfo.addColumn(this);\n    },\n\n    beforeUnmount()\n    {\n        this.NInfo.removeColumn(this);\n    },\n\n    renderLabel()\n    {\n        if ( this.$slots.label ) {\n            return this.$slots.label();\n        }\n        \n        return (\n            <div class=\"n-info-column__label\">\n                <span>{this.label}</span>\n            </div>\n        );\n    },\n\n    renderBody(props)\n    {\n        if ( this.$slots.default ) {\n            return this.$slots.label();\n        }\n\n        let passed = Obj.except(props, [], {\n            column: this\n        });\n\n\n        let component = resolveComponent('NInfoField' + \n            Str.ucfirst(this.type));\n\n         return (\n             <div class=\"n-info-column__value\">\n                 { h(component, passed) }\n             </div>\n         );\n    },\n\n    renderCell(props)\n    {\n    },\n\n    render()\n    {\n        return null;\n    }\n\n}\n","import { Obj } from \"nano-js\";\nimport CtorMixin from \"../../../mixins/src/ctor\";\n\nexport default {\n\n    inject: {\n\n        NInfo: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        column: {\n            required: true\n        },\n\n        item: {\n            required: true\n        },\n\n    },\n\n    computed: {\n\n        input()\n        {\n            return Obj.get(this.item, this.column.prop);\n        }\n\n    },\n\n    render()\n    {\n        return (\n            <div class=\"n-info__field\">\n                <span>{ this.input }</span>\n            </div>\n        );\n    }\n\n}\n","import { Any } from \"nano-js\";\nimport InfoField from \"../info-field\";\n\nexport default {\n\n    name: 'NInfoFieldString',\n\n    extends: InfoField,\n\n    render()\n    {\n        let className = [\n            'n-info__field', 'n-info__field--' + this.column.type\n        ];\n\n        return <div class={className}>\n            <span>{ Any.convertString(this.input, this.column.emptyText) }</span>\n        </div>;\n    }\n\n}\n","import { Any } from \"nano-js\";\nimport InfoField from \"../info-field\";\n\nexport default {\n\n    name: 'NInfoFieldBoolean',\n\n    extends: InfoField,\n\n    render()\n    {\n        let className = [\n            'n-info__field', 'n-info__field--' + this.column.type\n        ];\n\n        return <div class={className}>\n            <span>{ Any.convertBoolean(this.input, this.column.trueText, this.column.falseText) }</span>\n        </div>;\n    }\n\n}\n","import { Any } from \"nano-js\";\nimport InfoField from \"../info-field\";\n\nexport default {\n\n    name: 'NInfoFieldDatetime',\n\n    extends: InfoField,\n\n    render()\n    {\n        let className = [\n            'n-info__field', 'n-info__field--' + this.column.type\n        ];\n\n        return <div class={className}>\n            <span>{ Any.convertDatetime(this.input, this.column.datetimeFormat, this.column.emptyText) }</span>\n        </div>;\n    }\n\n}\n","import { Arr, Obj, Any } from \"nano-js\";\nimport InfoField from \"../info-field\";\n\nexport default {\n\n    name: 'NInfoFieldOption',\n\n    extends: InfoField,\n\n    render()\n    {\n        let options = typeof this.column.options === 'function' ?\n            this.column.options(this.value) : this.column.options;\n\n        options = Arr.map(Any.keys(options), (index) => {\n            return { $value: options[index], $index: index };\n        });\n\n        let className = [\n            'n-info__field', 'n-info__field--' + this.column.type\n        ];\n\n        return <div class={className}>\n            <span>\n                {\n                    Arr.each(! Any.isArray(this.veValue) ? [this.veValue] : this.veValue, (value) => {\n\n                        let option = Arr.find(options, (option) => {\n                            return Any.string(Obj.get(option, this.column.optionsValue)) === Any.string(value);\n                        });\n\n                        return Obj.get(option, this.column.optionsLabel, value);\n\n                    }).join(', ') || this.column.emptyText\n                }\n            </span>\n        </div>;\n    }\n\n}\n","import InfoField from \"../info-field\";\n\nexport default {\n\n    name: 'NInfoFieldImage',\n\n    extends: InfoField,\n\n    render()\n    {\n        let classList = [\n            'n-info__field', 'n-info__field--' + this.column.type\n        ];\n\n        return (\n            <div class={classList}>\n                <div style={'background-image: url(\\'' + this.input + '\\');'} />\n            </div>\n        );\n    }\n\n}\n","import Info from './src/info/info';\nimport InfoColumn from './src/info-column/info-column';\nimport InfoFieldString from './src/info-field/types/info-field-string';\nimport InfoFieldBoolean from './src/info-field/types/info-field-boolean';\nimport InfoFieldDatetime from './src/info-field/types/info-field-datetime';\nimport InfoFieldOption from './src/info-field/types/info-field-option';\nimport InfoFieldImage from './src/info-field/types/info-field-image';\n\nexport default function (App) {\n    App.component(Info.name, Info);\n    App.component(InfoColumn.name, InfoColumn);\n    App.component(InfoFieldString.name, InfoFieldString);\n    App.component(InfoFieldBoolean.name, InfoFieldBoolean);\n    App.component(InfoFieldDatetime.name, InfoFieldDatetime);\n    App.component(InfoFieldOption.name, InfoFieldOption);\n    App.component(InfoFieldImage.name, InfoFieldImage);\n}","import { UUID, Num, Arr, Obj, Dom, Any, Event, Locale } from \"nano-js\";\nimport { h } from \"vue\";\nimport NDraghandler from \"../draghandler/draghandler\";\n\nexport default {\n\n    name: 'NDraglist',\n\n    model: {\n        prop: 'items'\n    },\n\n    props: {\n\n        items: {\n            default()\n            {\n                return [];\n            }\n        },\n\n        renderNode: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        current: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        selected: {\n            default()\n            {\n                return [];\n            }\n        },\n\n        expanded: {\n            default()\n            {\n                return [];\n            }\n        },\n\n        handle: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        group: {\n            default()\n            {\n                return ['default'];\n            },\n            type: [Array]\n        },\n\n        allowGroups: {\n            default()\n            {\n                return ['default'];\n            },\n            type: [Array]\n        },\n\n        safezone: {\n            default()\n            {\n                return (height) => height * 0.265;\n            }\n        },\n\n        showEmptyIcon: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        itemHeight: {\n            default()\n            {\n                return 34;\n            },\n            type: [Number]\n        },\n\n        itemOffset: {\n            default()\n            {\n                return 30;\n            },\n            type: [Number]\n        },\n\n        scrollTopOnChange: {\n            default()\n            {\n                return false;\n            }\n        },\n\n        uniqueProp: {\n            default()\n            {\n                return 'id';\n            },\n            type: [String]\n        },\n\n        childProp: {\n            default()\n            {\n                return 'children';\n            },\n            type: [String]\n        },\n\n        renderCurrent: {\n            default()\n            {\n                return true;\n            }\n        },\n\n        renderHandle: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        renderSelect: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        renderExpand: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        transformDrop: {\n            default()\n            {\n                return (node) => node;\n            }\n        },\n\n        disableMove: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        insertNode: {\n            default()\n            {\n                return true;\n            }\n        },\n\n        removeNode: {\n            default()\n            {\n                return true;\n            }\n        },\n\n        allowSelect: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        allowDrag: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        allowDrop: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        keyEvents: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        highlightTimeout: {\n            default()\n            {\n                return 7000;\n            },\n            type: [Number]\n        }\n\n    },\n\n    provide()\n    {\n        return {\n            NDraggable: this\n        };\n    },\n\n    data()\n    {\n        return {\n            uid: UUID(),\n            virtuals: [], \n            visible: [], \n            childNodes: {}, \n            highlight: [],\n            firstSelected: null, \n            tempCurrent: this.current, \n            tempExpanded: this.expanded, \n            tempSelected: this.selected\n        };\n    },\n\n    beforeMount()\n    {\n        this.drag = new NDraghandler(this);\n    },\n\n    mounted()\n    {\n        this.drag.bindRoot();\n\n        this.$watch('tempSelected', this.watchSelected, \n            { deep: true });\n\n        Any.async(this.refreshVirtuals);\n    },\n\n    beforeUnmount()\n    {\n        this.drag.unbindRoot();\n    },\n\n    unmounted()\n    {\n        this.drag.destroy();\n    },\n\n    watch: {\n        \n        items()\n        {\n            if ( this.scrollTopOnChange ) {\n                this.scrollTo();\n            }\n\n            this.refreshVirtuals();\n        },\n\n        virtuals()\n        {\n            this.filterVirtuals();\n        },\n\n        selected(value)\n        {\n            this.tempSelected = value;\n        },\n\n        current(value)\n        {\n            this.tempCurrent = value;\n        }\n\n    },\n\n    methods: {\n\n        watchSelected()\n        {\n            if ( ! this.tempSelected.length ) {\n                return this.firstSelected = null;\n            }\n\n            let first = Arr.find(this.virtuals, {\n                [this.uniqueProp]: this.tempSelected[0]\n            });\n\n            this.firstSelected = first;\n        },\n\n        refreshVirtuals()\n        {\n            this.virtuals = this.drag.reduce(this.items);\n            console.log('Total virtual items mounted: ' + this.virtuals.length);\n        },\n\n        filterVirtuals()\n        {\n            this.visible = Arr.filter(this.virtuals, (node) => {\n                return ! node.depth || Arr.has(this.tempExpanded, node.parent);\n            });\n        },\n\n        scrollTo(x = 0, y = 0)\n        {\n            this.$refs.virtualscroller.scrollTo(x, y);\n        },\n\n        isDraggable(node)\n        {\n            let canDrag = this.allowDrag;\n\n            if ( ! Any.isFunction(canDrag) ) {\n                canDrag = () => this.allowDrag;\n            }\n\n            return canDrag(node);\n        },\n\n        isHighlight(node)\n        {\n            return Arr.has(this.highlight, node.value[this.uniqueProp]);\n        },\n\n        highlightNode(value, key = null)\n        {\n            clearTimeout(this.refresh);\n\n            Arr.recursive(this.items, this.childProp, (node, cascade) => {\n\n                if ( Obj.get(node, key || this.uniqueProp) !== value ) {\n                    return;\n                }\n\n                Arr.each(cascade, (item) => {\n                    Arr.add(this.tempExpanded, item[this.uniqueProp]);\n                });\n\n                Arr.add(this.highlight, node[this.uniqueProp]);\n            });\n\n            if ( ! this.highlight.length ) {\n                return;\n            }\n\n            this.$nextTick(this.scrollToHighlight);\n            \n            this.refresh = setTimeout(() => \n                this.highlight = [], this.highlightTimeout);\n            \n            this.filterVirtuals();\n        },\n\n        scrollToHighlight()\n        {\n            if ( ! this.highlight.length ) {\n                return;\n            }\n\n            let index = Arr.findIndex(this.visible, {\n                [this.uniqueProp]: Arr.first(this.highlight)\n            });\n\n            this.$refs.virtualscroller.scrollIntoView(index);\n        },\n\n        isCurrent(node)\n        {\n            return this.renderCurrent && this.tempCurrent && \n                node.value[this.uniqueProp] === this.tempCurrent[this.uniqueProp] ;\n        },\n\n        setCurrent(node)\n        {\n            let isSameNode = this.tempCurrent && \n                this.tempCurrent[this.uniqueProp] === node.value[this.uniqueProp];\n\n            if ( isSameNode ) {\n                return;\n            }\n\n            this.$emit('update:current', \n                this.tempCurrent = node.item);\n            \n            Event.fire('NDraglist:syncCurrent', node.item, this.uid);\n        },\n\n        setRawCurrent(index)\n        {\n            let route = Obj.get(this.visible, \n                [index, 'route']);\n\n            if ( ! route ) {\n                return this.setRawCurrent(0);\n            }\n\n            let item = Obj.get(this, route);\n\n            this.$refs.virtualscroller\n                .scrollIntoView(index);\n\n            this.$emit('update:current', \n                this.tempCurrent = item);\n            \n            Event.fire('NDraglist:syncCurrent', item, this.uid);\n        },\n\n        setNextCurrent()\n        {\n            if ( ! this.visible.length ) {\n                return;\n            }\n\n            let reset = 0;\n\n            if ( ! this.tempCurrent ) {\n                return this.setRawCurrent(reset);\n            }\n\n            let index = Arr.findIndex(this.visible, {\n                [this.uniqueProp]: this.tempCurrent[this.uniqueProp]\n            });\n\n            if ( index !== -1 ) {\n                index++;\n            }\n\n            if ( index >= this.visible.length ) {\n                index = reset;\n            }\n\n            this.setRawCurrent(index);\n        },\n\n        setPrevCurrent()\n        {\n            if ( ! this.visible.length ) {\n                return;\n            }\n\n            let reset = this.items.length - 1;\n\n            if ( ! this.tempCurrent ) {\n                return this.setRawCurrent(reset);\n            }\n\n            let index = Arr.findIndex(this.visible, {\n                [this.uniqueProp]: this.tempCurrent[this.uniqueProp]\n            });\n\n            if ( index !== -1 ) {\n                index--;\n            }\n\n            if ( index < 0 ) {\n                index = reset;\n            }\n            \n            this.setRawCurrent(index);\n        },\n\n        syncCurrent()\n        {\n            return ['NDraglist:syncCurrent', this.uid];\n        },\n\n        isDisabled(node)\n        {\n            return this.firstSelected && \n                node.value.depth !== this.firstSelected.depth;\n        },\n\n        hasChildren(node)\n        {\n            return !! this.getChildren(node).length;\n        },\n\n        getChildren(node)\n        {\n            return Obj.get(node.item, this.childProp, []);\n        },\n\n        isExpanded(node)\n        {\n            return Arr.has(this.tempExpanded, node.value[this.uniqueProp]);\n        },\n\n        expandItem(node)\n        {\n            if ( ! this.hasChildren(node) ) {\n                return;\n            }\n\n            Arr.toggle(this.tempExpanded, node.value[this.uniqueProp]);\n\n            this.filterVirtuals();\n        },\n\n        expandCurrent()\n        {\n            if ( ! this.tempCurrent ) {\n                return;\n            }\n\n            let children = Obj.get(this.tempCurrent, \n                this.childProp);\n\n            if ( Any.isEmpty(children) ) {\n                return;\n            }\n\n            Arr.toggle(this.tempExpanded, \n                this.tempCurrent[this.uniqueProp]);\n\n            this.filterVirtuals();\n        },\n\n        isSelected(node)\n        {\n            return Arr.has(this.tempSelected, node.value[this.uniqueProp]);\n        },\n\n        isTotalSelected()\n        {\n            let visible = Arr.filter(this.visible, (item) => {\n                return ! item.depth;\n            });\n\n            return visible.length === this.tempSelected;\n        },\n\n        isInterSelected()\n        {\n            let visible = Arr.filter(this.visible, (item) => {\n                return ! item.depth;\n            });\n\n            return visible.length !== this.tempSelected &&\n                this.tempSelected;\n        },\n\n        selectItem(node)\n        {\n            if ( this.isDisabled(node) ) {\n                return;\n            }\n\n            Arr.toggle(this.tempSelected, node.value[this.uniqueProp]);\n\n            this.$emit('update:selected', this.tempSelected);\n        },\n\n        selectAll()\n        {\n            let visible = Arr.filter(this.visible, (item) => {\n                return ! item.depth;\n            });\n\n            let indexies = Arr.each(visible, (item) => {\n                return item[this.uniqueProp];\n            });\n\n            if ( indexies.length === this.tempSelected.length ) {\n                return this.$emit('update:selected', this.tempSelected = []);\n            }\n\n            this.$emit('update:selected', this.tempSelected = indexies);\n        },\n\n        unselectAll()\n        {\n            if ( this.tempSelected.length ) {\n                this.$emit('update:selected', this.tempSelected = []);\n            }\n        },\n\n        bindKeydown()\n        {\n            if ( ! this.keyEvents ) {\n                return;\n            }\n\n            Dom.find(document).on('keydown', \n                this.onKeydown, this.uid)\n        },\n\n        unbindKeydown()\n        {\n            if ( ! this.keyEvents ) {\n                return;\n            }\n\n            Dom.find(document).off('keydown', \n                null, this.uid)\n        },\n\n        onKeydown(event)\n        {\n            if ( event.which === 32 ) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.expandCurrent();\n            }\n\n            if ( event.which === 38 ) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.setPrevCurrent();\n            }\n\n            if ( event.which === 40 ) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.setNextCurrent();\n            }\n        }\n\n    },\n\n    renderEmpty()\n    {\n        return (\n            <NEmptyIcon disabled={! this.showEmptyIcon} class=\"n-draglist__empty\">\n                 { this.$slots.empty && this.$slots.empty() || this.trans('No entries') }\n            </NEmptyIcon>\n        );\n    },\n\n    renderItem(props)\n    {\n        return (\n            <NDraglistItem data-unique={props.value[this.uniqueProp]} {...Obj.except(props, ['index'])}>\n                { { default: this.$slots.default } }\n            </NDraglistItem>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-draglist',\n            'n-draglist--' + this.size,\n            'n-draglist--' + this.type\n        ];\n\n        if ( ! this.items.length ) {\n            classList.push('n-empty');\n        }\n\n        let props = Obj.only(this.$props, ['threshold', 'itemHeight'], {\n            items: this.visible,\n            onMouseenter: this.bindKeydown,\n            onMouseleave: this.unbindKeydown\n        });\n\n        return (\n            <NVirtualscroller ref=\"virtualscroller\" class={classList} {...props}>\n                { { default: this.ctor('renderItem'), empty: this.ctor('renderEmpty') } }\n            </NVirtualscroller>\n        );\n    }\n\n}\n","import { UUID, Num, Arr, Obj, Dom, Any, Event } from \"nano-js\";\nimport draggable from \"../..\";\nimport NDraggableItem from \"../draggable-item/draggable-item\";\n\nexport default {\n\n    name: 'NDraglistItem',\n\n    inject: {\n\n        NDraggable: {\n            default: undefined\n        }\n    \n    },\n\n    props: {\n\n        value: {\n            required: true\n        }\n\n    },\n\n    computed: {\n\n        item()\n        {\n            return Obj.get(this.NDraggable, this.value.route);\n        }\n\n    },\n\n    mounted()\n    {\n        this.NDraggable.drag.bindNode(this);\n    },\n\n    beforeUnmount()\n    {\n        this.NDraggable.drag.unbindNode(this);\n    },\n\n    methods: {\n\n        hasChildren()\n        {\n            return this.NDraggable.hasChildren(this);\n        },\n\n        isDisabled()\n        {\n            return this.NDraggable.isDisabled(this);\n        },\n\n        isHighlight()\n        {\n            return this.NDraggable.isHighlight(this);\n        },\n\n        isCurrent()\n        {\n            return this.NDraggable.isCurrent(this);\n        },\n\n        isDraggable()\n        {\n            return this.NDraggable.isDraggable(this);\n        },\n\n        isExpanded()\n        {\n            return this.NDraggable.isExpanded(this);\n        },\n\n        expandItem()\n        {\n            this.NDraggable.expandItem(this);\n        },\n\n        isSelected()\n        {\n            return this.NDraggable.isSelected(this);\n        },\n\n        selectItem()\n        {\n            this.NDraggable.selectItem(this);\n        },\n\n        onClick()\n        {\n            this.NDraggable.setCurrent(this);\n\n            this.NDraggable.$emit('row-click', this);\n        },\n\n        onDblclick()\n        {\n            this.NDraggable.setCurrent(this);\n\n            this.NDraggable.$emit('row-dblclick', this);\n        }\n\n    },\n\n    renderElement()\n    {\n        let props = {\n            value: this.value, item: this.item\n        };\n\n        let renderFunction = this.$slots.default;\n\n        if ( this.NDraggable.renderNode ) {\n            renderFunction = this.NDraggable.renderNode;\n        }\n\n        return (\n            <div class=\"n-draglist-item__element\">\n                { renderFunction(props) }\n            </div>\n        );\n    },\n\n    renderSpacer()\n    {\n        let width = this.value.depth * \n            this.NDraggable.itemOffset;\n\n        if ( ! width ) {\n            return null;\n        }\n\n        let style = {\n            width: width + 'px'\n        };\n\n        return (\n            <div class=\"n-draglist-item__spacer\" style={style}>\n                { /* SPACER */ }\n            </div>\n        );\n    },\n\n    renderHandle()\n    {\n        if ( ! this.NDraggable.renderHandle ) {\n            return null;\n        }\n\n        let props = {};\n\n        if ( this.isDraggable() ) {\n            props.draggable = true;\n        }\n\n        return (\n            <div class=\"n-draglist-item__handle\" {...props}>\n                <div class=\"n-draglist-item__ellipsis\">\n                    <i class={ this.icons.handle }></i>\n                </div>\n            </div>\n        );\n    },\n\n    renderExpand()\n    {\n        if ( ! this.NDraggable.renderExpand ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-draglist-item__expand\" onMousedown={this.expandItem}>\n                <div class=\"n-draglist-item__angle\">\n                    <i class={ this.icons.angleRight }></i>\n                </div>\n            </div>\n        );\n    },\n\n    renderSelect()\n    {\n        if ( ! this.NDraggable.renderSelect ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-draglist-item__select\" onMousedown={this.selectItem}>\n                <div class=\"n-draglist-item__checkbox\">\n                    <i class={ this.icons.checked }></i>\n                </div>\n            </div>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-draglist-item'\n        ];\n\n        if ( this.hasChildren() ) {\n            classList.push('n-children');\n        }\n\n        if ( this.isDisabled() ) {\n            classList.push('n-disabled');\n        }\n\n        if ( this.isSelected() ) {\n            classList.push('n-selected');\n        }\n\n        if ( this.isExpanded() ) {\n            classList.push('n-expanded');\n        }\n\n        if ( this.isCurrent() ) {\n            classList.push('n-current');\n        }\n\n        if ( this.isHighlight() ) {\n            classList.push('n-highlight');\n        }\n\n        let props = {\n            onClick: this.onClick,\n            onDblclick: this.onDblclick,\n        };\n\n        if ( ! this.NDraggable.handle && this.isDraggable() ) {\n            props.draggable = true;\n        }\n\n        return (\n            <div class={classList} {...props}>\n                { this.ctor('renderSpacer')() }\n                { this.ctor('renderExpand')() }\n                { this.ctor('renderSelect')() }\n                { this.ctor('renderElement')() }\n            </div>\n        );\n    }\n\n}\n","import { UUID, Num, Arr, Obj, Dom, Any, Event, Locale } from \"nano-js\";\n\nexport default {\n\n    // name: 'NDraggable',\n\n    model: {\n        prop: 'items'\n    },\n\n    props: {\n\n        items: {\n            default()\n            {\n                return [];\n            }\n        },\n\n        handle: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        renderNode: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        current: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        selected: {\n            default()\n            {\n                return [];\n            }\n        },\n\n        expanded: {\n            default()\n            {\n                return [];\n            }\n        },\n\n        group: {\n            default()\n            {\n                return ['default'];\n            },\n            type: [Array]\n        },\n\n        allowGroups: {\n            default()\n            {\n                return this.group;\n            },\n            type: [Array]\n        },\n\n        safeZone: {\n            default()\n            {\n                return (height) => height * 0.51;\n            }\n        },\n\n        showEmpty: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        itemHeight: {\n            default()\n            {\n                return 34;\n            },\n            type: [Number]\n        },\n\n        itemOffset: {\n            default()\n            {\n                return 30;\n            },\n            type: [Number]\n        },\n\n        viewportHeight: {\n            default()\n            {\n                return false;\n            }\n        },\n\n        scrollTopOnChange: {\n            default()\n            {\n                return true;\n            }\n        },\n\n        keyProp: {\n            default()\n            {\n                return 'md5';\n            },\n            type: [String]\n        },\n\n        orderProp: {\n            default()\n            {\n                return 'order';\n            },\n            type: [String]\n        },\n\n        uniqueProp: {\n            default()\n            {\n                return 'id';\n            },\n            type: [String]\n        },\n\n        depthProp: {\n            default()\n            {\n                return 'depth';\n            },\n            type: [String]\n        },\n\n        pathProp: {\n            default()\n            {\n                return 'path';\n            },\n            type: [String]\n        },\n\n        indexProp: {\n            default()\n            {\n                return 'index';\n            },\n            type: [String]\n        },\n\n        cascadeProp: {\n            default()\n            {\n                return 'cascade';\n            },\n            type: [String]\n        },\n\n        childProp: {\n            default()\n            {\n                return 'children';\n            },\n            type: [String]\n        },\n\n        renderSelect: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        renderExpand: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        ghostMode: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        transformDrop: {\n            default()\n            {\n                return (item) => item;\n            }\n        },\n\n        disableMove: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        insertNode: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        removeNode: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        allowCurrent: {\n            default()\n            {\n                return true;\n            }\n        },\n\n        allowSelect: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        allowDrag: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        allowDrop: {\n            default()\n            {\n                return () => true;\n            }\n        },\n\n        wrapNode: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        updateDelay: {\n            default()\n            {\n                return 100;\n            },\n            type: [Number]\n        },\n\n        keyEvents: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        keyDebounce: {\n            default()\n            {\n                return 100;\n            },\n            type: [Number]\n        },\n\n        loadingInit: {\n            default()\n            {\n                return 0;\n            }\n        },\n\n        loadingDelay: {\n            default()\n            {\n                return 0;\n            },\n            type: [Number]\n        },\n\n        loadingMax: {\n            default()\n            {\n                return 1250;\n            },\n            type: [Number]\n        },\n\n        loadingMin: {\n            default()\n            {\n                return 350;\n            },\n            type: [Number]\n        },\n\n        useRenderCache: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            veInview: false,\n            veLoad: true,\n            veCopy: [],\n            veItems: [],\n            veKeyBuffer: [],\n            veCurrent: this.current,\n            veSelected: this.selected,\n            veExpanded: this.expanded\n        };\n    },\n\n    provide()\n    {\n        return {\n            NDraggable: this\n        }\n    },\n\n    methods: {\n\n        getParentById(unique, fallback = null)\n        {\n            let item = Arr.find(this.veItems, {\n                [this.uniqueProp]: unique\n            });\n\n            if ( Any.isEmpty(item) ) {\n                return fallback;\n            }\n\n            let key = item[this.pathProp]\n            .replace(/(^veCopy$|\\.[^\\.]+$)/, '');\n\n            if ( Any.isEmpty(key) ) {\n                return fallback;\n            }\n            \n            return Obj.get(this, key, fallback);\n        },\n\n        scrollTo(y = 0)\n        {\n            this.$refs.vscroller.scrollTop(y);\n        },\n\n        startLoading()\n        {\n            if ( this.loadingInit && this.veLoad ) {\n                return this.addLoader(this.loadingInit);\n            }\n\n            if ( ! this.loadingDelay ) {\n                return;\n            }\n\n            let itemDiff = this.veItems.length -\n                (this.veLoadLength || 0);\n\n            let loadingTime = (itemDiff * Math.sqrt(itemDiff * 0.5)) *\n                this.loadingDelay;\n\n            this.veLoadLength = this.veItems.length;\n\n            if ( loadingTime <= 0 || loadingTime <= this.loadingMin ) {\n                return;\n            }\n\n            this.addLoader(Math.min(loadingTime, this.loadingMax));\n        },\n\n        addLoader(delay)\n        {\n            if ( ! this.$el ) {\n                return Any.delay(() => this.addLoader(delay), 50);\n            }\n\n            this.veLoad = false;\n\n            Any.delay(() => {\n                Dom.find(this.$el).addClass('n-load');\n            }, 0);\n\n            Any.delay(() => {\n                Dom.find(this.$el).removeClass('n-load');\n            }, delay)\n        },\n\n        pushItem(item, index = null)\n        {\n            if ( index === null ) {\n                index = Obj.get(this.veCurrent, this.depthProp, 1) ? this.veCopy.length :\n                    Obj.get(this.veCurrent, this.indexProp) + 1;\n            }\n\n            this.veCopy.splice(index, 0, item);\n\n            this.refreshItems();\n        },\n\n        exportItems()\n        {\n            if ( Any.md5(this.items) === Any.md5(this.veCopy) ) {\n                return;\n            }\n\n            this.$emit('input', this.veCopy);\n        },\n\n        importItems(items = null)\n        {\n            items = items || this.items;\n\n            if ( Any.md5(items) === Any.md5(this.veCopy) ) {\n                return;\n            }\n\n            if ( this.$refs.vscroller && this.scrollTopOnChange ) {\n                this.$refs.vscroller.scrollTop(0);\n            }\n\n            this.veCopy = Obj.clone(items);\n\n            this.refreshItems();\n        },\n\n        refreshItems()\n        {\n            this.veItems = this.itemReducer([], this.veCopy);\n\n            if ( ! Any.isEmpty(this.loadingDelay) ) {\n                this.startLoading();\n            }\n\n            this.refreshCurrent();\n\n            this.$emit('hook:refreshed');\n        },\n\n        moveItems(event, target, strategy = 'inner')\n        {\n            target = this.getTarget(target);\n\n            let ids = Arr.each(this.veCached, (item) => {\n                return item[this.uniqueProp];\n            });\n\n            if ( Any.isEmpty(ids) ) {\n                return;\n            }\n\n            this.$emit('move', ids.join(','), target[this.uniqueProp], strategy);\n            this.$emit('move-code', this.veCached, target, strategy);\n\n            if ( this.disableMove ) {\n                return;\n            }\n\n            let cacheBatches = this.getCachedBatches();\n\n            let targetOrder = target[this.indexProp] + 1;\n\n            if ( target[this.orderProp] && target[this.orderProp].length > 1 ) {\n                targetOrder = Num.int(target[this.orderProp].slice(0, -1).join(''));\n            }\n\n            let batchedBefore = Obj.filter(Any.vals(cacheBatches).reverse(), (batch) => {\n                return Num.int(batch['_key']) >= targetOrder;\n            });\n\n            let batchedAfter = Obj.filter(Any.vals(cacheBatches).reverse(), (batch) => {\n                return Num.int(batch['_key']) < targetOrder;\n            });\n\n            if ( strategy === 'root' ) {\n\n                Arr.each(this.veCached, (source) => {\n\n                    let insertNode = Any.isFunction(this.insertNode) ?\n                        this.insertNode(source, target) : this.insertNode;\n\n                    if ( ! insertNode ) {\n                        return;\n                    }\n\n                    Arr.push(this.veCopy, this.transformDrop(source.item));\n                });\n\n            }\n\n            if ( strategy === 'inner' ) {\n\n                let finalParent = Obj.get(this, target[this.pathProp]);\n\n                let finalTarget = Arr.find(finalParent, {\n                    [this.uniqueProp]: target[this.uniqueProp]\n                });\n\n                if ( finalTarget[this.childProp] === undefined ) {\n                    finalTarget[this.childProp] = [];\n                }\n\n                Arr.each(cacheBatches, (batch) => {\n\n                    delete batch['_key'];\n\n                    Arr.each(batch, (source) => {\n\n                        // Add item before last item added, also transform item\n                        Arr.push(finalTarget[this.childProp], this.transformDrop(source.item));\n                    });\n\n                    Arr.each(batch, this.dropItem);\n                });\n\n                Arr.each(this.veCached, (source) => {\n\n                    let insertNode = Any.isFunction(this.insertNode) ?\n                        this.insertNode(source, target) : this.insertNode;\n\n                    if ( ! insertNode ) {\n                        return;\n                    }\n\n                    // Add item before last item added, also transform item\n                    Arr.push(finalTarget[this.childProp], this.transformDrop(source.item));\n                });\n            }\n\n            if ( strategy === 'after' ) {\n\n                let delayedItems = [];\n\n                Arr.each(Any.vals(batchedBefore), (batch) => {\n\n                    delete batch['_key'];\n\n                    Arr.each(batch, (source) => {\n                        delayedItems.push(source)\n                    });\n\n                    Arr.each(batch, this.dropItem);\n                });\n\n                Arr.each(Any.vals(delayedItems), (source) => {\n\n                    let finalTarget = Obj.get(this, target[this.pathProp]);\n\n                    let finalIndex = Arr.findIndex(finalTarget, {\n                        [this.uniqueProp]: target[this.uniqueProp]\n                    });\n\n                    // Add item before last item added, also transform item\n                    Arr.insert(finalTarget, finalIndex + 1, this.transformDrop(source.item));\n                });\n\n                Arr.each(Any.vals(batchedAfter), (batch) => {\n\n                    delete batch['_key'];\n\n                    Arr.each(batch.reverse(), (source) => {\n\n                        let finalTarget = Obj.get(this, target[this.pathProp]);\n\n                        let finalIndex = Arr.findIndex(finalTarget, {\n                            [this.uniqueProp]: target[this.uniqueProp]\n                        });\n\n                        // Add item before last item added, also transform item\n                        Arr.insert(finalTarget, finalIndex + 1, this.transformDrop(source.item));\n                    });\n\n                    Arr.each(batch, this.dropItem);\n\n                });\n\n                Arr.each(this.veCached.reverse(), (source) => {\n\n                    let insertNode = Any.isFunction(this.insertNode) ?\n                        this.insertNode(source, target) : this.insertNode;\n\n                    if ( ! insertNode ) {\n                        return;\n                    }\n\n                    let finalTarget = Obj.get(this, target[this.pathProp]);\n\n                    let finalIndex = Arr.findIndex(finalTarget, {\n                        [this.uniqueProp]: target[this.uniqueProp]\n                    });\n\n                    // Add item before last item added, also transform item\n                    Arr.insert(finalTarget, finalIndex + 1, this.transformDrop(source.item));\n                });\n            }\n\n            if ( strategy === 'before' ) {\n\n                let delayedItems = [];\n\n                Arr.each(Any.vals(batchedBefore), (batch) => {\n\n                    delete batch['_key'];\n\n                    Arr.each(batch.reverse(), (source) => {\n                        delayedItems.push(source)\n                    });\n\n                    Arr.each(batch, this.dropItem);\n                });\n\n                Arr.each(Any.vals(delayedItems).reverse(), (source) => {\n\n                    let finalTarget = Obj.get(this, target[this.pathProp]);\n\n                    let finalIndex = Arr.findIndex(finalTarget, {\n                        [this.uniqueProp]: target[this.uniqueProp]\n                    });\n\n                    // Add item before last item added, also transform item\n                    Arr.insert(finalTarget, finalIndex, this.transformDrop(source.item));\n                });\n\n                Arr.each(Any.vals(batchedAfter).reverse(), (batch) => {\n\n                    delete batch['_key'];\n\n                    let finalTarget = Obj.get(this, target[this.pathProp]);\n\n                    let finalIndex = Arr.findIndex(finalTarget, {\n                        [this.uniqueProp]: target[this.uniqueProp]\n                    });\n\n                    Arr.each(batch.reverse(), (source) => {\n\n                        // Add item before last item added, also transform item\n                        Arr.insert(finalTarget, finalIndex, this.transformDrop(source.item));\n                    });\n\n                    Arr.each(batch, this.dropItem);\n\n                });\n\n                Arr.each(this.veCached, (source) => {\n\n                    let insertNode = Any.isFunction(this.insertNode) ?\n                        this.insertNode(source, target) : this.insertNode;\n\n                    if ( ! insertNode ) {\n                        return;\n                    }\n\n                    let finalTarget = Obj.get(this, target[this.pathProp]);\n\n                    let finalIndex = Arr.findIndex(finalTarget, {\n                        [this.uniqueProp]: target[this.uniqueProp]\n                    });\n\n                    // Add item before last item added, also transform item\n                    Arr.insert(finalTarget, finalIndex, this.transformDrop(source.item));\n                });\n            }\n\n            // Indicate update items\n            this.veModified = true;\n\n            Event.fire('draggable.done');\n        },\n\n        getCachedBatches()\n        {\n            let batches = Arr.reduce(this.veSelfCached, (merge, source) => {\n\n                let batchKey = source[this.orderProp].slice(0, -1).join('') ||\n                    source[this.indexProp] + 1;\n\n                if ( ! Obj.has(merge, batchKey) ) {\n                    merge[batchKey] = [];\n                }\n\n                let result = Obj.only(source, [\n                    this.uniqueProp, this.pathProp, this.indexProp\n                ]);\n\n                result['item'] = Obj.clone(source.item);\n\n                merge[batchKey].push(result);\n\n                return merge;\n\n            }, {});\n\n            Arr.map(batches, (batch) => {\n\n                let sorted = Arr.sort(batch, item => item[this.orderProp].join(''));\n\n                return Arr.each(sorted, (item) => Obj.except(item, ['_key']));\n            });\n\n            return Obj.sort(batches, (batch) => {\n                return Arr.first(batch)[this.orderProp].join('');\n            });\n        },\n\n        dropItem(source)\n        {\n            Arr.remove(Obj.get(this, source[this.pathProp]), {\n                [this.uniqueProp]: source[this.uniqueProp]\n            });\n\n            this.veCached = Arr.remove(this.veCached, {\n                [this.uniqueProp]: source[this.uniqueProp]\n            });\n\n            this.veSelfCached = Arr.remove(this.veSelfCached, {\n                [this.uniqueProp]: source[this.uniqueProp]\n            });\n        },\n\n        dropItems()\n        {\n            Arr.each(this.veSelfCached, (source) => {\n\n                let removeNode = Any.isFunction(this.removeNode) ?\n                    this.removeNode(source) : this.removeNode;\n\n                if ( ! removeNode ) {\n                    return;\n                }\n\n                Arr.remove(Obj.get(this, source[this.pathProp]), {\n                    [this.uniqueProp]: source[this.uniqueProp]\n                });\n\n                this.veModified = true;\n            });\n\n            if ( this.veModified ) {\n                this.refreshItems();\n            }\n        },\n\n        clearItems()\n        {\n            this.veCached = [];\n            this.veSelfCached = [];\n\n            if ( this.veSelected.length ) {\n                this.veSelected = [];\n                this.updateSelected();\n            }\n\n            if ( this.veModified ) {\n                this.$emit('moved', this.veCopy);\n            }\n\n            this.veModified = false;\n\n            this.removeDragCounter();\n            this.removeDragIndicator();\n        },\n\n        cacheItems(items, group = ['default'])\n        {\n            if ( Arr.intersect(group, this.allowGroups).length ) {\n                this.veCached = Arr.each(items, (item) => Obj.clone(item));\n            }\n        },\n\n        updateExpanded()\n        {\n            this.$emit('update:expanded', this.veExpanded);\n        },\n\n        expandItem(id)\n        {\n            if ( ! Any.isString(id) ) {\n                id = id[this.uniqueProp];\n            }\n\n            Arr.toggle(this.veExpanded, id);\n\n            this.refreshItems();\n            this.updateExpanded();\n        },\n\n        isExpanded(id)\n        {\n            if ( ! Any.isString(id) ) {\n                id = id[this.uniqueProp];\n            }\n\n            return ! Arr.has(this.veExpanded, id);\n        },\n\n        updateSelected()\n        {\n            this.$emit('update:selected', this.veSelected);\n        },\n\n        dispatchSelected()\n        {\n            let selected = Arr.each(this.veSelected, (data) => {\n                return this.getTarget(data);\n            });\n\n            this.veSelfCached = Arr.clone(selected);\n\n            Event.fire('draggable.start', selected, this.group);\n        },\n\n        getTarget(unique)\n        {\n            if ( ! Any.isString(unique) ) {\n                unique = unique[this.uniqueProp];\n            }\n\n            let target = Arr.find(this.veItems, {\n                [this.uniqueProp]: unique\n            });\n\n            let defaultTarget = {\n                [this.pathProp]: 'veCopy',\n                [this.indexProp]: 0,\n                [this.uniqueProp]: unique,\n            };\n\n            if ( ! target ) {\n                return defaultTarget;\n            }\n\n            target['item'] = Obj.get(this, target[this.pathProp] + '.' +\n                target[this.indexProp]);\n\n            return target;\n        },\n\n        highlightItem(value, prop = null)\n        {\n            if ( ! prop ) {\n                prop = this.uniqueProp;\n            }\n\n            if ( ! Any.isString(value) ) {\n                value = value[prop];\n            }\n\n            let finalProps = [];\n\n            Arr.recursive(this.items, this.childProp, (item, cascade) => {\n\n                if ( item[prop] !== value ) {\n                    return;\n                }\n\n                finalProps.push(item[this.uniqueProp]);\n\n                let keys = Arr\n                    .each(cascade, (sub) => {\n                        return sub[this.uniqueProp];\n                    })\n                    .filter((item) => {\n                        return this.veExpanded.indexOf(item) === -1;\n                    });\n\n                this.veExpanded = Arr.merge(this.veExpanded, keys);\n            });\n\n            if ( ! finalProps.length ) {\n                return;\n            }\n\n            this.updateExpanded();\n            this.refreshItems();\n\n            this.$nextTick(() => {\n                this.highlightTimer(finalProps);\n            });\n        },\n\n        highlightTimer(finalProps = [])\n        {\n            clearTimeout(this.highlightDelay);\n\n            Dom.find(this.$el).find('.n-highlight')\n                .removeClass('n-highlight');\n\n            Arr.each(finalProps, (unique, index) => {\n\n                if ( ! index ) {\n                    this.scrollToItem(unique);\n                }\n\n                Dom.find(this.$el).find(`[data-id=\"${unique}\"]`)\n                    .addClass('n-highlight');\n            });\n\n            this.highlightDelay = setTimeout(() => {\n                Dom.find(this.$el).find('.n-highlight')\n                    .removeClass('n-highlight');\n            }, 5000);\n        },\n\n        scrollToItem(unique)\n        {\n            if ( ! Any.isString(unique) ) {\n                unique = unique[this.uniqueProp];\n            }\n\n            let index = Arr.findIndex(this.veItems, {\n                [this.uniqueProp]: unique\n            });\n\n            // Get viewport height\n            let height = Dom.find(this.$el).height();\n\n            // Get scrolltop from virtual scroller\n            let scrollY = this.$refs.vscroller.scrollTop();\n\n            // Row is inview\n            let veInview = scrollY < this.itemHeight * index &&\n                scrollY + height > this.itemHeight * (index + 1);\n\n            if ( veInview ) {\n                return;\n            }\n\n            // New scrolltop value\n            scrollX = this.itemHeight * index;\n\n            this.$refs.vscroller.scrollTop(scrollX);\n        },\n\n        isCurrent(unique)\n        {\n            if ( ! this.veCurrent ) {\n                return false;\n            }\n\n            if ( ! Any.isString(unique) ) {\n                unique = unique[this.uniqueProp];\n            }\n\n            return this.veCurrent[this.uniqueProp] === unique;\n        },\n\n        refreshCurrent()\n        {\n            if ( ! this.veCurrent || ! this.veCurrent[this.uniqueProp] ) {\n                return;\n            }\n\n            this.setCurrent(this.veCurrent[this.uniqueProp]);\n        },\n\n        updateCurrent(current)\n        {\n            this.$emit('update:current', this.veCurrent = current);\n        },\n\n        setCurrent(unique)\n        {\n            let current = this.getTarget(unique);\n\n            let isSameCurrent = Any.md5(current) ===\n                Any.md5(this.veCurrent);\n\n            if ( isSameCurrent ) {\n                return;\n            }\n\n            this.updateCurrent(current);\n        },\n\n        setDefaultCurrent()\n        {\n            let current = this.getTarget(this.veItems[0]);\n\n            let isSameCurrent = Obj.get(current, this.uniqueProp) ===\n                Obj.get(this.veCurrent, this.uniqueProp);\n\n            if ( isSameCurrent ) {\n                return;\n            }\n\n            this.updateCurrent(current);\n        },\n\n        currentDblclick()\n        {\n            if ( ! this.veCurrent ) {\n                return null;\n            }\n\n            this.$emit('row-dblclick', this.veCurrent);\n        },\n\n        currentCollapse()\n        {\n            if ( ! this.veCurrent ) {\n                return null;\n            }\n\n            this.expandItem(this.veCurrent);\n        },\n\n        currentPrev()\n        {\n            let index = 0;\n\n            if ( ! this.veCurrent ) {\n                return this.setDefaultCurrent();\n            }\n\n            index = Arr.findIndex(this.veItems, {\n                [this.uniqueProp]: this.veCurrent[this.uniqueProp]\n            });\n\n            index--;\n\n            if ( index < 0 ) {\n                index = this.veItems.length - 1;\n            }\n\n            // Get viewport height\n            let height = Dom.find(this.$el).height();\n\n            // Get scrolltop from virtual scroller\n            let scrollY = this.$refs.vscroller.scrollTop();\n\n            // Row is inview\n            let veInview = scrollY < this.itemHeight * index &&\n                scrollY + height > this.itemHeight * (index + 1);\n\n            if ( ! veInview ) {\n\n                // New scrolltop value\n                scrollX = this.itemHeight * index;\n\n                this.$refs.vscroller.scrollTop(scrollX);\n            }\n\n            let current = this.getTarget(this.veItems[index]);\n\n            this.updateCurrent(current);\n        },\n\n        currentNext()\n        {\n            let index = 0;\n\n            if ( ! this.veCurrent ) {\n                return this.setDefaultCurrent();\n            }\n\n            index = Arr.findIndex(this.veItems, {\n                [this.uniqueProp]: this.veCurrent[this.uniqueProp]\n            });\n\n            index++;\n\n            if ( index > this.veItems.length - 1 ) {\n                index = 0;\n            }\n\n            // Get viewport height\n            let height = Dom.find(this.$el).height();\n\n            // Get scrolltop from virtual scroller\n            let scrollY = this.$refs.vscroller.scrollTop();\n\n            // Row is inview\n            let veInview = scrollY < this.itemHeight * index &&\n                scrollY + height > this.itemHeight * (index + 1);\n\n            if ( ! veInview ) {\n\n                // New scrolltop value\n                scrollX = (this.itemHeight * (index + 1)) - height;\n\n                this.$refs.vscroller.scrollTop(scrollX);\n            }\n\n            let current = this.getTarget(this.veItems[index]);\n\n            this.updateCurrent(current);\n        },\n\n        removeItem(value)\n        {\n            let target = Obj.get(this, value[this.pathProp]);\n\n            Arr.removeIndex(target, value[this.indexProp]);\n\n            this.refreshItems();\n        },\n\n        copyItem(value)\n        {\n            let target = Obj.get(this, value[this.pathProp]);\n\n            let item = Obj.assign({}, value.veItem, {\n                [this.uniqueProp]: UUID()\n            });\n\n            Arr.insert(target, value[this.indexProp] + 1, item);\n\n            this.refreshItems();\n        },\n\n        toggleItem(id, reset = false)\n        {\n            if ( ! Any.isString(id) ) {\n                id = id[this.uniqueProp];\n            }\n\n            if ( reset ) {\n                this.veSelected = [];\n            }\n\n            Arr.toggle(this.veSelected, id);\n\n            this.updateSelected();\n        },\n\n        toggleAllItems(reset = true)\n        {\n            if ( reset ) {\n                this.veSelected = [];\n            }\n\n            Arr.each(this.veCopy, (item) => {\n                Arr.toggle(this.veSelected, item[this.uniqueProp]);\n            });\n\n            this.updateSelected();\n        },\n\n        selectItem(id, reset = false)\n        {\n            if ( ! Any.isString(id) ) {\n                id = id[this.uniqueProp];\n            }\n\n            if ( reset ) {\n                this.veSelected = [];\n            }\n\n            Arr.add(this.veSelected, id);\n\n            this.updateSelected();\n        },\n\n        selectAllItems()\n        {\n            this.veSelected = Arr.each(this.veCopy,\n                (item) => item[this.uniqueProp]);\n\n            this.updateSelected();\n        },\n\n        unselectItem(id)\n        {\n            if ( ! Any.isString(id) ) {\n                id = id[this.uniqueProp];\n            }\n\n            Arr.remove(this.veSelected, id);\n\n            this.updateSelected();\n        },\n\n        unselectAllItems()\n        {\n            this.veSelected = [];\n\n            this.updateSelected();\n        },\n\n        canSelect(element)\n        {\n            if ( Any.isString(element) ) {\n                element = Arr.find(this.veItems, {\n                    [this.uniqueProp]: element\n                });\n            }\n\n            if ( ! this.veSelected.length ) {\n                return true;\n            }\n\n            let first = Arr.find(this.veItems, {\n                [this.uniqueProp]: Arr.first(this.veSelected)\n            });\n\n            if ( ! first || ! element ) {\n                return false;\n            }\n\n            return element[this.depthProp] === first[this.depthProp];\n        },\n\n        isSelected(id)\n        {\n            if ( ! Any.isString(id) ) {\n                id = id[this.uniqueProp];\n            }\n\n            return Arr.has(this.veSelected, id);\n        },\n\n        isAllSelected(onlyFirstDepth = false)\n        {\n            let items = onlyFirstDepth ?\n                this.veCopy : this.veItems;\n\n            let selected = Arr.reduce(items, (merge, item) => {\n                return merge && Arr.has(this.veSelected, item[this.uniqueProp]);\n            }, true);\n\n            return selected && !! items.length;\n        },\n\n        isSelectable()\n        {\n            return !! this.veItems.length;\n        },\n\n        isIntermediate(onlyFirstDepth = false)\n        {\n            return ! this.isAllSelected(onlyFirstDepth)\n                && !! this.veSelected.length;\n        },\n\n        canDrag(element)\n        {\n            return true;\n        },\n\n        canDrop(element)\n        {\n            let targetPath = element[this.pathProp] + '.' +\n                element[this.indexProp];\n\n            let selected = Arr.each(this.veSelected, (item) => {\n                return Arr.find(this.veItems, { [this.uniqueProp]: item });\n            });\n\n            let result = Arr.filter(selected, (source) => {\n\n                let sourcePath =  source[this.pathProp] + '.' +\n                    source[this.indexProp];\n\n                return targetPath.indexOf(`${sourcePath}.`) !== -1 ||\n                    sourcePath === targetPath;\n            });\n\n            return ! result.length;\n        },\n\n        itemReducer(merge, items, depth = 0, path = 'veCopy', orders = [], cascade = [])\n        {\n            Arr.each(items, (item, index) => {\n\n                let dragObject = {\n                    [this.indexProp]: index,\n                    [this.pathProp]: path,\n                    [this.depthProp]: depth\n                };\n\n                dragObject[this.uniqueProp] = Obj.get(item, this.uniqueProp);\n\n                if ( ! dragObject[this.uniqueProp] ) {\n                    Obj.set(this, path + '.' + index + '.' + this.uniqueProp,\n                        dragObject[this.uniqueProp] = UUID());\n                }\n\n                // Order prop to sort on drag\n                dragObject[this.orderProp] = Arr.merge(orders, [\n                    index + 1\n                ]);\n\n                // Order prop to sort on drag\n                dragObject[this.cascadeProp] = Arr.merge(cascade, [\n                    dragObject[this.uniqueProp]\n                ]);\n\n                // Md5 item to check for any changes\n                dragObject[this.keyProp] = Any.md5(dragObject);\n\n                Arr.push(merge, dragObject);\n\n                if ( ! Arr.has(this.veExpanded, dragObject[this.uniqueProp]) ) {\n                    return;\n                }\n\n                let props = [\n                    Obj.get(item, this.childProp, []),\n                    depth + 1,\n                    `${path}.${index}.${this.childProp}`,\n                    dragObject[this.orderProp],\n                    dragObject[this.cascadeProp]\n                ];\n\n                this.itemReducer(merge, ...props);\n\n            });\n\n            return merge;\n        },\n\n        createDragIndicator()\n        {\n            if ( this.dragIndicator ) {\n                return;\n            }\n\n            this.dragIndicator = Dom.make('div', {\n                classList: ['n-draggable__indicator']\n            });\n\n            this.dragIndicator.attr('data-ignore', true);\n\n            this.dragIndicator.appendTo(this.$el);\n        },\n\n        updateDragIndicator(state = false, top = 0)\n        {\n            if ( ! this.dragIndicator ) {\n                this.createDragIndicator();\n            }\n\n            if ( ! state ) {\n                return this.dragIndicator.css({ visibility: 'hidden' });\n            }\n\n            this.dragIndicator.css({ visibility: 'visible', transform: `translateY(${top}px)` });\n        },\n\n        removeDragIndicator()\n        {\n            if ( this.dragIndicator ) {\n                this.dragIndicator.get(0).remove();\n            }\n\n            delete this.dragIndicator;\n        },\n\n        createDragCounter(event)\n        {\n            if ( this.dragCounter ) {\n                return;\n            }\n\n            this.dragCounter = Dom.make('div', {\n                classList: ['n-draggable__counter']\n            });\n\n            this.dragCounter.html(\n                `<span>${Locale.choice(':count Item|:count Items', this.veSelected.length)}</span>`\n            );\n\n            // Append dragimage to body\n            this.dragCounter.appendTo(document.body);\n\n            // Fix data transfer\n            event.dataTransfer.setData('text/plain', '');\n\n            if ( typeof event.dataTransfer.setDragImage !== 'function' ) {\n                return;\n            }\n\n            // Set finally the drop image\n            event.dataTransfer.setDragImage(this.dragCounter.get(0), 0, 0);\n        },\n\n        removeDragCounter()\n        {\n            if ( this.dragCounter ) {\n                this.dragCounter.get(0).remove();\n            }\n\n            delete this.dragCounter;\n        },\n\n        /**\n         * Event listeners\n         */\n\n        eventDragenter(event)\n        {\n            event.preventDefault();\n\n            if ( Dom.find(event.target).closest(this.$el) ) {\n                this.createDragIndicator(event);\n            }\n        },\n\n        eventDragleave(event)\n        {\n            event.preventDefault();\n\n            if ( Dom.find(event.target).closest(this.$el) ) {\n                this.updateDragIndicator(false);\n            }\n        },\n\n        eventDragend(event)\n        {\n            event.preventDefault();\n\n            if ( Dom.find(event.target).closest(this.$el) ) {\n                this.removeDragIndicator();\n            }\n        },\n\n        eventEmptyDragenter(event)\n        {\n            event.preventDefault();\n        },\n\n        eventEmptyDragover(event)\n        {\n            event.preventDefault();\n\n            Dom.find(this.$el).addClass('n-dragover');\n        },\n\n        eventEmptyDragleave(event)\n        {\n            Dom.find(this.$el).removeClass('n-dragover');\n        },\n\n        eventEmptyDragdrop(event)\n        {\n            event.preventDefault();\n\n            if ( Dom.find(event.target).closest('[data-id]') ) {\n                return;\n            }\n\n            let allowDropRainbow = Arr.each(this.veCached, (item) => {\n                return ! Any.isFunction(this.allowDrop) ? this.allowDrop :\n                    !! this.allowDrop(item, null, 'root');\n            });\n\n            if ( Arr.has(allowDropRainbow, false) ) {\n                return;\n            }\n\n            let virtualItem = {\n                [this.indexProp]: 0,\n                [this.uniqueProp]: null\n            };\n\n            Dom.find(this.$el).removeClass('n-dragover');\n\n            this.$emit('dragdrop', event, virtualItem, 'root');\n        },\n\n        eventMousemove(event, target)\n        {\n            this.veInview = Dom.find(target).closest(this.$el);\n        },\n\n        eventKeydown(event)\n        {\n            Arr.add(this.veKeyBuffer, event.which);\n\n            if ( ! this.veInview || ! this.keyEvents ) {\n                return;\n            }\n\n            if ( event.which === 13 ) {\n                event.preventDefault();\n                this.currentDblclick();\n            }\n\n            if ( event.which === 32 ) {\n                event.preventDefault();\n                this.currentCollapse();\n            }\n\n            if ( event.which === 38 || event.which === 37 ) {\n                event.preventDefault();\n\n                if ( this.lastUpdate && this.lastUpdate > Date.now() ) {\n                    return;\n                } else {\n                    this.lastUpdate = Date.now() + this.keyDebounce;\n                }\n\n                this.currentPrev();\n            }\n\n            if ( event.which === 40 || event.which === 39 ) {\n                event.preventDefault();\n\n                if ( this.lastUpdate && this.lastUpdate > Date.now() ) {\n                    return;\n                } else {\n                    this.lastUpdate = Date.now() + this.keyDebounce;\n                }\n\n                this.currentNext();\n            }\n        },\n\n        eventKeyup(event)\n        {\n            Arr.remove(this.veKeyBuffer, event.which);\n        }\n\n    },\n\n    watch: {\n\n        selected()\n        {\n            if ( Any.md5(this.selected) !== Any.md5(this.veSelected) ) {\n                this.veSelected = Obj.clone(this.selected);\n            }\n        },\n\n        expanded()\n        {\n            if ( Any.md5(this.expanded) !== Any.md5(this.veExpanded) ) {\n                this.veExpanded = Obj.clone(this.expanded);\n            }\n        }\n\n    },\n\n    beforeMount()\n    {\n        this.veModified = false;\n        this.veCached = [];\n        this.veSelfCached = [];\n\n        this.$watch('veCopy', Any.debounce(this.exportItems,\n            this.updateDelay));\n\n        this.$watch('items', Any.debounce(this.importItems,\n            this.updateDelay));\n\n        this.importItems();\n    },\n\n    mounted()\n    {\n        if ( this.allowCurrent ) {\n            this.$on('row-click', this.setCurrent);\n        }\n\n        this.$on('dragstart', this.dispatchSelected);\n        this.$on('dragstart', this.createDragCounter);\n        this.$on('dragstart', this.createDragIndicator);\n\n        this.$on('dragdrop', this.moveItems);\n\n        let ident = {\n            _uid: this.uid\n        };\n\n        Event.bind('draggable.start', this.cacheItems, ident);\n        Event.bind('draggable.stop', this.clearItems, ident);\n        Event.bind('draggable.done', this.dropItems, ident);\n\n        Dom.find(document).on('dragenter', this.eventDragenter, ident);\n        Dom.find(document).on('dragleave', this.eventDragleave, ident);\n        Dom.find(document).on('dragend', this.eventDragend, ident);\n\n        Dom.find(document).on('mousemove', this.eventMousemove, ident);\n        Dom.find(document).on('keydown', this.eventKeydown, ident);\n        Dom.find(document).on('keyup', this.eventKeyup, ident);\n    },\n\n    beforeDestroy()\n    {\n        let ident = {\n            _uid: this.uid\n        };\n\n        this.$off('row-click');\n        this.$off('dragstart');\n        this.$off('dragstart');\n        this.$off('dragstart');\n        this.$off('dragdrop');\n\n        Event.unbind('draggable.start', ident);\n        Event.unbind('draggable.stop', ident);\n        Event.unbind('draggable.done', ident);\n\n        Dom.find(document).off('dragenter', null, ident);\n        Dom.find(document).off('dragleave', null, ident);\n        Dom.find(document).off('dragend', null, ident);\n\n        Dom.find(document).off('mousemove', null, ident);\n        Dom.find(document).off('keydown', null, ident);\n    },\n\n}\n","import { UUID, Num, Arr, Obj, Dom, Any, Event, Locale } from \"nano-js\";\nimport NDraggable from \"../draggable/draggable\";\n\nexport default {\n\n    name: 'NDraggrid',\n\n    extends: NDraggable,\n\n    props: {\n\n        safeZone: {\n            default()\n            {\n                return (height) => -2;\n            }\n        },\n\n        itemHeight: {\n            default()\n            {\n                return 120;\n            },\n            type: [Number]\n        },\n\n        viewportHeight: {\n            default()\n            {\n                return false;\n            }\n        },\n\n        scrollTopOnChange: {\n            default()\n            {\n                return false;\n            }\n        },\n\n        wrapNode: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n    },\n\n    renderEmpty()\n    {\n        if ( ! this.showEmpty ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-draggrid__empty\">\n                 <span>{ this.$slots.empty || this.trans('No entries') }</span>\n            </div>\n        );\n    },\n\n    renderItem(props)\n    {\n        let data = {\n            key: props.value[this.keyProp], props\n        };\n\n        return (\n            this.$render('NDraggridItem', data, [this.$scopedSlots.default])\n        );\n    },\n\n    renderItems()\n    {\n        let events = {\n            dragenter: this.eventEmptyDragenter,\n            dragover: this.eventEmptyDragover,\n            dragleave: this.eventEmptyDragleave,\n            dragdrop: this.eventEmptyDragdrop,\n            drop: this.eventEmptyDragdrop\n        };\n\n        let renderItems = Arr.each(this.veItems, (value) => {\n            return this.ctor('renderItem')({ value });\n        });\n\n        return this.$render('NScrollbar', {ref: 'viewport', on: events }, \n            [renderItems]);\n    },\n\n    render($render)\n    {\n        this.$render = $render;\n\n        if ( ! this.$slots.empty ) {\n            this.$slots.empty = [this.ctor('renderEmpty')()];\n        }\n\n        this.$slots.default = this.$slots.empty;\n\n        if ( this.veItems.length ) {\n            this.$slots.default = [this.ctor('renderItems')()];\n        }\n\n        return (\n            <div class=\"n-draggrid\">{ this.$slots.default }</div>\n        );\n    }\n\n}\n","import Draglist from './src/draglist/draglist';\nimport DraglistItem from './src/draglist-item/draglist-item';\nimport Draggrid from './src/draggrid/draggrid';\nimport DraggridItem from './src/draggrid-item/draggrid-item';\n\nexport default function (App) {\n    App.component(Draglist.name, Draglist);\n    App.component(DraglistItem.name, DraglistItem);\n    // App.component(Draggrid.name, Draggrid);\n    // App.component(DraggridItem.name, DraggridItem);\n}","import { UUID, Num, Arr, Obj, Any, Dom, Locale } from \"nano-js\";\n\nexport default {\n\n    name: 'NForm',\n\n    model: {\n        prop: 'form'\n    },\n\n    props: {\n\n        form: {\n            default()\n            {\n                return {};\n            },\n            type: [Object]\n        },\n\n        errors: {\n            default()\n            {\n                return {};\n            },\n            type: [Object]\n        },\n\n        align: {\n            default()\n            {\n                return 'vertical';\n            },\n            type: [String]\n        },\n\n        propagation: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        forceChange: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        forceErrors: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n    },\n\n    methods: {\n\n        stopPropagation(event)\n        {\n            if ( this.propagation ) {\n                return;\n            }\n            \n            event.preventDefault();\n            event.stopPropagation();\n        },\n\n        addItem(item)\n        {\n            Arr.add(this.veItems, item, {\n                uid: item.uid\n            });\n        },\n\n        removeItem(item)\n        {\n            Arr.remove(this.veItems,{\n                uid: item.uid\n            });\n        },\n\n        setForm(form)\n        {\n            let veForm = Obj.clone(form);\n\n            if ( Any.md5(veForm) !== Any.md5(this.veForm) || this.forceChange ) {\n                this.$emit('change');\n            }\n\n            this.veForm = veForm;\n        },\n\n        setErrors(errors)\n        {\n            let veErrors = Obj.clone(errors);\n\n            if ( Any.md5(veErrors) !== Any.md5(this.veErrors) || this.forceErrors ) {\n                this.$emit('errors');\n            }\n\n            this.veErrors = veErrors;\n        }\n\n    },\n\n    data()\n    {\n        return {\n            veItems: []\n        };\n    },\n\n    provide()\n    {\n        return {\n            NForm: this\n        };\n    },\n\n    mounted()\n    {\n        // this.$watch('form', () => this.setForm(this.form),\n        //     { deep: true });\n\n        // this.$watch('errors', () => this.setErrors(this.errors),\n        //     { deep: true });\n\n        // let ident = {\n        //     _uid: this.uid\n        // };\n\n        // if ( this.propagation ) {\n        //     return;\n        // }\n\n        Dom.find(this.$el).on('submit', \n            this.stopPropagation, this._.uid);\n    },\n\n    beforeUnmount()\n    {\n        // let ident = {\n        //     _uid: this.uid\n        // };\n\n        // if ( this.propagation ) {\n        //     return;\n        // }\n\n        Dom.find(this.$el).off('submit', \n            null, this._.uid);\n    },\n\n    render()\n    {\n        let classList = [\n            'n-form',\n            'n-form--' + this.align\n        ];\n\n        return (\n            <form ref=\"form\" class={classList}>\n                { this.$slots.default() }\n            </form>\n        );\n    }\n}\n","export default {\n\n    name: 'NFormGroup',\n\n    inject: {\n\n        NForm: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        value: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        legend: {\n            default()\n            {\n                return this.$slots.legend;\n            },\n            type: [String]\n        },\n\n        icon: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        align: {\n            default()\n            {\n                return 'vertical';\n            },\n            type: [String]\n        },\n\n        checkable: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        tooltip: {\n            default()\n            {\n                return this.$slots.tooltip;\n            },\n            type: [String]\n        },\n\n        tooltipPosition: {\n            default()\n            {\n                return 'right-center';\n            },\n            type: [String]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            nativeValue: this.value\n        };\n    },\n\n    watch: {\n\n        value()\n        {\n            if ( this.value !== this.nativeValue ) {\n                this.nativeValue = this.value;\n            }\n        }\n\n    },\n\n    methods: {\n\n        toggleValue()\n        {\n            if ( this.checkable === false ) {\n                return;\n            }\n\n            this.$emit('input', this.nativeValue = ! this.nativeValue);\n        }\n\n    },\n\n    render($render)\n    {\n        this.$render = $render;\n\n        let classList = [\n            'n-form-group', 'n-form--' + this.align\n        ];\n\n        if ( this.checkable === true ) {\n            classList.push('n-form-group--checkable');\n        }\n\n        return <fieldset class={classList}>\n            { this.legend &&\n                <div class=\"n-form-group__legend\">\n                    <legend class=\"n-form-group__label\">\n                        { this.checkable &&\n                            <NSwitch size=\"small\" value={this.nativeValue} vOn:input={this.toggleValue} />\n                        }\n                        <div class=\"n-form-group__label-text\" vOn:click={this.toggleValue}>\n                            { this.icon && <i class={['n-icon', this.icon]}></i>} <span>{this.legend}</span>\n                        </div>\n                        { this.tooltip &&\n                            <NPopover type=\"tooltip\" position={this.tooltipPosition}>{this.tooltip}</NPopover>\n                        }\n                        { this.$slots.actions &&\n                            <div class=\"n-form-group__actions\">\n                                { this.$slots.actions }\n                            </div>\n                        }\n                    </legend>\n                </div>\n            }\n            { this.nativeValue &&\n                <div class=\"n-form-group__body\">\n                    {this.$slots.default}\n                </div>\n            }\n        </fieldset>;\n    }\n}\n","import { Arr, Obj, Any, Dom, UUID } from \"nano-js\";\n\nexport default {\n\n    name: 'NFormItem',\n\n    inject: {\n\n        NForm: {\n            default: undefined\n        },\n\n        NTabs: {\n            default: undefined\n        },\n\n        NTabsItem: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        prop: {\n            default()\n            {\n                return 'id';\n            },\n            type: [String]\n        },\n\n        label: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        tooltip: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        tooltipPosition: {\n            default()\n            {\n                return 'right-center';\n            },\n            type: [String]\n        },\n\n        tooltipWindow: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n    },\n\n    methods: {\n\n        focusInput()\n        {\n            let $input = Dom.find(this.$el).find('input');\n\n            if ( $input.empty() ) {\n                return;\n            }\n\n            $input.get(0).focus();\n        },\n\n        gotoInput()\n        {\n            let errors = this.NForm.errors;\n\n            if ( Any.isEmpty(errors) ) {\n                return;\n            }\n\n            if ( ! this.NTabs || ! this.NTabsItem ) {\n                return;\n            }\n\n            let keys = Any.keys(errors);\n\n            if ( Arr.first(keys) !== this.prop ) {\n                return;\n            }\n\n            this.NTabs.changeTab(this.NTabsItem.name);\n        }\n\n    },\n\n    data()\n    {\n        return {\n            uid: UUID()\n        };\n    },\n\n    beforeMount()\n    {\n        this.NForm.addItem(this);\n    },\n\n    mounted()\n    {\n        // this.NForm.$on('errors', this.gotoInput);\n    },\n\n    beforeUnmount()\n    {\n        this.NForm.removeItem(this);\n    },\n\n    renderTooltip()\n    {\n        if ( ! this.tooltip && ! this.$slots.tooltip ) {\n            return null;\n        }\n\n        let props = {\n            position: this.tooltipPosition,\n            window: this.tooltipWindow,\n            contain: this.tooltipWindow\n        };\n\n        return (\n            <NPopover type=\"tooltip\" props={props}>\n                { this.$slots.tooltip || this.tooltip }\n            </NPopover>\n        );\n    },\n\n    renderLabel()\n    {\n        if ( ! this.label && ! this.$slots.label ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-form-item__label\">\n                <label vOn:click={this.focusInput}>\n                    { this.$slots.label || this.label }\n                </label>\n                { this.ctor('renderTooltip')() }\n            </div>\n        )\n    },\n\n    renderError()\n    {\n        if ( ! Obj.has(this.NForm.errors, this.prop) ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-form-item__error\">\n                { Obj.get(this.NForm.errors, this.prop) }\n            </div>\n        );\n    },\n\n    render()\n    {\n        return <div class=\"n-form-item\">\n            { this.ctor('renderLabel')() }\n            <div class=\"n-form-item__input\">\n                { this.$slots.default() }\n            </div>\n            { this.ctor('renderError')() }\n        </div>;\n    }\n}\n","import Form from './src/form/form';\nimport FormGroup from './src/form-group/form-group';\nimport FormItem from './src/form-item/form-item';\n\nexport default function (App) {\n    App.component(Form.name, Form);\n    App.component(FormGroup.name, FormGroup);\n    App.component(FormItem.name, FormItem);\n}","import { Arr, Any, Dom, Event, UUID } from \"nano-js\";\n\n\nexport default {\n\n    name: 'NPopover',\n\n    provide()\n    {\n        return {\n            NPopover: this\n        };\n    },\n\n    inject: {\n\n        NPopover: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        width: {\n            default()\n            {\n                return 0;\n            },\n            type: [Number]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        listen: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        window: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        trigger: {\n            default()\n            {\n                return 'hover';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'default';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        position: {\n            default()\n            {\n                return 'bottom-center';\n            },\n            type: [String]\n        },\n\n        scrollClose: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        framerate: {\n            default()\n            {\n                return 15;\n            },\n            type: [Number]\n        }\n\n    },\n\n    watch: {\n\n        modelValue()\n        {\n            this.tempValue = this.modelValue;\n        },\n\n        tempValue()\n        {\n            Any.delay(this.refreshVisible, 50);\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: false,\n            clientX: 0,\n            clientY: 0,\n            target: null,\n            prevent: false,\n        };\n    },\n\n    beforeMount()\n    {\n        this.tempValue = this.modelValue;\n    },\n\n    mounted()\n    {\n        this.target = Dom.find(this.$el).previous().get(0);\n\n        if ( this.trigger === 'context' ) {\n            this.target = Dom.find(this.$el).parent().get(0);\n        }\n\n        if ( this.window ) {\n            Dom.find(document.body).append(this.$el);\n        }\n\n        if ( this.listen && this.trigger === 'hover' ) {\n            Dom.find(document.body).on('mousemove', \n                Any.framerate(this.onHover, 30), this._.uid);\n        }\n\n        if ( this.listen && this.trigger === 'click' ) {\n            Dom.find(document.body).on(['mousedown', 'touchstart'], \n                Any.framerate(this.onClick, 30), this._.uid);\n        }\n\n        if ( this.listen && this.trigger === 'context' ) {\n            Dom.find(document.body).on('contextmenu', \n                Any.framerate(this.onContext, 30), this._.uid);\n        }\n\n        Dom.find(document.body).on(['mousedown', 'touchstart'], \n            Any.framerate(this.onExit, 30), this._.uid);\n\n        Event.bind('NPopover:close', this.onCloseEvent, this._.uid);\n    },\n\n    beforeUnmount()\n    {\n        this.$el.remove();\n\n        Dom.find(document).off('mousemove', null, this._.uid);\n        Dom.find(document).off('mousedown', null, this._.uid);\n        Dom.find(document).off('contextmenu', null, this._.uid);\n\n        Event.unbind('NPopover:close', this._.uid);\n        \n    },\n\n    methods: {\n\n        active()\n        {\n            return this.tempValue;\n        },\n\n        open()\n        {\n            this.$emit('update:modelValue', \n                this.tempValue = true);\n        },\n\n        close(scrollClose = false)\n        {\n            if ( this.prevent ) {\n                return;\n            }\n\n            delete this.timer;\n\n            if ( ! scrollClose ) {\n                this.$emit('close');\n            }\n\n            if ( scrollClose ) {\n                this.$emit('scrollClose');\n            }\n\n            this.$emit('update:modelValue', \n                this.tempValue = false);\n        },\n\n        pause()\n        {\n            this.prevent = true;\n        },\n\n        unpause()\n        {\n            this.prevent = false;\n        },\n\n        onCloseEvent(uid)\n        {\n            if ( this.tempValue && this._.uid !== uid ) {\n                this.close();\n            }\n        },\n\n        refreshVisible()\n        {\n            Dom.find(this.$el).css(null);\n\n            if ( ! this.tempValue ) {\n                return this.stopRefreshInterval();\n            }\n\n            this.startRefreshInterval();\n\n            delete this.passedOffset;\n        },\n\n        startRefreshInterval()\n        {\n            this.refresh = setInterval(this.updatePosition, \n                1000 / this.framerate);\n\n            let onReady = () => {\n\n                Dom.find(this.$el).addClass('n-ready');\n\n                if ( this.NPopover ) {\n                    this.NPopover.pause();\n                }\n\n                Event.fire('NPopover:close', this._.uid);\n            }\n\n            Any.delay(onReady, 100);\n        },\n\n        stopRefreshInterval()\n        {\n            clearInterval(this.refresh);\n\n            if ( this.NPopover ) {\n                this.NPopover.unpause();\n            }\n\n            Dom.find(this.$el).removeClass('n-ready');\n        },\n\n        isSameOffset(offset)\n        {\n            if ( ! this.passedOffset ) {\n                return false;\n            }\n\n            let rainbow = Arr.each(['x', 'y'], (key) => {\n                return offset[key] === this.passedOffset[key];\n            });\n\n            return ! Arr.has(rainbow, false);\n        },\n\n        isSameSize(size)\n        {\n            if ( ! this.passedSize ) {\n                return false;\n            }\n\n            let rainbow = Arr.each(['width', 'height'], (key) => {\n                return size[key] === this.passedSize[key];\n            });\n\n            return ! Arr.has(rainbow, false);\n        },\n\n        getTargetHorizontal(position, fallback = null)\n        {\n            let targetRect = this.target.getBoundingClientRect();\n\n            if ( this.trigger === 'context' ) {\n                targetRect = {\n                    top: this.clientY, left: this.clientX, width: 2, height: 2\n                };\n            }\n\n            let windowRect = this.$el.getBoundingClientRect();\n\n            if ( this.width === -1 ) {\n                windowRect.width = targetRect.width;\n            }\n\n            let posY = {\n\n                // Set above the tagret element\n                start: targetRect.top - windowRect.height,\n                \n                // Set at bottom of target element\n                end: targetRect.top + targetRect.height,\n\n            };\n\n            let posX = {\n\n                // Set on the left of target element\n                start: targetRect.left,\n\n                // Set into the center of the target element\n                center: targetRect.left + (targetRect.width * 0.5) - \n                    (windowRect.width * 0.5),\n\n                // Set on the right of the target element\n                end: targetRect.left + targetRect.width - \n                    windowRect.width,\n\n            };\n\n            let offset = { x: 0, y: 0 };\n\n            if ( position === 'top-start' ) {\n                offset = { x: posX.start, y: posY.start };\n            }\n\n            if ( position === 'top-center' ) {\n                offset = { x: posX.center, y: posY.start };\n            }\n\n            if ( position === 'top-end' ) {\n                offset = { x: posX.end, y: posY.start };\n            }\n\n            if ( position === 'bottom-start' ) {\n                offset = { x: posX.start, y: posY.end };\n            }\n\n            if ( position === 'bottom-center' ) {\n                offset = { x: posX.center, y: posY.end };\n            }\n\n            if ( position === 'bottom-end' ) {\n                offset = { x: posX.end, y: posY.end };\n            }\n\n            let inverse = this.position;\n\n            if ( position.match(/^(top)\\-/) ) {\n                inverse = inverse.replace(/^(top)\\-/, 'bottom-');\n            }\n\n            if ( position.match(/^(bottom)\\-/) ) {\n                inverse = inverse.replace(/^(bottom)\\-/, 'top-');\n            }\n\n            let broken = offset.y + windowRect.height > \n                window.innerHeight || offset.y < 0;\n\n            if ( this.scrollClose && broken && ! fallback ) {\n                return this.getTargetHorizontal(inverse, offset);\n            }\n\n            if ( fallback && broken ) {\n                offset = fallback;\n            }\n\n            if ( offset.y < 0 ) {\n                offset.y = 0;\n            }\n        \n            if ( offset.y + windowRect.height > window.innerHeight ) {\n                offset.y = window.innerHeight - windowRect.height;\n            }\n\n            if ( offset.x < 0 ) {\n                offset.x = 0;\n            }\n        \n            if ( offset.x + windowRect.width > window.innerWidth ) {\n                offset.x = window.innerWidth - windowRect.width -\n                    (window.innerWidth - document.body.clientWidth);\n            }\n\n            return offset;\n        },\n\n        getTargetVertical(position, fallback = null)\n        {\n            let targetRect = this.target.getBoundingClientRect();\n\n            if ( this.trigger === 'context' ) {\n                targetRect = {\n                    top: this.clientY, left: this.clientX, width: 2, height: 2\n                };\n            }\n\n            let windowRect = this.$el.getBoundingClientRect();\n\n            if ( this.width === -1 ) {\n                windowRect.width = targetRect.width;\n            }\n            \n            let posY = {\n\n                // Set at top edge of the target element\n                start: targetRect.top,\n\n                // Set at the middle of the target element\n                center: targetRect.top + (targetRect.height * 0.5) - \n                    (windowRect.height * 0.5),\n\n                // Ste at the bottom of the target elemnent\n                end: targetRect.top + targetRect.height - \n                    windowRect.height,\n\n            };\n\n            let posX = {\n\n                // Set to the left of the target element\n                start: targetRect.left - windowRect.width,\n\n                // Set to the right of the target element\n                end: targetRect.left + targetRect.width,\n\n            };\n\n            let offset = { x: 0, y: 0 };\n\n            if ( position === 'left-start' ) {\n                offset = { x: posX.start, y: posY.start };\n            }\n\n            if ( position === 'left-center' ) {\n                offset = { x: posX.start, y: posY.center };\n            }\n\n            if ( position === 'left-end' ) {\n                offset = { x: posX.start, y: posY.end };\n            }\n\n            if ( position === 'right-start' ) {\n                offset = { x: posX.end, y: posY.start };\n            }\n\n            if ( position === 'right-center' ) {\n                offset = { x: posX.end, y: posY.center };\n            }\n\n            if ( position === 'right-end' ) {\n                offset = { x: posX.end, y: posY.end };\n            }\n\n            let inverse = this.position;\n\n            if ( position.match(/^(left)\\-/) ) {\n                inverse = inverse.replace(/^(left)\\-/, 'right-');\n            }\n\n            if ( position.match(/^(right)\\-/) ) {\n                inverse = inverse.replace(/^(right)\\-/, 'left-');\n            }\n\n            let broken = offset.x + windowRect.width > \n                window.innerWidth || offset.x < 0;\n\n            if ( this.scrollClose && broken && ! fallback ) {\n                return this.getTargetVertical(inverse, offset);\n            }\n\n            if ( fallback && broken ) {\n                offset = fallback;\n            }\n\n            if ( offset.y < 0 ) {\n                offset.y = 0;\n            }\n        \n            if ( offset.y + windowRect.height >  window.innerHeight ) {\n                offset.y = window.innerHeight - windowRect.height;\n            }\n\n            if ( offset.x < 0 ) {\n                offset.x = 0;\n            }\n        \n            if ( offset.x + windowRect.width > window.innerWidth ) {\n                offset.x = window.innerWidth - windowRect.width -\n                    (window.innerWidth - document.body.clientWidth);\n            }\n\n            return offset;\n        },\n\n        getTargetOffset()\n        {\n            let position = this.position;\n\n            if ( position.match(/^(top|bottom)\\-/) ) {\n                return this.getTargetHorizontal(position);\n            }\n\n            if ( position.match(/^(left|right)\\-/) ) {\n                return this.getTargetVertical(position);\n            }\n\n            return targetRect;\n        },\n\n        updatePosition()\n        {\n            let size = this.$el.getBoundingClientRect(),\n                rect = this.target.getBoundingClientRect();\n\n            let isSameSize = this.isSameSize(size);\n\n            if ( isSameSize && this.isSameOffset(rect) ) {\n                return;\n            }\n\n            if ( ! this.timer ) {\n                this.timer = Date.now();\n            }\n\n            this.passedSize = size;\n\n            if ( this.width ) {\n                Dom.find(this.$el).css({ width: this.width + 'px' });\n            }\n\n            let offset = this.getTargetOffset();\n\n            let scroll = Dom.find(document.body)\n                .scroll();\n\n            let style = {\n                'z-index':  window.zIndex++,\n                'top':      Math.round(offset.y + scroll.top) + 'px', \n                'left':     Math.round(offset.x + scroll.left) + 'px', \n            };\n\n            if ( this.width === -1 ) {\n                style.width = rect.width + 'px';\n            }\n\n            Dom.find(this.$el).css(style);\n\n            let isScrollClose = this.passedOffset && isSameSize &&\n                (Date.now() - this.timer) > 500;\n\n            if ( this.scrollClose && isScrollClose ) {\n                this.close(true);\n            }\n\n            this.passedOffset = rect;\n        },\n\n        onHover(event, el)\n        {\n            if ( this.disabled ) {\n                return;\n            }\n\n            let target = Dom.find(el).closest(this.target),\n                source = Dom.find(el).closest(this.$el);\n\n            let result = (!! target || !! source);\n\n            if ( this.tempValue === result ) {\n                return;\n            }\n\n            if ( ! result ) {\n                return this.$nextTick(this.close);\n            }\n\n            this.$emit('update:modelValue', this.tempValue = result);\n        },\n\n        onClick(event, el)\n        {\n            let keyCode = event.which === 1 ||\n                event.which === 0;\n\n            if ( this.disabled || this.tempValue || ! keyCode ) {\n                return;\n            }\n\n            let target = Dom.find(el).closest(this.target),\n                source = Dom.find(el).closest(this.$el);\n\n            let result = (!! target || !! source);\n\n            if ( this.tempValue === result ) {\n                return;\n            }\n\n            this.$emit('update:modelValue', this.tempValue = result);\n        },\n\n        onContext(event, el)\n        {\n            let keyCode = event.which === 3;\n\n            if ( this.disabled || this.tempValue || ! keyCode ) {\n                return;\n            }\n\n            let target = Dom.find(el).closest(this.target),\n                source = Dom.find(el).closest(this.$el);\n\n            this.clientX = event.clientX;\n            this.clientY = event.clientY;\n\n            let result = (!! target || !! source);\n\n            if ( result ) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            if ( this.tempValue === result ) {\n                return;\n            }\n\n            this.$emit('update:modelValue', this.tempValue = result);\n        },\n\n        onExit(event, el)\n        {\n            if ( this.disabled || ! this.tempValue ) {\n                return;\n            }\n\n            if ( !! Dom.find(el).closest(this.$el) ) {\n                return;\n            }\n\n            let target = Dom.find(el).closest(this.target);\n\n            if ( this.trigger !== 'context' && !! target ) {\n                return;\n            }\n\n            this.close();\n        }\n\n    },\n\n    renderBody()\n    {\n        if ( this.$slots.raw ) {\n            return this.$slots.raw();\n        }\n\n        return (\n            <div class=\"n-popover__frame\">\n                { this.$slots.header &&\n                    <div class=\"n-popover__header\">\n                        { this.$slots.header() }\n                    </div>\n                }\n                <div class=\"n-popover__body\">\n                    { this.$slots.default() }\n                </div>\n                { this.$slots.footer &&\n                    <div class=\"n-popover__footer\">\n                        { this.$slots.footer() }\n                    </div>\n                }\n            </div>\n        );\n    },\n\n    render()\n    {\n        if ( ! window.zIndex ) {\n            window.zIndex = 9000;\n        }\n\n        let classList = [\n            'n-popover',\n            'n-popover--' + this.type,\n            'n-popover--' + this.size,\n            'n-popover--' + this.position,\n        ];\n\n        if ( ! this.tempValue ) {\n            classList.push('n-hidden');\n        }\n\n        let viewBody = this.modelValue;\n\n        if ( Any.isNull(this.modelValue) ) {\n            viewBody = this.tempValue;\n        }\n\n        return (\n            <div class={classList}>\n                { viewBody && this.ctor('renderBody')() }\n            </div>\n        );\n    }\n\n}\n","import { Obj, Arr, Any, Dom } from \"nano-js\";\n\nexport default {\n\n    name: 'NPopoverOption',\n\n    inject: {\n        NPopover: {\n            default: undefined\n        }\n    },\n\n    props: {\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        focus: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        active: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        icon: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        iconPosition: {\n            default()\n            {\n                return 'before';\n            },\n            type: [String]\n        },\n\n        clickClose: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        }\n\n\n    },\n\n    computed: {\n\n        tempSize()\n        {\n            if ( this.NPopover ) {\n                return this.NPopover.size;\n            }\n\n            return this.size;\n        }\n\n    },\n\n    methods: {\n\n        onClick(event)\n        {\n            if ( this.NPopover && this.clickClose ) {\n                this.NPopover.close();\n            }\n\n            this.$emit('click', event);\n        }\n\n    },\n\n    renderIcon()\n    {\n        if ( ! this.icon ) {\n            return null;\n        }\n\n        let classList = [\n            'n-icon', \n            'n-icon--' + this.iconPosition,\n        ];\n\n        classList.push(this.icon);\n\n        return (<i class={classList}></i>);\n    },\n\n    render()\n    {\n        let classList = [\n            'n-popover-option',\n            'n-popover-option--' + this.type,\n            'n-popover-option--' + this.tempSize,\n        ];\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        let props = Obj.clone(this.$attrs);\n\n        if ( ! this.disabled ) {\n            props.onClick = this.onClick;\n        }\n\n        if ( this.disabled ) {\n            props.disabled = true;\n        }\n\n        return (\n            <a class={classList} href=\"javascript:void(0)\" {...props}>\n                <span>{ this.$slots.default() }</span> { this.ctor('renderIcon')() }\n            </a>\n        );\n    }\n\n}\n","import Popover from './src/popover/popover';\nimport PopoverOption from './src/popover-option/popover-option';\n\nexport default function (App) {\n    App.component(Popover.name, Popover);\n    App.component(PopoverOption.name, PopoverOption);\n}","import { h } from \"vue\";\nimport { Obj, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NButton',\n\n    props: {\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        link: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        square: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        icon: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        iconPosition: {\n            default()\n            {\n                return 'before';\n            },\n            type: [String]\n        },\n\n        buttonType: {\n            default()\n            {\n                return 'button';\n            },\n            type: [String]\n        },\n\n        nativeType: {\n            default()\n            {\n                return 'button';\n            },\n            type: [String]\n        }\n\n    },\n\n    renderIcon()\n    {\n        if ( ! this.icon ) {\n            return null;\n        }\n\n        let classList = [\n            'n-icon', \n            'n-icon--' + this.iconPosition,\n        ];\n\n        classList.push(this.icon);\n\n        return (<i class={classList}></i>);\n    },\n\n    render()\n    {\n        let classList = [\n            'n-button',\n            'n-button--' + this.size,\n            'n-button--' + this.type,\n        ];\n\n        if ( this.icon ) {\n            classList.push('n-button--icon');\n        }\n\n        if ( this.link ) {\n            classList.push('n-button--link');\n        }\n\n        if ( this.square ) {\n            classList.push('n-button--square');\n        }\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        let props = Obj.except(this.$attrs, ['class'], {\n            class: this.cmer(classList)\n        });\n\n        if ( this.disabled ) {\n            props.disabled = true;\n        }\n\n        let innerHtml = [];\n\n        if ( this.iconPosition === 'before' ) {\n            innerHtml.push(this.ctor('renderIcon')());\n        }\n\n        if ( this.$slots.default && ! this.square ) {\n            innerHtml.push(<span>{ this.$slots.default() }</span>);\n        }\n\n        if ( this.iconPosition === 'after' ) {\n            innerHtml.push(this.ctor('renderIcon')());\n        }\n\n        return h(this.nativeType, props, innerHtml);\n    }\n\n}\n","export default {\n\n    name: 'NButtonGroup',\n\n    render()\n    {\n        return <div class=\"n-button-group\">\n            { this.$slots.default }\n        </div>;\n    }\n\n}\n","import Button from './src/button/button';\nimport ButtonGroup from './src/button-group/button-group';\n\nexport default function (App) {\n    App.component(Button.name, Button);\n    App.component(ButtonGroup.name, ButtonGroup);\n}\n","import { Str, Arr, Obj, Any, Locale, Dom } from \"nano-js\";\n\nexport default {\n\n    name: 'NSelect',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return null;\n            },\n        },\n\n        clearValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        position: {\n            default()\n            {\n                return 'bottom-center';\n            },\n            type: [String]\n        },\n\n        multiple: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        collapse: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        clearable: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        placeholder: {\n            default()\n            {\n                return Locale.trans('Please select');\n            },\n            type: [String]\n        },\n\n        emptyText: {\n            default()\n            {\n                return 'No items';\n            },\n            type: [String]\n        },\n\n        undefinedText: {\n            default()\n            {\n                return 'Undefined item';\n            },\n            type: [String]\n        },\n\n        collapseText: {\n            default()\n            {\n                return '+:count item|+:count items';\n            },\n            type: [String]\n        },\n\n        allowCreate: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        options: {\n            default()\n            {\n                return [];\n            },\n            type: [Array, Object]\n        },\n\n        optionsValue: {\n            default()\n            {\n                return '$index';\n            },\n            type: [String]\n        },\n\n        optionsLabel: {\n            default()\n            {\n                return '$value';\n            },\n            type: [String]\n        },\n\n        optionsDisabled: {\n            default()\n            {\n                return 'null';\n            },\n            type: [String]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue,\n            tempClear: this.clearValue,\n            focus: false,\n            search: '',\n            index: -1,\n            elements: [],\n            searched: []\n        };\n    },\n\n    provide()\n    {\n        return {\n            NSelect: this\n        };\n    },\n\n    watch: {\n\n        modelValue()\n        {\n            this.tempValue = this.modelValue;\n        },\n\n        search()\n        {\n            this.searchOptions();\n        },\n\n        focus()\n        {\n            this.$nextTick(this.scrollToClosest);\n        },\n\n    },\n\n    methods: {\n\n        clear(event = null)\n        {\n            if ( event ) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            this.focusInput();\n\n            this.$emit('update:modelValue', \n                this.tempValue = Arr.clone(this.tempClear));\n        },\n\n        addOption(option)\n        {\n            Arr.add(this.elements, option, \n                { tempValue: option.tempValue });\n        },\n\n        removeOption(option)\n        {\n            Arr.remove(this.elements, \n                { tempValue: option.tempValue });\n        },\n\n        resetInput()\n        {\n            this.index = -1;\n            this.search = '';\n        },\n\n        focusInput(event = null)\n        {\n            if ( event ) {\n                event.preventDefault();\n            }\n\n            this.$refs.input.focus();\n        },\n\n        onFocusInput()\n        {\n            console.log('focus')\n            if ( ! this.focus ) {\n                this.$refs.popover.open();\n            }\n            \n            clearInterval(this.refresh);\n        },\n\n        onInputInput(event)\n        {\n            this.search = event.target.value;\n        },\n\n        onKeydownInput(event)\n        {\n            if ( ! this.focus ) {\n                return this.onFocusInput();\n            }\n\n            if ( event.which === 13 ) {\n                this.createOrToggle();\n            }\n\n            if ( event.which === 38 ) {\n                this.selectPrev();\n            }\n\n            if ( event.which === 40 ) {\n                this.selectNext();\n            }\n        },\n\n        searchOptions()\n        {\n            this.index = -1;\n\n            if ( Any.isEmpty(this.search) ) {\n                return this.searched = this.elements;\n            }\n\n            let searchRegex = new RegExp(this.search, 'i');\n\n            let searched = Arr.filter(this.elements, (option) => {\n                return option.label.match(searchRegex);\n            });\n\n            this.searched = searched;\n        },\n\n        toggleOption(value, event = null)\n        {\n            if ( Any.isEmpty(value) ) {\n                return;\n            }\n\n            if ( event ) {\n                event.preventDefault();\n            }\n\n            let tempValue = this.tempValue;\n\n            if ( this.multiple ) {\n                this.focusInput();\n            }\n\n            if ( ! this.multiple ) {\n                tempValue = value;\n            }\n\n            if ( this.multiple ) {\n                Arr.toggle(tempValue, value);\n            }\n\n            if ( ! this.multiple ) {\n                this.$refs.popover.close();\n            }\n\n            if ( this.tempValue === tempValue ) {\n                return;\n            }\n\n            this.$emit('update:modelValue', \n                this.tempValue = tempValue);\n        },\n\n        getOptionLabel(value)\n        {\n            let option = Arr.find(this.elements, \n                { tempValue: value });\n\n            if ( ! option && this.allowCreate ) {\n                return value;\n            }\n\n            if ( ! option && ! this.allowCreate ) {\n                return this.trans(this.undefinedText);\n            }\n\n            return option.tempLabel;\n        },\n\n        selectPrev()\n        {\n            let newIndex = this.index - 1;\n\n            if ( newIndex < 0 ) {\n                newIndex = this.searched.length - 1;\n            }\n\n            this.index = newIndex;\n\n            this.scrollToCurrent();\n        },\n\n        selectNext()\n        {\n            let newIndex = this.index + 1;\n\n            if ( newIndex > this.searched.length - 1 ) {\n                newIndex = 0;\n            }\n\n            this.index = newIndex;\n\n            this.scrollToCurrent();\n        },\n\n        createOrToggle()\n        {\n            if ( this.allowCreate && this.search ) {\n                return this.createOption();\n            }\n            \n            let selected = Arr.get(this.searched, \n                this.index);\n\n            if ( this.searched.length === 1 ) {\n                selected = Arr.first(this.searched);\n            }\n\n            if ( ! selected || selected.disabled ) {\n                return;\n            }\n\n            this.toggleOption(selected.tempValue);\n        },\n\n        createOption()\n        {\n            this.toggleOption(this.search);\n\n            this.search = '';\n        },\n\n        scrollToCurrent()\n        {\n            if ( ! this.focus ) {\n                return;\n            }\n\n            let selected = Arr.get(this.searched, \n                this.index);\n\n            if ( ! selected || ! this.$refs.scrollbar ) {\n                return;\n            }\n\n            this.$refs.scrollbar.scrollIntoView(\n                `[data-option=\"${selected._.uid}\"]`);\n        },\n\n        scrollToClosest()\n        {\n            if ( ! this.focus ) {\n                return;\n            }\n\n            let value = this.tempValue;\n\n            if ( Any.isArray(this.tempValue) ) {\n                value = Arr.first(this.tempValue);\n            }\n\n            if ( ! value ) {\n                return;\n            }\n\n            let target = Arr.find(this.elements, { \n                tempValue: value\n             });\n\n            if ( ! target ) {\n                return;\n            }\n\n            this.$refs.scrollbar.scrollIntoView(\n                `[data-option=\"${target._.uid}\"]`);\n        }\n\n    },\n\n    created()\n    {\n        if ( this.multiple && ! Any.isArray(this.tempValue) ) {\n            this.tempValue = [];\n        }\n\n        if ( this.multiple && ! Any.isArray(this.clearValue) ) {\n            this.tempClear = [];\n        }\n    },\n\n    beforeMount()\n    {\n        this.searchOptions();\n    },\n\n    renderLabelClear()\n    {\n        if ( ! this.clearable || Any.isEmpty(this.tempValue) ) {\n            return null;\n        }\n\n        let props = {};\n\n        if ( ! this.disabled ) {\n            props.onMousedown = this.clear;\n        }\n\n        return (\n            <div class=\"n-select__clear\" {...props}>\n                <i class={this.icons.times}></i>\n            </div>\n        );\n    },\n\n    renderLabelAngle()\n    {\n        return (\n            <div class=\"n-select__angle\">\n                <i class={this.icons.angleDown}></i>\n            </div>\n        );\n    },\n\n    renderLabelItem(value)\n    {\n        let classList = [\n            'n-select__item'\n        ];\n\n        let props = {\n            class: this.icons.times,\n        };\n\n        if ( ! this.disabled ) {\n            props.onMousedown = (event) => this.toggleOption(value, event);\n        }\n\n        let labelHtml = (\n            <span>{ this.getOptionLabel(value) }</span>\n        );\n\n        return (\n            <div class={classList}>\n                { [labelHtml, <i {...props}></i>] }\n            </div>\n        );\n    },\n\n    renderLabelCollapse()\n    {\n        let first = Arr.first(this.tempValue);\n\n        if ( ! first ) {\n            return null;\n        }\n\n        let firstHtml = this.ctor('renderLabelItem')(first);\n\n        if ( this.tempValue.length === 1 ) {\n            return firstHtml;\n        }\n\n        let count = this.tempValue.length - 1;\n\n        let collapseHtml = (\n            <div class=\"n-select__item\">\n                <span>{ this.choice(this.collapseText, count) }</span>\n            </div>\n        );\n\n        return [\n            firstHtml, collapseHtml\n        ];\n    },\n\n    renderLabelItems()\n    {\n        if ( this.collapse ) {\n            return this.ctor('renderLabelCollapse')();\n        }\n\n        return Arr.each(this.tempValue, (value) => {\n            return this.ctor('renderLabelItem')(value);\n        });\n    },\n\n    renderMultiple()\n    {\n        let isEmptyValue = Any.isEmpty(this.tempValue) &&\n            ! Any.isNumber(this.tempValue);\n\n        let props = {\n            value: this.search,\n            placeholder: this.placeholder,\n            disabled: this.disabled,\n            onFocus: this.onFocusInput,\n            onInput: this.onInputInput,\n            onKeydown: this.onKeydownInput\n        };\n\n        if ( ! this.focus ) {\n            props.value = null;\n        }\n\n        if ( ! isEmptyValue ) {\n            props.placeholder = null;\n        }\n\n        let inputHtml = (\n            <div class=\"n-select__input\">\n                <input ref=\"input\" {...props} />\n            </div>\n        );\n\n        return [\n            this.ctor('renderLabelClear')(), \n            (\n                <div class=\"n-select__items\">\n                    { [this.ctor('renderLabelItems')(), inputHtml] }\n                </div>\n            ), \n            this.ctor('renderLabelAngle')()\n        ];\n    },\n\n    renderSingle()\n    {\n        let isEmptyValue = Any.isEmpty(this.tempValue) &&\n            ! Any.isNumber(this.tempValue);\n\n        let modelLabel = this.getOptionLabel(\n            this.tempValue);\n        \n        if ( isEmptyValue ) {\n            modelLabel = null;\n        }\n\n        let props = {\n            value: this.search,\n            placeholder: this.placeholder,\n            disabled: this.disabled,\n            onFocus: this.onFocusInput,\n            onInput: this.onInputInput,\n            onKeydown: this.onKeydownInput\n        };\n\n        if ( ! this.focus ) {\n            props.value = modelLabel;\n        }\n\n        if ( ! isEmptyValue ) {\n            props.placeholder = modelLabel;\n        }\n\n        return [\n            this.ctor('renderLabelClear')(), \n            (\n                <div class=\"n-select__input\">\n                    <input ref=\"input\" {...props} />\n                </div>\n            ), \n            this.ctor('renderLabelAngle')()\n        ];\n    },\n\n    renderDisplay()\n    {\n        let classList = [\n            'n-select__display'\n        ];\n\n        if ( this.multiple ) {\n            classList.push('n-multiple');\n        }\n\n        let displayHtml = this.ctor('renderSingle');\n\n        if ( this.multiple ) {\n            displayHtml = this.ctor('renderMultiple');\n        }\n\n        return (\n            <div class={classList}>{ displayHtml() }</div>\n        );\n    },\n\n    renderItems()\n    {\n        let emptyHtml = (\n            <div class=\"n-select__empty\">\n                <NEmptyIcon>{ this.trans(this.emptyText) }</NEmptyIcon>\n            </div>\n        );\n        \n        if ( ! this.searched.length ) {\n            return emptyHtml;\n        }\n\n        let options = Obj.each(this.searched, (option, index) => {\n            return option.ctor('renderOption')(index);\n        });\n\n        let props = {\n            relative: true, size: this.size\n        }\n\n        return (\n            <NScrollbar ref=\"scrollbar\" class=\"n-select__body\" {...props}>\n                { Obj.values(options) }\n            </NScrollbar>\n        );\n    },\n\n    renderPopover()\n    {\n        let props = {\n            trigger: 'click',\n            width: -1,\n            listen: true,\n            size: this.size,\n            scrollClose: true,\n            disabled: this.disabled,\n            onClose: this.resetInput\n        };\n\n        return (\n            <NPopover ref=\"popover\" vModel={this.focus} {...props}>\n                { { raw: this.ctor('renderItems') } }\n            </NPopover>\n        );\n    },\n\n    renderOptions()\n    {\n        if ( Any.isEmpty(this.options) ) {\n            return this.$slots.default();\n        }\n\n        let optionRender = ($value, $index) => {\n\n            let props = {\n                label: Obj.get({ $value, $index }, this.optionsLabel, null),\n                value: Obj.get({ $value, $index }, this.optionsValue, null),\n            };\n\n            return (<NSelectOption {...props}></NSelectOption>);\n        };\n\n        return Obj.values(Obj.each(this.options, optionRender));\n    },\n\n    render()\n    {\n        let classList = [\n            'n-select',\n            'n-select--' + this.type,\n            'n-select--' + this.size,\n        ];\n\n        let isEmptyValue = Any.isEmpty(this.tempValue) &&\n            ! Any.isNumber(this.tempValue);\n\n        if ( isEmptyValue ) {\n            classList.push('n-empty');\n        }\n\n        if ( this.clearable ) {\n            classList.push('n-clearable');\n        }\n\n        if ( this.focus ) {\n            classList.push('n-focus');\n        }\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        return (\n            <div class={classList} onClick={this.focusInput}>\n                { this.ctor('renderDisplay')() }\n                { this.ctor('renderPopover')() }\n                { this.ctor('renderOptions')() }\n            </div>\n        );\n    }\n\n}\n","import { Num, Arr, Obj, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NSelectOption',\n\n    inheritAttrs: false,\n\n    inject: {\n\n        NSelect: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        value: {\n            default()\n            {\n                return '';\n            }\n        },\n\n        label: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        valueProp: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        labelProp: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        }\n\n    },\n\n    computed: {\n\n        tempValue()\n        {\n            if ( Any.isEmpty(this.valueProp) ) {\n                return this.value;\n            }\n\n            return Obj.get(this.value, this.valueProp);\n        },\n\n        tempLabel()\n        {\n            if ( Any.isEmpty(this.labelProp) ) {\n                return this.label;\n            }\n\n            return Obj.get(this.value, this.labelProp);\n        }\n\n    },\n\n    mounted()\n    {\n        this.NSelect.addOption(this);\n    },\n\n    beforeUnmount()\n    {\n        this.NSelect.removeOption(this);\n    },\n\n    methods: {\n\n        toggleItem(event) \n        {\n            event.preventDefault();\n\n            if ( event.which !== 1 ) {\n                return;\n            }\n\n            if ( this.disabled ) {\n                return;\n            }\n\n            this.NSelect.toggleOption(this.tempValue, \n                event);\n        },\n\n    },\n\n    renderOption(index)\n    {\n\n        let classList = [];\n\n        let isMultipleActive = this.NSelect.multiple && \n            Arr.has(this.NSelect.tempValue, this.tempValue);\n\n        if ( isMultipleActive ) {\n            classList.push('n-active');\n        }\n\n        let isSingleActive = ! this.NSelect.multiple && \n            this.NSelect.tempValue === this.tempValue;\n\n        if ( isSingleActive ) {\n            classList.push('n-active');\n        }\n\n        if ( this.NSelect.index === Num.int(index) ) {\n            classList.push('n-focus');\n        }\n\n        let props = {\n            'disabled': this.disabled,\n            'onMousedown': this.toggleItem,\n            'type': this.NSelect.type,\n            'clickClose': ! this.NSelect.multiple,\n        };\n\n        if ( isSingleActive || isMultipleActive ) {\n            props.icon = this.icons.checked;\n        }\n\n        // Required for scrolldown\n        props['data-option'] = this._.uid;\n\n        return (\n            <NPopoverOption class={classList} {...props}>\n                { this.$slots.default && this.$slots.default() || this.tempLabel }\n            </NPopoverOption>\n        );\n    },\n\n    render()\n    {\n        return null;\n    }\n\n}\n","import Vue from \"vue\";\n\nimport Select from './src/select/select';\nimport SelectOption from './src/select-option/select-option';\n\nexport default function (App) {\n    App.component(Select.name, Select);\n    App.component(SelectOption.name, SelectOption);\n}\n","import { Arr, Obj, Any, UUID } from \"nano-js\";\n\nexport default {\n\n    name: 'NCheckbox',\n\n    inject: {\n\n        NCheckboxGroup: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        value: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        intermediate: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        global: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n    },\n\n    computed: {\n\n        tempComputed()\n        {\n            return ! this.global ? this.tempChecked :\n                this.NCheckboxGroup.globalChecked;\n        },\n\n        tempIntermediate()\n        {\n            return ! this.global ? this.intermediate :\n                this.NCheckboxGroup.globalIntermediate;\n        },\n\n        tempDisabled()\n        {\n            return ! this.global ? this.disabled :\n                this.NCheckboxGroup.globalDisabled;\n        }\n\n    },\n\n    data()\n    {\n        return {\n            uid: UUID(), tempChecked: this.modelValue\n        };\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempChecked ) {\n                this.tempChecked = value;\n            }\n        }\n\n    },\n\n    beforeMount()\n    {\n        if ( this.NCheckboxGroup ) {\n            this.tempChecked = this.NCheckboxGroup.isChecked(this.value);\n        }\n    },\n\n    mounted()\n    {\n        if ( ! this.NCheckboxGroup || this.global ) {\n            return;\n        }\n\n        this.NCheckboxGroup.addCheckbox(this);\n    },\n\n    beforeUnmount()\n    {\n        if ( this.NCheckboxGroup && ! this.global ) {\n            this.NCheckboxGroup.removeCheckbox(this);\n        }\n    },\n\n    methods: {\n\n        toggle()\n        {\n            this.$emit('update:modelValue', this.tempChecked = ! this.tempChecked);\n        },\n\n        check()\n        {\n            if ( this.NCheckboxGroup ) {\n                this.NCheckboxGroup.checkCheckbox(this);\n            }\n\n            this.$emit('update:modelValue', this.tempChecked = true);\n        },\n\n        uncheck()\n        {\n            if ( this.NCheckboxGroup ) {\n                this.NCheckboxGroup.uncheckCheckbox(this);\n            }\n\n            this.$emit('update:modelValue', this.tempChecked = false);\n        },\n\n        eventShiftClick()\n        {\n            if ( this.NCheckboxGroup ) {\n                this.NCheckboxGroup.shiftCheckbox(this);\n            }\n\n            this.$emit('update:modelValue', this.tempChecked = true);\n        },\n\n        eventLocalClick(event)\n        {\n            event.preventDefault();\n\n            if ( event.shiftKey ) {\n                return this.eventShiftClick();\n            }\n            \n            if ( this.NCheckboxGroup ) {\n                this.NCheckboxGroup.toggleCheckbox(this);\n            }\n\n            this.$emit('update:modelValue', this.tempChecked = ! this.tempChecked);\n        },\n\n        eventGlobalClick()\n        {\n            this.NCheckboxGroup.toggleAll();\n        },\n\n        updateFromGroup()\n        {\n            let checked = this.NCheckboxGroup.isChecked(this.value);\n\n            if ( this.tempChecked === checked ) {\n                return;\n            }\n            \n            this.$emit('update:modelValue', this.tempChecked = checked);\n        }\n\n    },\n\n    renderCheckbox()\n    {\n        let interHtml = this.$slots.intermediate &&\n            this.$slots.intermediate();\n\n        if ( ! interHtml )  {\n            interHtml = (<span class={this.icons.intermediate}></span>);\n        }\n\n        let checkHtml = this.$slots.checked &&\n            this.$slots.checked();\n\n        if ( ! checkHtml )  {\n            checkHtml = (<span class={this.icons.checked}></span>);\n        }\n\n        return (\n            <div class=\"n-checkbox__checkbox\">\n                { this.tempIntermediate ? interHtml : checkHtml }\n            </div>\n        );\n    },\n\n    renderLabel()\n    {\n        if ( ! this.$slots.default && ! this.$slots.label ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-checkbox__label\">\n                { this.$slots.default() || this.$slots.label() }\n            </div>\n        );\n    },\n\n    render()\n    {\n        let size = this.size;\n\n        if ( this.NCheckboxGroup ) {\n            size = this.NCheckboxGroup.size;\n        }\n\n        let classList = [\n            'n-checkbox',\n            'n-checkbox--' + size,\n            'n-checkbox--' + this.type,\n        ];\n\n        if ( this.tempComputed ) {\n            classList.push('n-checked');\n        }\n\n        if ( this.tempIntermediate ) {\n            classList.push('n-intermediate');\n        }\n\n        if ( this.tempDisabled ) {\n            classList.push('n-disabled');\n        }\n\n        let props = Obj.clone(this.$attrs);\n\n        if ( ! this.tempDisabled && this.global ) {\n            props.onMousedown = this.eventGlobalClick;\n        }\n\n        if ( ! this.tempDisabled && ! this.global ) {\n            props.onMousedown = this.eventLocalClick;\n        }\n\n        return (\n            <div class={classList} {...props}>\n                { [this.ctor('renderCheckbox')(), this.ctor('renderLabel')()] }\n            </div>\n        );\n    }\n\n}\n","import { Arr, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NCheckboxGroup',\n\n    provide()\n    {\n        return {\n            NCheckboxGroup: this\n        };\n    },\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        align: {\n            default()\n            {\n                return 'horizontal';\n            },\n            type: [String]\n        }\n\n    },\n\n    computed: {\n\n        globalChecked()\n        {\n            let checked = Arr.filter(this.elements, (checkbox) => {\n                return checkbox.tempChecked;\n            });\n\n            return checked.length === this.elements.length &&\n                this.elements.length !== 0;\n        },\n\n        globalIntermediate()\n        {\n            let checked = this.elements.filter((checkbox) => {\n                return checkbox.tempChecked;\n            });\n\n            return checked.length !== this.elements.length &&\n                checked.length !== 0 ;\n        },\n\n        globalDisabled()\n        {\n            return this.elements.length === 0;\n        },\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue,\n            index: -1,\n            elements: []\n        }\n    },\n\n    watch: {\n\n        value()\n        {\n            if ( this.tempValue = this.modelValue ) {\n                this.tempValue = this.modelValue;\n            }\n            \n        },\n\n    },\n\n    methods: {\n\n        addCheckbox(checkbox)\n        {\n            this.index = -1;\n\n            Arr.add(this.elements, checkbox, {\n                uid: checkbox.uid\n            });\n\n            this.elements = Arr.sort(this.elements, 'sort');\n        },\n\n        removeCheckbox(checkbox)\n        {\n            this.index = -1;\n            \n            Arr.remove(this.elements, {\n                uid: checkbox.uid\n            });\n        },\n\n        toggleCheckbox(checkbox, emit = true)\n        {\n            let index = Arr.findIndex(this.elements, {\n                uid: checkbox.uid\n            });\n\n            if ( ! checkbox.tempChecked ) {\n                this.index = index;\n            }\n\n            Arr.toggle(this.tempValue, checkbox.value);\n\n            if ( ! emit ) {\n                return;\n            }\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        checkCheckbox(checkbox, emit = true)\n        {\n            Arr.add(this.tempValue, checkbox.value);\n\n            if ( ! emit ) {\n                return;\n            }\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        uncheckCheckbox(checkbox, emit = true)\n        {\n            Arr.remove(this.tempValue, checkbox.value);\n\n            if ( ! emit ) {\n                return;\n            }\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        shiftCheckbox(checkbox)\n        {\n            if ( this.index === -1 ) {\n                return this.toggleCheckbox(checkbox, false);\n            }\n\n            let index = Arr.findIndex(this.elements, {\n                uid: checkbox.uid\n            });\n\n            let checkboxes = this.elements.slice(this.index, index + 1);\n\n            if ( index < this.index ) {\n                checkboxes = this.elements.slice(index, this.index + 1);\n            }\n\n            this.index = -1;\n\n            Arr.each(checkboxes, (checkbox) => {\n                this.checkCheckbox(checkbox, false);\n            });\n\n            Arr.each(checkboxes, (checkbox) => {\n                checkbox.updateFromGroup();\n            });\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        toggleAll()\n        {\n            this.globalChecked ? this.uncheckAll() : this.checkAll();\n        },\n\n        checkAll()\n        {\n            Arr.each(this.elements, (checkbox) => {\n                this.checkCheckbox(checkbox, false);\n            });\n\n            Arr.each(this.elements, (checkbox) => {\n                checkbox.updateFromGroup();\n            });\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        uncheckAll()\n        {\n            Arr.each(this.elements, (checkbox) => {\n                this.uncheckCheckbox(checkbox, false);\n            });\n\n            Arr.each(this.elements, (checkbox) => {\n                checkbox.updateFromGroup();\n            });\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        isChecked(value)\n        {\n            return Arr.has(this.tempValue, value);\n        }\n\n    },\n\n    render()\n    {\n        let classList = [\n            'n-checkbox-group',\n            'n-checkbox-group--' + this.size,\n            'n-checkbox-group--' + this.align,\n        ];\n\n        return (\n            <div class={classList}>\n                {this.$slots.default()}\n            </div>\n        );\n    }\n\n}\n","import Vue from \"vue\";\n\nimport Checkbox from './src/checkbox/checkbox';\nimport CheckboxGroup from './src/checkbox-group/checkbox-group';\n\nexport default function (App) {\n    App.component(Checkbox.name, Checkbox);\n    App.component(CheckboxGroup.name, CheckboxGroup);\n}","import { Arr, Obj, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NRadio',\n\n    model: {\n        prop: 'checked'\n    },\n\n    inject: {\n\n        NRadioGroup: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        value: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        checked: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n    },\n\n    computed: {\n\n        uid()\n        {\n            return this._.uid;\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempChecked: this.checked\n        };\n    },\n\n    watch: {\n\n        checked()\n        {\n            if ( this.checked !== this.tempChecked ) {\n                this.tempChecked = this.checked;\n            }\n        }\n\n    },\n\n    beforeMount()\n    {\n        if ( this.NRadioGroup ) {\n            this.tempChecked = this.NRadioGroup.isChecked(this.value);\n        }\n    },\n\n    mounted()\n    {\n        if ( this.NRadioGroup ) {\n            this.NRadioGroup.addRadio(this);\n        }\n    },\n\n    beforeUnmount()\n    {\n        if ( this.NRadioGroup ) {\n            this.NRadioGroup.removeRadio(this);\n        }\n    },\n\n    methods: {\n\n        check()\n        {\n            if ( this.NRadioGroup ) {\n                this.NRadioGroup.checkRadio(this);\n            }\n\n            this.$emit('update:modelValue', this.tempChecked = true);\n        },\n\n        updateFromGroup()\n        {\n            let checked = this.NRadioGroup.isChecked(this.value);\n\n            if ( this.tempChecked === checked ) {\n                return;\n            }\n            \n            this.$emit('update:modelValue', this.tempChecked = checked);\n        }\n\n    },\n\n    renderRadio()\n    {\n        return (\n            <div class=\"n-radio__radio\">\n                <span></span>\n            </div>\n        );\n    },\n\n    renderLabel()\n    {\n        if ( ! this.$slots.default && ! this.$slots.label ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-radio__label\">\n                { this.$slots.default() || this.$slots.label() }\n            </div>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-radio',\n            'n-radio--' + this.size,\n            'n-radio--' + this.type,\n        ];\n\n        if ( this.tempChecked ) {\n            classList.push('n-checked');\n        }\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        let props = Obj.clone(this.$attrs);\n\n        if ( ! this.disabled ) {\n            props.onMousedown = this.check;\n        }\n\n        return (\n            <div class={classList} {...props}>\n                { this.ctor('renderRadio')() }\n                { this.ctor('renderLabel')() }\n            </div>\n        );\n    }\n\n}\n","import { Arr, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NRadioGroup',\n\n    provide()\n    {\n        return {\n            NRadioGroup: this\n        };\n    },\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        align: {\n            default()\n            {\n                return 'horizontal';\n            },\n            type: [String]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue,\n            elements: []\n        }\n    },\n\n    watch: {\n\n        modelValue()\n        {\n            if ( this.modelValue !== this.tempValue ) {\n                this.tempValue = this.modelValue;\n            }\n        },\n\n    },\n\n    methods: {\n\n        addRadio(radio)\n        {\n            Arr.add(this.elements, radio, {\n                uid: radio.uid\n            });\n        },\n\n        removeRadio(radio)\n        {\n            Arr.remove(this.elements, {\n                uid: radio.uid\n            });\n        },\n\n        checkRadio(radio)\n        {\n            this.tempValue = radio.value;\n            \n            Arr.each(this.elements, (radio) => {\n                radio.updateFromGroup();\n            });\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        isChecked(value)\n        {\n            return this.tempValue === value;\n        }\n\n    },\n\n    render()\n    {\n        let classList = [\n            'n-radio-group',\n            'n-radio-group--' + this.size,\n            'n-radio-group--' + this.align,\n        ];\n\n        return (\n            <div class={classList}>\n                { this.$slots.default() }\n            </div>\n        );\n    }\n\n}\n","import NRadio from './src/radio/radio';\nimport NRadioGroup from './src/radio-group/radio-group';\n\nexport default function (App) {\n    App.component(NRadio.name, NRadio);\n    App.component(NRadioGroup.name, NRadioGroup);\n}\n","import { Arr, Obj, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NCascaderPanel',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        clearValue: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        hover: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        options: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        trigger: {\n            default()\n            {\n                return 'hover';\n            },\n            type: [String]\n        },\n\n        labelProp: {\n            default()\n            {\n                return 'label';\n            },\n            type: [String]\n        },\n\n        valueProp: {\n            default()\n            {\n                return 'value';\n            },\n            type: [String]\n        },\n\n        childProp: {\n            default()\n            {\n                return 'children';\n            },\n            type: [String]\n        },\n\n        disabledProp: {\n            default()\n            {\n                return 'disabled';\n            },\n            type: [String]\n        },\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue,\n            tempHover: this.hover,\n        };\n    },\n\n    watch: {\n\n        modelValue(value) {\n            if ( value !== this.tempValue ) {\n                this.tempValue = value;\n            }\n        },\n\n        hover(value) {\n            if ( value !== this.tempHover ) {\n                this.tempHover = value;\n            }\n        }\n\n    },\n\n    methods: {\n\n        clearCascader()\n        {\n            this.$emit('update:modelValue', this.tempHover = \n                this.tempValue = this.clearValue);\n        },\n\n        onHover(cascade)\n        {\n            return (event) => this.hoverItem(cascade, event)\n        },\n\n        onSelect(cascade)\n        {\n            return (event) => this.selectItem(cascade, event)\n        },\n\n        hoverItem(cascade, event = null)\n        {\n            // Hover intend emulation\n            clearTimeout(this.delay);\n\n            let updateHover = () => {\n                this.$emit('update:hover', \n                    this.tempHover = cascade);\n            };\n\n            this.delay = setTimeout(updateHover, 130);\n        },\n\n        selectItem(cascade, event = null)\n        {\n            clearTimeout(this.clickTimer);\n\n            if ( ! this.lastclick ) {\n                this.lastclick = 0;\n            }\n\n            this.lastclick++;\n\n            let isTouchDevice = !! ('ontouchstart' in window || \n                navigator.msMaxTouchPoints);\n\n            let trigger = isTouchDevice ? 'click' : \n                this.trigger ;\n            \n            this.clickTimer = setTimeout(() => \n                this.lastclick = 0, 240);\n\n            this.hoverTimer = setTimeout(() => \n                this.hoverItem(cascade), 240);\n\n            if ( this.lastclick === 1 && trigger === 'click' ) {\n                return this.hoverItem(cascade, event);\n            }\n\n            if ( event ) {\n                event.preventDefault();\n            }\n\n            this.clickTimer = setTimeout(() => \n                this.fireSelectItem(cascade), 50);\n        },\n\n        fireSelectItem(cascade)\n        {\n            clearTimeout(this.hoverTimer);\n\n            this.lastclick = 0;\n\n            this.$emit('update:modelValue', \n                this.tempValue = cascade);\n        }\n\n    },\n\n    renderDisplay()\n    {\n        let classList = [\n            'n-cascader-panel',\n            'n-cascader-panel--' + this.size\n        ];\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderLabelClear')() }\n                { this.ctor('renderLabel')() }\n                { this.ctor('renderLabelAngle')() }\n            </div>\n        )\n    },\n\n    renderOption(item, cascade = [])\n    {\n        let value = Obj.get(item, this.valueProp);\n\n        let classList = [\n            'n-popover-option'\n        ];\n\n        if ( Arr.has(this.tempValue, item[this.valueProp]) ) {\n            classList.push('n-active');\n        }\n\n        let disabled = Obj.get(item, this.disabledProp, false);\n\n        if ( disabled ) {\n            classList.push('n-disabled');\n        }\n\n        let props = {\n            size: this.size,\n            type: this.type,\n            clickClose: false\n        };\n\n        if ( Arr.last(this.tempValue) === value ) {\n            props.icon = this.icons.checked;\n        }\n\n        let tempCascade = Arr.merge(Arr.clone(cascade), [value]);\n\n        if ( this.trigger === 'hover' ) {\n            props.onMousemove = Any.framerate(this.onHover(tempCascade), 30);\n        }\n\n        props.onMousedown = this.onSelect(tempCascade);\n        props.onTouchstart = this.onSelect(tempCascade);\n\n        let children = Obj.get(item, this.childProp);\n\n        if (  ! props.icon && ! Any.isEmpty(children) ) {\n            props.icon = this.icons.angleRight;\n        }\n\n        return (\n            <NPopoverOption class={classList} {...props}>\n                { Obj.get(item, this.labelProp) }\n            </NPopoverOption>\n        );\n    },\n\n    renderOptions(items, cascade = [])\n    {\n        if ( Any.isEmpty(items) ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-cascader-panel__items\">\n                <NScrollbar relative={true}>\n                    {\n                        Arr.each(items, (item) => {\n                            return this.ctor('renderOption')(item, cascade);\n                        })\n                    }\n                </NScrollbar>\n            </div>\n        )\n    },\n\n    renderCascade()\n    {\n        let renderList = [\n            this.ctor('renderOptions')(this.options)\n        ];\n\n        let items = this.options, cascade = [];\n\n        Arr.each(this.tempHover, (value) => {\n\n            if ( ! items ) {\n                return;\n            }\n\n            cascade.push(value);\n\n            let item = Arr.find(items, {\n                [this.valueProp]: value\n            });\n\n            items = Obj.get(item, this.childProp);\n\n            let options = this.ctor('renderOptions')\n                (items, cascade);\n\n            renderList.push(options);\n        });\n\n        return renderList;\n    },\n\n    render()\n    {\n        let classList = [\n            'n-cascader-panel',\n            'n-cascader-panel--' + this.size\n        ];\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        return (\n            <div class={classList}>{ this.ctor('renderCascade')() }</div>\n        );\n    }\n\n}","import { Arr, Obj, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NCascader',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        clearValue: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        options: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        current: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        placeholder: {\n            default()\n            {\n                return 'Please select';\n            },\n            type: [String]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        clearable: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        position: {\n            default()\n            {\n                return 'bottom-start';\n            },\n            type: [String]\n        },\n\n        trigger: {\n            default()\n            {\n                return 'hover';\n            },\n            type: [String]\n        },\n\n        labelProp: {\n            default()\n            {\n                return 'label';\n            },\n            type: [String]\n        },\n\n        valueProp: {\n            default()\n            {\n                return 'value';\n            },\n            type: [String]\n        },\n\n        childProp: {\n            default()\n            {\n                return 'children';\n            },\n            type: [String]\n        },\n\n        disabledProp: {\n            default()\n            {\n                return 'disabled';\n            },\n            type: [String]\n        },\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue,\n            tempHover: this.modelValue,\n            focus: false,\n        };\n    },\n\n    methods: {\n\n        clearCascader()\n        {\n            this.focus = true;\n\n            this.$emit('update:modelValue', \n                this.tempValue = this.tempHover = this.clearValue);\n        },\n\n        onCascaderInput(value)\n        {\n            this.focus = false;\n\n            this.$emit('update:modelValue', \n                this.tempValue = value);\n        },\n\n        onCascaderHover(value)\n        {\n            this.$emit('update:hover', \n                this.tempHover = value);\n        },\n\n        onPopoverInput(value)\n        {\n            this.focus = value;\n        },\n\n    },\n\n    watch: {\n\n        modelValue(value) {\n            if ( value !== this.tempValue ) {\n                this.tempValue = value;\n            }\n        }\n\n    },\n\n    renderLabelClear()\n    {\n        if ( ! this.clearable || Any.isEmpty(this.tempValue) ) {\n            return null;\n        }\n\n        let props = {};\n\n        if ( ! this.disabled ) {\n            props.onMousedown = this.clearCascader;\n        }\n\n        return (\n            <div class=\"n-cascader__clear\" {...props}>\n                <i class={ this.icons.times }></i>\n            </div>\n        );\n    },\n\n    renderLabelAngle()\n    {\n        return (\n            <div class=\"n-cascader__angle\">\n                <i class={ this.icons.angleDown }></i>\n            </div>\n        );\n    },\n\n    renderLabelItems()\n    {\n        let items = this.options, renderList = [];\n\n        if ( Any.isEmpty(this.tempValue) ) {\n            return (\n                <div class=\"n-cascader__placeholder\">\n                    { this.trans(this.placeholder) }\n                </div>\n            );\n        }\n\n        Arr.each(this.tempValue, (value) => {\n\n            if ( ! items ) {\n                return;\n            }\n\n            let item = Arr.find(items, {\n                [this.valueProp]: value\n            });\n\n            items = Obj.get(item, this.childProp);\n\n            let itemLabel = (\n                <span class=\"n-cascader__item\">\n                    { Obj.get(item, this.labelProp) }\n                </span>\n            );\n\n            renderList.push(itemLabel);\n        });\n\n        return (\n            <div class=\"n-cascader__items\">\n                { renderList }\n            </div>\n        );\n    },\n\n    renderDisplay()\n    {\n        let classList = [\n            'n-cascader__display'\n        ];\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderLabelClear')() }\n                { this.ctor('renderLabelItems')() }\n                { this.ctor('renderLabelAngle')() }\n            </div>\n        );\n    },\n\n    renderItems()\n    {\n        let props = Obj.except(this.$props, ['modelValue'], {\n            hover: this.tempHover,\n            modelValue: this.tempValue,\n        });\n\n        props['onUpdate:hover'] = this.onCascaderHover;\n        props['onUpdate:modelValue'] = this.onCascaderInput;\n\n        return (\n            <NCascaderPanel class=\"n-cascader__body\" {...props}></NCascaderPanel>\n        );\n    },\n\n    renderPopover()\n    {\n        let props = {\n            trigger: 'click',\n            width: 0,\n            size: this.size,\n            position: this.position,\n            scrollClose: true,\n            disabled: this.disabled,\n        };\n\n        return (\n            <NPopover ref=\"popover\" vModel={this.focus} {...props}>\n                { { raw: this.ctor('renderItems') } }\n            </NPopover>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-cascader',\n            'n-cascader--' + this.type,\n            'n-cascader--' + this.size,\n        ];\n\n        if ( Any.isEmpty(this.tempValue) ) {\n            classList.push('n-empty');\n        }\n\n        if ( this.clearable ) {\n            classList.push('n-clearable');\n        }\n\n        if ( this.focus ) {\n            classList.push('n-focus');\n        }\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderDisplay')() }\n                { this.ctor('renderPopover')() }\n            </div>\n        );\n    }\n\n}","import CascaderPanel from './src/cascader-panel/cascader-panel';\nimport Cascader from './src/cascader/cascader';\n\nexport default function (App) {\n    App.component(CascaderPanel.name, CascaderPanel);\n    App.component(Cascader.name, Cascader);\n}","import { Arr, Str, Now, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NDatepickerPanel',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        clearValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        arrive: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        clearArrive: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        depart: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        clearDepart: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        minDate: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        maxDate: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        range: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        monthPanels: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        },\n\n        position: {\n            default()\n            {\n                return 'bottom-start';\n            },\n            type: [String]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        format: {\n            default()\n            {\n                return 'YYYY-MM-DD HH:mm:ss';\n            },\n            type: [String]\n        },\n\n        weekdays: {\n            default()\n            {\n                return [\n                    'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su',\n                ];\n            },\n            type: [Array]\n        },\n\n        months: {\n            default()\n            {\n                return [\n                    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n                ]\n            },\n            type: [Array]\n        }\n\n    },\n\n    computed: {\n\n        yearsGrid()\n        {\n            return this.tempCache.getYears();\n        },\n\n        monthsGrid()\n        {\n            return this.tempCache.getMonths();\n        }\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue.format(this.format) ) {\n                this.tempValue = Now.make(value);\n            }\n        },\n\n        arrive(value)\n        {\n            if ( value !== this.tempArrive.format(this.format) ) {\n                this.tempArrive = Now.make(value);\n            }\n        },\n\n        depart(value)\n        {\n            if ( value !== this.tempDepart.format(this.format) ) {\n                this.tempDepart = Now.make(value);\n            }\n        },\n\n    },\n\n    data()\n    {\n        return {\n            tempView: 'date',\n            tempRanger: null,\n            cacheArrive: null,\n            cacheDepart: null,\n            tempValue: Now.make(this.modelValue, this.format),\n            tempCache: Now.make(this.modelValue, this.format),\n            tempArrive: Now.make(this.arrive),\n            tempDepart: Now.make(this.depart),\n        }\n    },\n\n    methods: {\n\n        gotoDate()\n        {\n            this.tempView = 'date';\n        },\n\n        gotoMonth()\n        {\n            this.tempView = 'month';\n        },\n\n        gotoYear()\n        {\n            this.tempView = 'year';\n        },\n\n        patchDate(now)\n        {\n            if ( Any.isString(now) ) {\n                now = Now.make(now);\n            }\n\n            // Copy now to cache\n            this.tempCache = now.clone();\n\n            // Copy now to value\n            this.tempValue = now.clone();\n\n            this.$emit('update:modelValue', \n                this.tempValue.format(this.format));\n        },\n\n        patchMonth(now)\n        {\n            if ( Any.isString(now) ) {\n                now = Now.make(now);\n            }\n\n            this.tempCache = now.clone();\n\n            this.gotoDate();\n        },\n\n        printRange(now)\n        {\n            this.tempRanger = now.clone();\n        },\n\n        patchYear(now)\n        {\n            if ( Any.isString(now) ) {\n                now = Now.make(now);\n            }\n\n            this.tempCache = now.clone();\n\n            this.gotoMonth();\n        },\n\n        patchRange(now)\n        {\n            if ( this.cacheArrive && ! this.cacheDepart ) {\n                this.cacheDepart = now.clone();\n            }\n\n            if ( ! this.cacheArrive && ! this.cacheDepart ) {\n                this.cacheArrive = now.clone();\n            }\n\n            if ( ! this.cacheArrive || ! this.cacheDepart ) {\n                return;\n            }\n\n            this.tempArrive = this.cacheArrive.clone();\n            this.tempDepart = this.cacheDepart.clone();\n\n            this.$emit('update:arrive', \n                this.tempArrive.format(this.format));\n\n            this.$emit('update:depart', \n                this.tempDepart.format(this.format));\n\n            this.cacheArrive = null;\n            this.cacheDepart = null;\n\n            this.$emit('rangeSelected', [\n                this.tempArrive.format(this.format),\n                this.tempDepart.format(this.format)\n            ]);\n        },\n\n    },\n\n    renderToolbarPrev(closure)\n    {\n        let props = {\n            type: this.type,\n            link: true,\n            icon: this.icons.angleLeft,\n            onClick: closure\n        };\n\n        return (<NButton {...props}></NButton>);\n    },\n\n    renderToolbarNext(closure)\n    {\n        let props = {\n            type: this.type,\n            link: true,\n            icon: this.icons.angleRight,\n            onClick: closure\n        };\n\n        return (<NButton {...props}></NButton>);\n    },\n\n    renderToolbarMonth()\n    {\n        let props = {\n            onClick: this.gotoMonth\n        };\n\n        let monthsHtml = [\n            this.months[this.tempCache.month()]\n        ];\n\n        let month = this.tempCache.clone()\n            .addMonths(this.monthPanels - 1);\n\n        if ( month.month() !== this.tempCache.month() ) {\n            monthsHtml.push(this.months[month.month()]);\n        }\n\n        return (\n            <span class=\"n-datepicker-panel__month\" {...props}>\n                { monthsHtml.join(' - ') }\n            </span>\n        );\n    },\n\n    renderToolbarYear()\n    {\n        let props = {\n            onClick: this.gotoYear\n        };\n\n        let yearsHtml = [\n            this.tempCache.year()\n        ];\n\n        let month = this.tempCache.clone()\n            .addMonths(this.monthPanels - 1);\n\n        if ( month.year() !== this.tempCache.year() ) {\n            yearsHtml.push(month.year());\n        }\n\n        return (\n            <span class=\"n-datepicker-panel__year\" {...props}>\n                { yearsHtml.join(' - ') }\n            </span>\n        );\n    },\n\n    renderToolbar({ prev, next })\n    {\n        return (\n            <div class=\"n-datepicker-panel__toolbar\">\n                <div class=\"n-datepicker-panel__display\">\n                    { this.ctor('renderToolbarMonth')() }\n                    { this.ctor('renderToolbarYear')() }\n                </div>\n                <div class=\"n-datepicker-panel__prev\">\n                    { this.ctor('renderToolbarPrev')(prev) }\n                </div>\n                <div class=\"n-datepicker-panel__next\">\n                    { this.ctor('renderToolbarNext')(next) }\n                </div>\n            </div>\n        );\n    },\n\n    renderDateItem(now, month)\n    {\n        let classList = [\n            'n-datepicker-panel__day'\n        ];\n\n        if ( now.equalDate() ) {\n            classList.push('n-today');\n        }\n\n        let isSelected = this.tempValue.valid() && \n            now.equalDate(this.tempValue);\n\n        if ( isSelected ) {\n            classList.push('n-selected');\n        }\n\n        if ( now.month() === month.month() ) {\n            classList.push('n-current');\n        }\n\n        let isNotBeforeMin = ! this.minDate || \n            now.after(this.minDate) || now.equalDate(this.minDate);\n\n        let isNotAfterMax = ! this.maxDate || \n            now.before(this.maxDate) || now.equalDate(this.maxDate);\n\n        if ( ! isNotBeforeMin || ! isNotAfterMax ) {\n            classList.push('n-disabled');\n        }\n\n        let props = {};\n\n        if ( isNotBeforeMin && isNotAfterMax ) {\n            props.onClick = () => this.patchDate(now);\n        }\n\n        return (\n            <div class={classList} {...props}>\n                <span>{ now.format('DD') }</span>\n            </div>\n        );\n    },\n\n    renderRangeDateItem(now, month)\n    {\n        let classList = [\n            'n-datepicker-panel__day'\n        ];\n\n        if ( now.equalDate('now') ) {\n            classList.push('n-today');\n        }\n\n        if ( now.month() === month.month() ) {\n            classList.push('n-current');\n        }\n\n        let viewMode = 0;\n\n        if ( !! this.cacheArrive ) {\n            viewMode++;\n        }\n\n        if ( !! this.cacheDepart ) {\n            viewMode++;\n        }\n\n        let isTempValid = this.tempArrive.valid() && \n            this.tempDepart.valid();\n\n        if ( viewMode === 0 && isTempValid ) {\n\n            if ( now.between(this.tempArrive, this.tempDepart) ) {\n                classList.push('n-between');\n                classList.push('n-selected');\n            }\n\n            let arriveFirst = this.tempArrive.before(this.tempDepart);\n\n            if ( now.equalDate(this.tempArrive) ) {\n                classList.push(arriveFirst ? 'n-arrive' : 'n-depart');\n                classList.push('n-selected');\n            }\n\n            if ( now.equalDate(this.tempDepart) ) {\n                classList.push(arriveFirst ? 'n-depart' : 'n-arrive');\n                classList.push('n-selected');\n            }\n\n        }\n\n        if ( viewMode === 1 && this.cacheArrive ) {\n\n            if ( now.between(this.cacheArrive, this.tempRanger) ) {\n                classList.push('n-between');\n            }\n\n            let arriveFirst = this.cacheArrive.before(this.tempRanger);\n\n            if ( now.equalDate(this.cacheArrive) ) {\n                classList.push(arriveFirst ? 'n-arrive' : 'n-depart');\n            }\n\n            if ( now.equalDate(this.tempRanger) ) {\n                classList.push(arriveFirst ? 'n-depart' : 'n-arrive');\n            }\n\n        }\n\n        let isNotBeforeMin = ! this.minDate || \n            now.after(this.minDate) || now.equalDate(this.minDate);\n\n        let isNotAfterMax = ! this.maxDate || \n            now.before(this.maxDate) || now.equalDate(this.maxDate);\n\n        if ( ! isNotBeforeMin || ! isNotAfterMax ) {\n            classList.push('n-disabled');\n        }\n\n        let props = {\n            onMouseenter: () => this.printRange(now)\n        };\n\n        if ( isNotBeforeMin && isNotAfterMax ) {\n            props.onClick = () => this.patchRange(now);\n        }\n\n        return (\n            <div class={classList} {...props}>\n                <span>{ now.format('DD') }</span>\n            </div>\n        );\n    },\n\n    renderDate()\n    {\n        let prev = () => {\n            this.tempCache = this.tempCache.prevMonth();\n        };\n        let next = () => {\n            this.tempCache = this.tempCache.nextMonth();\n        };\n\n        let legendHtml = (\n            Arr.each(this.weekdays, (day) => {\n                return (\n                    <div class=\"n-datepicker-panel__day\">\n                        <span>{ this.trans(day) }</span>\n                    </div>\n                );\n            })\n        );\n\n        let renderItem = this.ctor('renderDateItem');\n\n        if ( this.range ) {\n            renderItem = this.ctor('renderRangeDateItem');\n        }\n\n        let bodyHtml = (month) => (\n            Arr.each(Arr.chunk(month.getDatesGrid(), 7), (chunks) => {\n                return (\n                    <div class=\"n-datepicker-panel__week\">\n                        { Arr.each(chunks, (chunk) => renderItem(chunk, month)) }\n                    </div>\n                );\n            })\n        );\n\n        let panelHtml = (\n            Arr.each(Arr.make(this.monthPanels), (offset) => {\n\n                let month = this.tempCache.clone()\n                    .addMonths(offset - 1);\n\n                return (\n                    <div class=\"n-datepicker-panel__panel\">\n                        <div class=\"n-datepicker-panel__legend\">\n                            { legendHtml }\n                        </div>\n                        <div class=\"n-datepicker-panel__body\">\n                            { bodyHtml(month) }\n                        </div>\n                    </div>\n                );\n            })\n        );\n\n        return (\n            <div class=\"n-datepicker-panel__dateview\">\n                <div class=\"n-datepicker-panel__header\">\n                    { this.ctor('renderToolbar')({ prev, next }) }\n                </div>\n                <div class=\"n-datepicker-panel__panels\">\n                    { panelHtml }\n                </div>\n            </div>\n        );\n    },\n\n    renderMonthItem(now)\n    {\n        let classList = [\n            'n-datepicker-panel__month'\n        ];\n\n        if ( now.equal(this.tempCache, 'YYYYMM') ) {\n            classList.push('n-selected');\n        }\n\n        if ( now.month() === Now.make('now').month() ) {\n            classList.push('n-current');\n        }\n\n        let props = {\n            onClick: () => this.patchMonth(now)\n        };\n\n        return (\n            <div class={classList} {...props}>\n                <span>{ this.trans(this.months[now.month()]) }</span>\n            </div>\n        )\n    },\n\n    renderMonth()\n    {\n        let prev = () => {\n            this.tempCache = this.tempCache.prevYear();\n        };\n\n        let next = () => {\n            this.tempCache = this.tempCache.nextYear();\n        };\n\n        return (\n            <div class=\"n-datepicker-panel__monthview\">\n                <div class=\"n-datepicker-panel__header\">\n                    { this.ctor('renderToolbar')({ prev, next }) }\n                </div>\n                <div class=\"n-datepicker-panel__body\">\n                    <div class=\"n-datepicker-panel__year\">\n                        { Arr.each(this.monthsGrid, this.ctor('renderMonthItem')) }\n                    </div>\n                </div>\n                <div class=\"n-datepicker-panel__footer\">\n                    <NButton size={this.type}  size={this.size} link={true} onClick={this.gotoDate}>\n                        { this.trans('Go back') }\n                    </NButton>\n                </div>\n            </div>\n        );\n    },\n\n    renderYearItem(now)\n    {\n        let classList = [\n            'n-datepicker-panel__year'\n        ];\n\n        if ( now.equal(this.tempCache, 'YYYY') ) {\n            classList.push('n-selected');\n        }\n\n        if ( now.year() === Now.make('now').year() ) {\n            classList.push('n-current');\n        }\n\n        let props = {\n            onClick: () => this.patchYear(now)\n        };\n\n        return (\n            <div class={classList} {...props}>\n                <span>{ now.year() }</span>\n            </div>\n        )\n    },\n\n    renderYear()\n    {\n        let prev = () => {\n            this.tempCache = this.tempCache.prevDecade();\n        };\n\n        let next = () => {\n            this.tempCache = this.tempCache.nextDecade();\n        };\n\n        return (\n            <div class=\"n-datepicker-panel__yearview\">\n                <div class=\"n-datepicker-panel__header\">\n                    { this.ctor('renderToolbar')({ prev, next }) }\n                </div>\n                <div class=\"n-datepicker-panel__body\">\n                    <div class=\"n-datepicker-panel__decade\">\n                        { Arr.each(this.yearsGrid, this.ctor('renderYearItem')) }\n                    </div>\n                </div>\n                <div class=\"n-datepicker-panel__footer\">\n                    <NButton size={this.type}  size={this.size} link={true} onClick={this.gotoDate}>\n                        { this.trans('Go back') }\n                    </NButton>\n                </div>\n            </div>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-datepicker-panel',\n            'n-datepicker-panel--' + this.size,\n            'n-datepicker-panel--' + this.type\n        ]\n\n        return (\n            <div class={classList}>\n                { this.ctor('render' + Str.ucfirst(this.tempView))() }\n            </div>\n        );\n    }\n\n}","import { Arr, Obj, Str, Now, Any, UUID } from \"nano-js\";\n\nexport default {\n\n    name: 'NDatepicker',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        clearValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        arrive: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        clearArrive: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        depart: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        clearDepart: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        minDate: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        maxDate: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        placeholder: {\n            default()\n            {\n                return 'Select date';\n            },\n            type: [String]\n        },\n\n        placeholderArrive: {\n            default()\n            {\n                return 'Start date';\n            },\n            type: [String]\n        },\n\n        placeholderDepart: {\n            default()\n            {\n                return 'End date';\n            },\n            type: [String]\n        },\n\n        range: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        rangeSeparator: {\n            default()\n            {\n                return '-';\n            },\n            type: [String]\n        },\n\n        monthPanels: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        },\n\n        boundary: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        position: {\n            default()\n            {\n                return 'bottom-start';\n            },\n            type: [String]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        clearable: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        format: {\n            default()\n            {\n                return 'YYYY-MM-DD HH:mm:ss';\n            },\n            type: [String]\n        },\n\n        displayFormat: {\n            default()\n            {\n                return 'YYYY-MM-DD';\n            },\n            type: [String]\n        },\n\n        weekdays: {\n            default()\n            {\n                return [\n                    'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su',\n                ];\n            },\n            type: [Array]\n        },\n\n        months: {\n            default()\n            {\n                return [\n                    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n                ];\n            },\n            type: [Array]\n        }\n\n    },\n\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue.format(this.format) ) {\n                this.tempValue = Now.make(value);\n            }\n        },\n\n        arrive(value)\n        {\n            if ( value !== this.tempArrive.format(this.format) ) {\n                this.tempArrive = Now.make(value);\n            }\n        },\n\n        depart(value)\n        {\n            if ( value !== this.tempDepart.format(this.format) ) {\n                this.tempDepart = Now.make(value);\n            }\n        },\n\n    },\n\n    data()\n    {\n        return {\n            focus: false,\n            tempValue: Now.make(this.modelValue, this.format),\n            tempArrive: Now.make(this.arrive, this.format),\n            tempDepart: Now.make(this.depart, this.format),\n        };\n    },\n\n    methods: {\n\n        clearDatepicker()\n        {\n            this.range ? this.clearRangeDatepicker() :\n                this.clearSingleDatepicker();\n        },\n\n        clearSingleDatepicker()\n        {\n            this.tempValue = Now.make(this.clearValue, \n                this.format);\n\n            this.$emit('update:modelValue', this.clearValue);\n        },\n\n\n        clearRangeDatepicker()\n        {\n            this.tempArrive = Now.make(this.clearArrive, \n                this.format);\n\n            this.$emit('update:arrive', this.clearValue);\n\n            this.tempDepart = Now.make(this.clearDepart, \n                this.format);\n\n            this.$emit('update:depart', this.clearDepart);\n        },\n\n        onPopoverInput(value)\n        {\n            this.focus = value;\n        },\n\n        onValueInput(event)\n        {\n            let isNotSameLength = this.displayFormat.length !==\n                event.target.value.length;\n\n            if ( isNotSameLength ) {\n                return;\n            }\n\n            let value = Now.make(event.target.value, \n                this.displayFormat);\n\n            if ( ! value.moment.isValid() ) {\n                return;\n            }\n\n            let moment = this.tempValue.moment.set({\n                year: value.moment.year(),\n                month: value.moment.month(),\n                date: value.moment.date(),\n            });\n\n            this.tempValue = Now.make(moment);\n\n            this.$emit('update:modelValue', \n                this.tempValue.format(this.format));\n        },\n\n        onArriveInput(event)\n        {\n            let isNotSameLength = this.displayFormat.length !==\n                event.target.value.length;\n\n            if ( isNotSameLength ) {\n                return;\n            }\n\n            let value = Now.make(event.target.value, \n                this.displayFormat);\n\n            if ( ! value.moment.isValid() ) {\n                return;\n            }\n\n            let moment = this.tempValue.moment.set({\n                year: value.moment.year(),\n                month: value.moment.month(),\n                date: value.moment.date(),\n            });\n\n            this.tempArrive = Now.make(moment);\n\n            this.$emit('update:arrive', \n                this.tempArrive.format(this.format));\n        },\n\n        onDepartInput(event)\n        {\n            let isNotSameLength = this.displayFormat.length !==\n                event.target.value.length;\n\n            if ( isNotSameLength ) {\n                return;\n            }\n\n            let value = Now.make(event.target.value, \n                this.displayFormat);\n\n            if ( ! value.moment.isValid() ) {\n                return;\n            }\n\n            let moment = this.tempValue.moment.set({\n                year: value.moment.year(),\n                month: value.moment.month(),\n                date: value.moment.date(),\n            });\n\n            this.tempDepart = Now.make(moment);\n\n            this.$emit('update:depart', \n                this.tempDepart.format(this.format));\n        },\n\n        onDatepickerInput(value)\n        {\n            this.focus = false;\n\n            this.tempValue = Now.make(value, \n                this.format);\n\n            this.$emit('update:modelValue', value);\n        },\n\n        onDatepickerDepart(value)\n        {\n            this.focus = false;\n\n            this.tempDepart = Now.make(value, \n                this.format);\n\n            this.$emit('update:depart', value);\n        },\n\n        onDatepickerArrive(value)\n        {\n            this.focus = false;\n\n            this.tempArrive = Now.make(value, \n                this.format);\n\n            this.$emit('update:arrive', value);\n        },\n\n    },\n\n\n    renderLabelClear()\n    {\n        let isEmpty = ! this.tempArrive.initialDate &&\n            ! this.tempDepart.initialDate;\n\n        if ( ! this.range ) {\n            isEmpty = ! this.tempValue.initialDate;\n        }\n\n        if ( ! this.clearable || isEmpty ) {\n            return null;\n        }\n\n        let props = {};\n\n        if ( ! this.disabled ) {\n            props.onMousedown = this.clearDatepicker;\n        }\n\n        return (\n            <div class=\"n-datepicker__clear\" {...props}>\n                <i class={ this.icons.times }></i>\n            </div>\n        );\n    },\n\n    renderLabelAngle()\n    {\n        return (\n            <div class=\"n-datepicker__angle\">\n                <i class={ this.icons.angleDown }></i>\n            </div>\n        );\n    },\n\n    renderRange()\n    {\n        let arriveProps = {\n            value: '',\n            disabled: this.disabled,\n            placeholder: this.trans(this.placeholderArrive),\n            onInput: this.onArriveInput,\n        };\n\n        if ( this.tempArrive.valid() ) {\n            arriveProps.value = this.tempArrive.format(\n                this.displayFormat, true);\n        }\n\n        let departProps = {\n            value: '',\n            disabled: this.disabled,\n            placeholder: this.trans(this.placeholderDepart),\n            onInput: this.onDepartInput,\n        };\n\n        if ( this.tempDepart.valid() ) {\n            departProps.value = this.tempDepart.format(\n                this.displayFormat, true);\n        }\n\n        return [\n            (\n                <div class=\"n-datepicker__input\">\n                    <input {...arriveProps}/>\n                </div>\n            ),\n            (\n                <div class=\"n-datepicker__seperator\">\n                    <span>{ this.rangeSeparator }</span>\n                </div>\n            ),\n            (\n                <div class=\"n-datepicker__input\">\n                    <input {...departProps}/>\n                </div>\n            )\n        ];\n    },\n\n    renderSingle()\n    {\n        let props = {\n            value: '',\n            disabled: this.disabled,\n            placeholder: this.trans(this.placeholder),\n            onInput: this.onValueInput,\n        };\n\n        if ( this.tempValue.valid() ) {\n            props.value = this.tempValue.format(\n                this.displayFormat, true);\n        }\n\n        return (\n            <div class=\"n-datepicker__input\">\n                <input {...props}/>\n            </div>\n        );\n    },\n\n    renderDisplay()\n    {\n        let classList = [\n            'n-datepicker__display'\n        ];\n\n        if ( this.range ) {\n            classList.push('n-range');\n        }\n\n        let displayHtml = this.ctor('renderSingle');\n\n        if ( this.range ) {\n            displayHtml = this.ctor('renderRange');\n        }\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderLabelClear')() }\n                { displayHtml() }\n                { this.ctor('renderLabelAngle')() }\n            </div>\n        );\n    },\n\n    renderItems()\n    {\n        \n        let props = Obj.except(this.$props, ['modelValue'], {\n            arrive: this.tempArrive.format(this.format) || null,\n            depart: this.tempDepart.format(this.format) || null,\n            modelValue: this.tempValue.format(this.format) || null,\n        });\n\n        props['onUpdate:arrive'] = this.onDatepickerArrive;\n        props['onUpdate:depart'] = this.onDatepickerDepart;\n        props['onUpdate:modelValue'] = this.onDatepickerInput;\n\n        return (\n            <NDatepickerPanel class=\"n-datepicker__body\" {...props}></NDatepickerPanel>\n        );\n    },\n\n    renderPopover()\n    {\n        let props = {\n            trigger: 'click',\n            width: 0,\n            size: this.size,\n            position: this.position,\n            scrollClose: true,\n            disabled: this.disabled\n        };\n\n        return (\n            <NPopover ref=\"popover\" vModel={this.focus} {...props}>\n                { { raw: this.ctor('renderItems') } }\n            </NPopover>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-datepicker',\n            'n-datepicker--' + this.type,\n            'n-datepicker--' + this.size,\n        ];\n\n        let isEmpty = ! this.tempArrive.initialDate &&\n            ! this.tempDepart.initialDate;\n\n        if ( ! this.range ) {\n            isEmpty = ! this.tempValue.initialDate;\n        }\n\n        if ( isEmpty ) {\n            classList.push('n-empty');\n        }\n\n        if ( this.clearable ) {\n            classList.push('n-clearable');\n        }\n\n        if ( this.focus ) {\n            classList.push('n-focus');\n        }\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderDisplay')() }\n                { this.ctor('renderPopover')() }\n            </div>\n        );\n    }\n\n}","import DatepickerPanel from \"./src/datepicker-panel/datepicker-panel\";\nimport Datepicker from \"./src/datepicker/datepicker\";\n\nexport default function (App) {\n    App.component(DatepickerPanel.name, DatepickerPanel);\n    App.component(Datepicker.name, Datepicker);\n}","import { Arr, Obj, Now, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTimepickerPanel',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        clearValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        placeholder: {\n            default()\n            {\n                return 'Select time';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            }\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            }\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        format: {\n            default()\n            {\n                return 'YYYY-MM-DD HH:mm:ss';\n            },\n            type: [String]\n        },\n\n        displayFormat: {\n            default()\n            {\n                return 'HH:mm:ss';\n            },\n            type: [String]\n        },\n\n        hoursInterval: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        },\n\n        minutesInterval: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        },\n\n        secondsInterval: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        }\n\n    },\n\n    computed: {\n\n        hoursGrid()\n        {\n            return this.tempValue.getHours(this.hoursInterval);\n        },\n\n        minutesGrid()\n        {\n            return this.tempValue.getMinutes(this.minutesInterval);\n        },\n\n        secondsGrid()\n        {\n            return this.tempValue.getSeconds(this.secondsInterval);\n        }\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue.format(this.format) ) {\n                this.tempValue = Now.make(value);\n            }\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: Now.make(this.modelValue),\n        }\n    },\n\n    methods: {\n\n        eventSelect(now)\n        {\n            this.$emit('update:modelValue', \n                (this.tempValue = now.clone()).format(this.format));\n        },\n\n    },\n\n    renderToolbar()\n    {\n        return (\n            <div class=\"n-timepicker-panel__toolbar\">\n                <div class=\"n-timepicker-panel-display\">\n                    <span class=\"n-timepicker-panel__time\">\n                        { this.tempValue.format(this.displayFormat) || this.placeholder }\n                    </span>\n                </div>\n            </div>\n        )\n    },\n\n    renderHourItem(now)\n    {\n        let classList = [\n            'n-timepicker-panel__item'\n        ];\n\n        if ( this.tempValue.valid() && now.hour() === this.tempValue.hour() ) {\n            classList.push('n-selected');\n        }\n\n        let props = {\n            onMousedown: () => this.eventSelect(now)\n        };\n\n        return (\n            <div class={classList} {...props}>\n                <span>{ now.format('HH') }</span>\n            </div>\n        );\n    },\n\n    renderHourPanel()\n    {\n        if ( ! this.displayFormat.match('HH') ) {\n            return null;\n        }\n\n        return (\n            <NScrollbar class=\"n-timepicker-panel__panel\" wrapClass=\"n-timepicker-panel__wrap\">\n                { Arr.each(this.hoursGrid, this.ctor('renderHourItem')) }\n            </NScrollbar>\n        );\n    },\n\n    renderMinuteItem(now)\n    {\n        let classList = [\n            'n-timepicker-panel__item'\n        ];\n\n        if ( this.tempValue.valid() && now.minute() === this.tempValue.minute() ) {\n            classList.push('n-selected');\n        }\n\n        let props = {\n            onMousedown: () => this.eventSelect(now)\n        };\n\n        return (\n            <div class={classList} {...props}>\n                <span>{ now.format('mm') }</span>\n            </div>\n        );\n    },\n\n    renderMinutePanel()\n    {\n        if ( ! this.displayFormat.match('mm') ) {\n            return null;\n        }\n\n        return (\n            <NScrollbar class=\"n-timepicker-panel__panel\" wrapClass=\"n-timepicker-panel__wrap\">\n                { Arr.each(this.minutesGrid, this.ctor('renderMinuteItem')) }\n            </NScrollbar>\n        );\n    },\n\n    renderSecondItem(now)\n    {\n        let classList = [\n            'n-timepicker-panel__item'\n        ];\n\n        if ( this.tempValue.valid() && now.second() === this.tempValue.second() ) {\n            classList.push('n-selected');\n        }\n\n        let props = {\n            onMousedown: () => this.eventSelect(now)\n        };\n\n        return (\n            <div class={classList} {...props}>\n                <span>{ now.format('ss') }</span>\n            </div>\n        );\n    },\n\n    renderSecondPanel()\n    {\n        if ( ! this.displayFormat.match('ss') ) {\n            return null;\n        }\n\n        return (\n            <NScrollbar class=\"n-timepicker-panel__panel\" wrapClass=\"n-timepicker-panel__wrap\">\n                { Arr.each(this.secondsGrid, this.ctor('renderSecondItem')) }\n            </NScrollbar>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-timepicker-panel',\n            'n-timepicker-panel--' + this.size,\n            'n-timepicker-panel--' + this.type,\n        ];\n\n        if ( this.disabled ){\n            classList.push('n-disabled');\n        }\n\n        return (\n            <div class={classList}>\n                <div class=\"n-timepicker-panel__header\">\n                    {this.ctor('renderToolbar')()}\n                </div>\n                <div class=\"n-timepicker-panel__body\">\n                    { this.ctor('renderHourPanel')() }\n                    { this.ctor('renderMinutePanel')() }\n                    { this.ctor('renderSecondPanel')() }\n                </div>\n            </div>\n        );\n    }\n\n}","import { Arr, Obj, Now, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTimepicker',\n\n    props: {\n\n        value: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        clearValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        placeholder: {\n            default()\n            {\n                return 'Select time';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        position: {\n            default()\n            {\n                return 'bottom-start';\n            },\n            type: [String]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        clearable: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        format: {\n            default()\n            {\n                return 'YYYY-MM-DD HH:mm:ss';\n            },\n            type: [String]\n        },\n\n        displayFormat: {\n            default()\n            {\n                return 'HH:mm:ss';\n            },\n            type: [String]\n        },\n\n        hoursInterval: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        },\n\n        minutesInterval: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        },\n\n        secondsInterval: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        }\n\n    },\n\n    computed: {\n\n        hoursGrid()\n        {\n            return this.tempValue.getHours(this.hoursInterval);\n        },\n\n        minutesGrid()\n        {\n            return this.tempValue.getMinutes(this.minutesInterval);\n        },\n\n        secondsGrid()\n        {\n            return this.tempValue.getSeconds(this.secondsInterval);\n        }\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue.format(this.format) ) {\n                this.tempValue = Now.make(value);\n            }\n        }\n\n    },\n\n    data()\n    {\n        return {\n            focus: false,\n            tempValue: Now.make(this.value),\n        }\n    },\n\n    methods: {\n\n        clearTimepicker()\n        {\n            this.tempValue = Now.make(this.clearValue, \n                this.format);\n\n            this.$emit('update:modelValue', this.clearValue);\n        },\n\n        onPopoverInput(value)\n        {\n            this.focus = value;\n        },\n\n        onValueInput(event)\n        {\n            let isNotSameLength = this.displayFormat.length !==\n                event.target.value.length;\n\n            if ( isNotSameLength ) {\n                return;\n            }\n\n            let value = Now.make(event.target.value, \n                this.displayFormat);\n\n            if ( ! value.moment.isValid() ) {\n                return;\n            }\n\n            let moment = this.tempValue.moment.set({\n                hour: value.moment.hour(), \n                minute: value.moment.minute(), \n                second: value.moment.second(),\n            });\n\n            this.tempValue = Now.make(moment);\n\n            this.$emit('update:modelValue', \n                this.tempValue.format(this.format));\n        },\n\n        onTimepickerInput(value)\n        {\n            this.tempValue = Now.make(value, \n                this.format);\n\n            this.$emit('update:modelValue', value);\n        },\n\n    },\n\n    renderLabelClear()\n    {\n        if ( ! this.clearable || ! this.tempValue.valid() ) {\n            return null;\n        }\n\n        let props = {};\n\n        if ( ! this.disabled ) {\n            props.onMousedown = this.clearTimepicker;\n        }\n\n        return (\n            <div class=\"n-timepicker__clear\" {...props}>\n                <i class={ this.icons.times }></i>\n            </div>\n        );\n    },\n\n    renderLabelAngle()\n    {\n        return (\n            <div class=\"n-timepicker__angle\">\n                <i class={ this.icons.angleDown }></i>\n            </div>\n        );\n    },\n\n    renderSingle()\n    {\n        let props = {\n            value: '',\n            disabled: this.disabled,\n            placeholder: this.trans(this.placeholder),\n            onInput: this.onValueInput,\n        };\n\n        if ( this.tempValue.valid() ) {\n            props.value = this.tempValue.format(\n                this.displayFormat, true);\n        }\n\n        return (\n            <div class=\"n-timepicker__input\">\n                <input {...props}/>\n            </div>\n        );\n    },\n\n    renderDisplay()\n    {\n        let classList = [\n            'n-timepicker__display'\n        ];\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderLabelClear')() }\n                { this.ctor('renderSingle')() }\n                { this.ctor('renderLabelAngle')() }\n            </div>\n        );\n    },\n\n    renderPanel()\n    {\n        \n        let props = Obj.except(this.$props, ['modelValue'], {\n            modelValue: this.tempValue.format(this.format) || null,\n        });\n\n        props['onUpdate:modelValue'] = this.onTimepickerInput;\n\n        return (\n            <NTimepickerPanel class=\"n-timepicker__body\" {...props}></NTimepickerPanel>\n        );\n    },\n\n    renderPopover()\n    {\n        let props = {\n            trigger: 'click',\n            width: 0,\n            size: this.size,\n            position: this.position,\n            scrollClose: true,\n            disabled: this.disabled\n        };\n\n        return (\n            <NPopover ref=\"popover\" vModel={this.focus} {...props}>\n                { { raw: this.ctor('renderPanel') } }\n            </NPopover>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-timepicker',\n            'n-timepicker--' + this.type,\n            'n-timepicker--' + this.size,\n        ];\n\n        if ( ! this.tempValue.valid() ) {\n            classList.push('n-empty');\n        }\n\n        if ( this.clearable ) {\n            classList.push('n-clearable');\n        }\n\n        if ( this.focus ) {\n            classList.push('n-focus');\n        }\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderDisplay')() }\n                { this.ctor('renderPopover')() }\n            </div>\n        );\n    }\n\n}","import TimepickerPanel from \"./src/timepicker-panel/timepicker-panel\";\nimport Timepicker from \"./src/timepicker/timepicker\";\n\nexport default function (App) {\n    App.component(TimepickerPanel.name, TimepickerPanel);\n    App.component(Timepicker.name, Timepicker);\n}","import { Arr, Dom, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NTabs',\n\n    provide()\n    {\n        return {\n            NTabs: this\n        };\n    },\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return 'default';\n            },\n            type: [String]\n        },\n\n        relative: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            elements: [], \n            width: 0, \n            offset: 0, \n            tempValue: this.modelValue\n        };\n    },\n\n    methods: {\n\n        addTab(tab)\n        {\n            Arr.add(this.elements, tab, \n                { name: tab.name });\n        },\n\n        removeTab(tab)\n        {\n            Arr.remove(this.elements, \n                { name: tab.name });\n        },\n\n        getTab(updateEvent = true)\n        {\n            let currentTab = Arr.find(this.elements, {\n                name: this.value\n            });\n\n            let sorted = Arr.sort(this.elements, 'sort');\n\n            if ( ! currentTab ) {\n                currentTab = Arr.first(sorted);\n            }\n\n            let repeatNext = () => this.getTab(updateEvent);\n\n            if ( ! currentTab ) {\n                return Any.delay(repeatNext, 250);\n            }\n\n            if ( currentTab.name === this.tempValue || ! updateEvent  ) {\n                return;\n            }\n\n            this.$emit('update:modelValue', \n                this.tempValue = currentTab.name);\n        },\n\n        changeTab(value)\n        {\n            if ( this.tempValue === value ) {\n                return;\n            }\n\n            this.$emit('update:modelValue', \n                this.tempValue = value);\n        }\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue ) {\n                this.tempValue = value;\n            }\n        }\n\n    },\n\n    mounted()\n    {\n        this.getTab(false);\n    },\n\n    updated()\n    {\n        let width = Dom.find(this.$el).find('.n-active')\n            .width();\n\n        this.width = width < 0 ? 0 : width;\n\n        let offset = Dom.find(this.$el).find('.n-active')\n            .offset('left', this.$el);\n\n        this.offset = offset < 0 ? 0 : offset;\n    },\n\n    renderHeaderIndicator()\n    {\n        let transform = `scaleX(${this.width / 100}) ` + \n            `translateX(${this.offset / (this.width / 100)}px)`;\n\n        return (\n            <div class=\"n-tabs__indicator\" style={{ transform }}>\n                { /* Indicator bar */ }\n            </div>\n        );\n    },\n\n    renderHeader()\n    {\n        if ( this.elements.length <= 1 ) {\n            return null;\n        }\n\n        // FIXME: As soon vue doesnt bug\n        let sorted = Arr.sort(this.elements, 'sort');\n        \n        let tabs = Arr.each(Arr.make(sorted.length), (tab, index) => {\n            return sorted[index].ctor('renderHeader')();\n        });\n\n        return (\n            <NScrollbar relative={true}>\n                <div class=\"n-tabs__header\">\n                    { [tabs, this.ctor('renderHeaderIndicator')()] }\n                </div>\n            </NScrollbar>\n        );\n    },\n\n    renderBody()\n    {\n        return (\n            <div class=\"n-tabs__body\">\n                { this.$slots.default && this.$slots.default() }\n            </div>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-tabs', \n            'n-tabs--' + this.size, \n            'n-tabs--' + this.type\n        ];\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderHeader')() }\n                { this.ctor('renderBody')() }\n            </div>\n        );\n    }\n}\n","import { h, resolveComponent } from \"vue\";\n\nexport default {\n\n    name: 'NTabsItem',\n\n    inject: {\n\n        NTabs: {\n            default: undefined\n        }\n\n    },\n\n    provide()\n    {\n        return {\n            NTabsItem: this\n        };\n    },\n\n    props: {\n\n        label: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        name: {\n            default()\n            {\n                return 'default';\n            },\n            type: [String]\n        },\n\n        icon: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        sort: {\n            default()\n            {\n                return 0;\n            },\n            type: [Number]\n        },\n\n        preload: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        keep: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        }\n\n\n    },\n\n    methods: {\n\n        changeTab()\n        {\n            this.NTabs.changeTab(this.name);\n        }\n\n    },\n\n    data()\n    {\n        return {\n            _key: null, init: false\n        }\n    },\n\n    beforeMount()\n    {\n        this.NTabs.addTab(this);\n    },\n\n    beforeUnmount()\n    {\n        this.NTabs.removeTab(this);\n    },\n\n    renderHeaderIcon()\n    {\n        if ( ! this.$slots.icon && ! this.icon ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-tabs__tab-icon\">\n                { this.$slots.icon && this.$slots.icon() || <i class={this.icon}></i> }\n            </div>\n        );\n    },\n\n    renderHeaderLabel()\n    {\n        return (\n            <div class=\"n-tabs__tab-label\">\n                { this.$slots.label && this.$slots.label () || <span>{this.label}</span> }\n            </div>\n        );\n    },\n\n    renderHeader()\n    {\n        let classList = [\n            'n-tabs__tab'\n        ];\n\n        if ( this.NTabs.tempValue === this.name ) {\n            classList.push('n-active');\n        }\n\n        let props = {\n            onClick: () => this.changeTab(this.name)\n        };\n\n        return (\n            <div class={classList} {...props}>\n                { this.ctor('renderHeaderIcon')() }\n                { this.ctor('renderHeaderLabel')() }\n            </div>\n        );\n    },\n\n    render()\n    {\n        let renderBody = this.NTabs.tempValue === this.name;\n\n        if ( this.NTabs.tempValue !== this.name && this.keep ) {\n            renderBody = this.init;\n        }\n\n        if ( this.NTabs.tempValue !== this.name && this.preload ) {\n            renderBody = true;\n        }\n\n        if ( ! renderBody ) {\n            return null;\n        }\n\n        this.init = true;\n\n        let classList = [\n            'n-tabs-item'\n        ];\n\n        let style = {};\n\n        if ( this.NTabs.tempValue !== this.name ) {\n            style.display = 'none';\n        }\n\n        if ( this.$slots.raw ) { \n            return this.$slots.raw();\n        }\n\n        let element = 'div';\n\n        if ( ! this.NTabs.relative ) {\n            element = resolveComponent('NScrollbar');\n        }\n\n        return h(element, { class: classList, style }, [\n            this.$slots.default && this.$slots.default()\n        ]);\n    }\n}\n","import Tabs from './src/tabs/tabs';\nimport TabsItem from './src/tabs-item/tabs-item';\n\nexport default function (App) {\n    App.component(Tabs.name, Tabs);\n    App.component(TabsItem.name, TabsItem);\n}","export default {\n\n    name: 'NEmptyIcon',\n\n    props: {\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'ufo';\n            },\n            type: [String]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        }\n\n    },\n\n    render()\n    {\n        let classList = [\n            'n-empty-icon',\n            'n-empty-icon--' + this.size,\n            'n-empty-icon--' + this.type\n        ];\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        return (\n            <div class={classList}>\n                <div class=\"n-empty-icon__frame\">\n                    { /* Icon  */ }\n                </div>\n                <div class=\"n-empty-icon__text\">\n                    { this.$slots.default && this.$slots.default() }\n                </div>\n            </div>\n        );\n    }\n\n}\n","import EmptyIcon from './src/empty-icon/empty-icon';\n\nexport default function (App) {\n    App.component(EmptyIcon.name, EmptyIcon);\n}\n","import { Arr, Obj, Any } from \"nano-js\";\nimport { h, resolveComponent } from \"vue\";\n\nexport default {\n\n    name: 'NConfig',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return {};\n            },\n            type: [Object]\n        },\n\n        config: {\n            default()\n            {\n                return {};\n            },\n            type: [Object]\n        },\n\n        scope: {\n            default()\n            {\n                return this;\n            },\n            type: [Object]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue\n        };\n    },\n\n    methods: {\n\n        solveAwait(value)\n        {\n            if ( Any.isEmpty(value) ) {\n                return true;\n            }\n\n            if ( Any.isString(value) && value.match(/\\$\\$scope/) ) {\n                return Obj.has({ $$scope: this.scope }, value);\n            }\n\n            if ( Any.isString(value) && value.match(/\\$\\$value/) ) {\n                return Obj.has({ $$value: this.tempValue }, value);\n            }\n\n            return false;\n        },\n\n        solveValue(value, ...args)\n        {\n            if ( Any.isFunction(value) ) {\n                return value.apply(this.scope, [this.tempValue, ...args]);\n            }\n\n            if ( Any.isString(value) && value.match(/^\\$\\$scope/) ) {\n                return Obj.get({ $$scope: this.scope }, value);\n            }\n\n            if ( Any.isString(value) && value.match(/^\\$\\$value/) ) {\n                return Obj.get({ $$value: this.tempValue }, value);\n            }\n\n            return value;\n        },\n\n        solveEvent(value)\n        {\n            let scope = Obj.assign(this.scope, {\n                $configRefs: this.$refs\n            });\n\n            if ( Any.isFunction(value) ) {\n                return (...args) => value.apply(scope, args);\n            }\n\n            return value;\n        },\n\n        solveContent(value, ...args)\n        {\n            if ( Any.isFunction(value) ) {\n                return value.apply(this.scope, [this.$render, this.tempValue, ...args]);\n            }\n\n            return value;\n        },\n\n        prepareValue(veModel)\n        {\n            if ( ! veModel.path ) {\n                return veModel.fallback;\n            }\n\n            if ( ! Obj.has(this.tempValue, veModel.path) ) {\n                this.deepSet(this.tempValue, veModel.path, veModel.fallback);\n            }\n\n            return Obj.get(this.tempValue, veModel.path);\n        },\n\n        inputClosure(veModel, closure = null)\n        {\n            if ( ! veModel.path ) {\n                return () => null;\n            }\n\n            return (value) => {\n\n                if ( closure ) {\n                    closure(value, this.tempValue);\n                }\n\n                this.deepSet(this.tempValue, veModel.path, value);\n            };\n        },\n\n        deepSet(obj, keys, val)\n        {\n            keys = (typeof keys === 'string') ?\n                keys.split('.') : keys;\n\n            let key = keys.shift();\n\n            if ( obj[key] === undefined || obj[key] === null ) {\n                Obj.set(obj, key, {});\n            }\n\n            if ( keys.length === 0 ) {\n                return Obj.set(obj, key, val);\n            }\n\n            return this.deepSet(obj[key], keys, val);\n        }\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue ) {\n                this.tempValue = value;\n            }\n        }\n\n    },\n\n    renderLayer(source)\n    {\n        if ( ! Any.isPlain(source) ) {\n            return source;\n        }\n\n        return Arr.each(source, (setup, component) => {\n\n            component = component.replace(/:.*?$/, '');\n\n            // Set setup defaults\n            setup = Obj.assign({\n                vIf: true, vShow: true, vAwait: null, class: null, $on: {}, $props: {}, $attrs: {}\n            }, setup);\n\n            if ( ! this.solveAwait(setup.vAwait) ) {\n                return null;\n            }\n\n            if ( ! this.solveValue(setup.vIf) ) {\n                return null;\n            }\n\n            if ( ! this.solveValue(setup.vShow) ) {\n                setup.style = { display: 'none' };\n            }\n\n            // Build default model\n            let veModel = Obj.assign({\n                prop: 'modelValue', fallback: null\n            }, setup.model);\n\n            // Delete model from setup\n            delete setup.model;\n\n            // Normalize props\n            setup.$props = this.solveValue(setup.$props);\n\n            // Normalize class\n            setup.class = this.solveValue(setup.class);\n\n            // Solve props\n            Obj.map(setup.$props, (value) => this.solveValue(value));\n\n            // Normalize attrs\n            setup.$attrs = this.solveValue(setup.$attrs);\n\n            // Solve attrs\n            Obj.map(setup.$attrs, (value) => this.solveValue(value));\n\n            // Solve events\n            Obj.map(setup.$on, (value) => this.solveEvent(value));\n\n            if ( veModel.path ) {\n\n                // Override input event\n                setup['onUpdate:modelValue'] = this.inputClosure(veModel, setup.$on.input);\n\n                // Set prop in value or get fallback\n                setup.$props[veModel.prop] = this.prepareValue(veModel);\n            }\n\n            Obj.assign(setup, setup.$props);\n            delete setup.$props;\n\n            Obj.assign(setup, setup.$attrs);\n            delete setup.$attrs;\n\n            Obj.assign(setup, setup.$on);\n            delete setup.$on;\n            \n            let content = setup.content;\n            delete setup.content;\n            \n            delete setup.vIf;\n            delete setup.vShow;\n            delete setup.vAwait;\n\n            // Solve conten if is functional\n            let slots = this.solveContent(content, setup);\n\n            let domtypes = [\n                'div', 'span', 'a'\n            ];\n\n            let resolved = component;\n\n            if ( ! Arr.has(domtypes, resolved) ) {\n                resolved = resolveComponent(component);\n            }\n\n            return h(resolved, setup,\n                this.ctor('renderLayer')(slots));\n        });\n    },\n\n    render()\n    {\n        return this.ctor('renderLayer')(this.config)[0];\n    }\n\n}\n","import NConfig from \"./src/config/config\";\n\nexport default function(App) {\n    App.component(NConfig.name, NConfig);\n}\n","import { UUID, Arr, Obj, Dom, Any, Locale, Event, Num } from \"nano-js\";\nimport Optiscroll from 'optiscroll';\n\nexport default {\n\n    name: 'NScrollbar',\n\n    provide()\n    {\n        return {\n            NScrollbar: this\n        };\n    },\n\n    props: {\n\n        options: {\n            default()\n            {\n                return {};\n            },\n            type: [Object]\n        },\n\n        relative: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        fixture: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        framerate: {\n            default()\n            {\n                return 5;\n            },\n            type: [Number]\n        },\n\n        wrapClass: {\n            default()\n            {\n                return 'n-scrollbar__wrap';\n            }\n        }\n\n    },\n\n    mounted()\n    {\n        this.bindAdaptHeight();\n        this.bindAdaptWidth();\n        this.bindOptiscroll();\n\n        Event.bind('NScrollbar:resize',\n            this.onResize, this._.uid);\n\n        Event.bind('NResizer:moved',\n            Any.debounce(this.onUpdate, 200), this._.uid);\n\n        Dom.find(window).on('resize', \n            Any.debounce(this.onResize, 500), this._.uid);\n\n        Dom.find(this.$el).on('sizechange', \n            this.onSizechange, this._.uid);\n\n        Dom.find(this.$el).on('scroll', \n            this.onScroll, this._.uid);\n    },\n\n    updated()\n    {\n        if ( this.optiscroll ) {\n            Dom.find(this.$el).addClass('is-enabled');\n        }\n\n        if ( this.passedHeight || this.passedWidth ) {\n            Dom.find(this.$el).addClass('is-ready');\n        }\n    },\n\n    beforeUnmount()\n    {\n        this.unbindAdaptHeight();\n        this.unbindAdaptWidth();\n        this.unbindOptiscroll();\n\n        Event.unbind('NScrollbar:resize', \n            this._.uid);\n\n        Event.unbind('NResizer:moved', \n            this._.uid);\n\n        Dom.find(window).off('resize', \n            null, this._.uid);\n\n        Dom.find(this.$el).off('sizechange', \n            null, this._.uid);\n\n        Dom.find(this.$el).off('scroll', \n            null, this._.uid);\n    },\n\n    methods: {\n\n        scrollTo(x = 0, y = 0, delay = 0)\n        {\n            Any.delay(() => this.onScrollTo(x, y), delay);\n        },\n\n        onScrollTo(x = 0, y = 0)\n        {\n            this.optiscroll.scrollTo(x, y, 0);\n        },\n\n        scrollIntoView(selector, delay = 200)\n        {\n            Any.delay(() => this.onScrollIntoView(selector), delay);\n        },\n\n        onScrollIntoView(selector)\n        {\n            this.optiscroll.scrollIntoView(selector, 0);\n        },\n\n        bindOptiscroll()\n        {\n            Optiscroll.globalSettings.\n                checkFrequency = 250;\n\n            Optiscroll.globalSettings.\n                scrollMinUpdateInterval = 15;\n\n            let options = {\n                classPrefix: 'n-scrollbar-',\n                minTrackSize: 15,\n                forceScrollbars: true,\n                autoUpdate: true,\n                preventParentScroll: true,\n                wrapContent: false,\n            };\n\n            this.optiscroll = new Optiscroll(this.$el, options);\n        },\n\n        unbindOptiscroll()\n        {\n            this.optiscroll.destroy();\n        },\n\n        adaptHeight()\n        {\n            let height = Dom.find(this.$refs.content)\n                .child().height();\n\n            let window = Dom.find(this.$el)\n                .height();\n\n            if ( height === this.passedHeight ) {\n                return;\n            }\n\n            if ( window ) {\n                this.passedHeight = height;\n            }\n\n            let style = {\n                height: height + 'px'\n            };\n\n            if ( this.fixture ) {\n                Dom.find(this.$refs.content).child().css(style);\n            }\n\n            if ( ! this.relative ) {\n                return Any.delay(this.onSizechange, 100);\n            }\n\n            Dom.find(this.$refs.spacer).child().css(style);\n        },\n\n        bindAdaptHeight()\n        {\n            this.refreshHeight = setInterval(this.adaptHeight, \n                1000 / this.framerate);\n        },\n\n        unbindAdaptHeight()\n        {\n            clearInterval(this.refreshHeight);\n        },\n\n        adaptWidth()\n        {\n            let width = Dom.find(this.$refs.content)\n                .child().width();\n\n            let window = Dom.find(this.$el)\n                .width();\n\n            if ( width === this.passedWidth ) {\n                return;\n            }\n\n            if ( window ) {\n                this.passedWidth = width;\n            }\n\n            let style = {\n                width: width + 'px'\n            };\n\n            if ( this.fixture ) {\n                this.onUpdate();\n            }\n\n            if ( ! this.relative ) {\n                return Any.delay(this.onSizechange, 100);\n            }\n\n            Dom.find(this.$refs.spacer).child().css(style);\n        },\n\n        bindAdaptWidth()\n        {\n            this.refreshWidth = setInterval(this.adaptWidth, \n                1000 / this.framerate);\n        },\n\n        unbindAdaptWidth()\n        {\n            clearInterval(this.refreshWidth);\n        },\n\n        onScroll(event)\n        {\n            let scrollTop = this.$refs.content\n                .scrollTop;\n\n            this.$emit('scrollupdate', scrollTop);\n        },\n\n        onSizechange(event)\n        {\n            let height = Dom.find(this.$el).height();\n\n            if ( this.passedHeight || this.passedWidth ) {\n                Dom.find(this.$el).addClass('is-ready');\n            }\n\n            this.$emit('sizechange', height);\n        },\n\n        onResize(event)\n        {\n            if ( ! this.fixture ) {\n                return;\n            }\n\n            this.onUpdate();\n\n            this.$nextTick(() => {\n                Dom.find(this.$el).fire('resized');\n            });\n        },\n\n        onUpdate()\n        {\n            if ( ! this.fixture ) {\n                return;\n            }\n\n            let $child = Dom.find(this.$refs.content)\n                .child();\n\n            let height = $child.actual(() => {\n                return $child.scrollHeight();\n            });\n\n            if ( height !== this.passedHeight ) {\n                $child.css({ height: height + 'px' });\n            }\n\n            let width = $child.actual(() => {\n                return $child.scrollWidth();\n            });\n\n            if ( width !== this.passedWidth ) {\n                $child.css({ width: width + 'px' });\n            }\n        }\n\n    },\n\n    render()\n    {\n        let classList = [\n            'n-scrollbar'\n        ];\n\n        return (\n            <div class={classList} {...Obj.except(this.$attrs, ['class'])}>\n                <div class=\"n-scrollbar-content\" ref=\"content\">\n                    <div class={this.wrapClass}>\n                        { this.$slots.default && this.$slots.default() }\n                    </div>\n                </div>\n                <div class=\"n-scrollbar-spacer\" ref=\"spacer\">\n                    <div class={this.wrapClass}>\n                        { /* Adapt inner height */ }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n","import Scrollbar from './src/scrollbar/scrollbar';\n\nexport default function (App) {\n    App.component(Scrollbar.name, Scrollbar);\n}","import { UUID, Arr, Obj, Num, Dom, Any, Locale, Event } from \"nano-js\";\n\nexport default {\n\n    name: 'NVirtualscroller',\n\n    model: {\n        prop: 'items'\n    },\n\n    props: {\n\n        items: {\n            default()\n            {\n                return [];\n            }\n        },\n\n        itemHeight: {\n            default()\n            {\n                return 30;\n            }\n        },\n\n        renderNode: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        threshold: {\n            default()\n            {\n                return 40;\n            },\n            type: [Number]\n        },\n\n        bufferItems: {\n            default()\n            {\n                return 40;\n            },\n            type: [Number]\n        },\n\n    },\n\n    data()\n    {\n        let state = {\n            startIndex: 0, endIndex: 0,\n        };\n\n        return {\n            state, height: 0, scrollTop: 0\n        };\n    },\n\n    watch: {\n\n        'items': function () {\n            this.updateRender();\n        }\n\n    },\n\n    methods: {\n\n        isIndexRendered(index)\n        {\n            if ( this.items.length <= this.threshold ) {\n                return true;\n            }\n\n            return this.state.startIndex < index && \n                this.state.endIndex > index;\n        },\n\n        scrollIntoView(index)\n        {\n            if ( ! this.$refs.scrollbar ) {\n                return;\n            }\n\n            if ( index === -1 || index >= this.items.length ) {\n                index = this.items.length;\n            }\n\n            if ( ! this.isIndexRendered(index) ) {\n                return this.scrollToIndex(index);\n            }\n\n            let selector = `[data-index=\"${index}\"]`;\n\n            this.$refs.scrollbar.scrollIntoView(selector);\n        },\n\n        scrollToIndex(index)\n        {\n            if ( ! this.$refs.scrollbar ) {\n                return;\n            }\n\n            if ( index === -1 || index >= this.items.length ) {\n                index = this.items.length;\n            }\n\n            let targetTop = index * this.itemHeight;\n\n            if ( this.scrollTop > targetTop ) {\n                return this.scrollTo(0, targetTop);\n            }\n\n            targetTop = targetTop - this.height + \n                this.itemHeight;\n\n            this.scrollTo(0, targetTop);\n        },\n\n        scrollTo(x = 0, y = 0)\n        {\n            if ( ! this.$refs.scrollbar ) {\n                return;\n            }\n\n            this.$refs.scrollbar.scrollTo(x, y);\n        },\n\n        clearState()\n        {\n            this.state = { startIndex: 0, endIndex: 0 };\n        },\n\n        updateRender()\n        {\n            if ( this.items.length <= this.threshold ) {\n                return this.clearState();\n            }\n\n            this.scrollTop = Obj.get(this.$refs.scrollbar, \n                '$refs.content.scrollTop');\n\n            this.refreshDriver();\n        },\n\n        onScrollupdate(scrollTop)\n        {\n            if ( ! Any.isNumber(scrollTop) ) {\n                return;\n            }\n\n            if ( this.items.length <= this.threshold ) {\n                return this.clearState();\n            }\n            \n            this.scrollTop = scrollTop;\n\n            this.refreshDriver();\n        },\n\n        onSizechange(height)\n        {\n            if ( ! Any.isNumber(height) ) {\n                return;\n            }\n\n            if ( this.items.length <= this.threshold ) {\n                return this.clearState();\n            }\n\n            this.height = height;\n\n            this.refreshDriver();\n        },\n\n        refreshDriver()\n        {\n            let startItem = Math.round(this.scrollTop / \n                this.itemHeight);\n\n            let endItem = Math.round((this.scrollTop + \n                this.height) /  this.itemHeight);\n\n            let startIndex = startItem - this.bufferItems;\n\n            if ( startIndex < 0 ) {\n                startIndex = 0;\n            }\n\n            let endIndex = endItem + this.bufferItems;\n\n            if ( endIndex > this.items.length ) {\n                endIndex = this.items.length;\n            }\n\n            let newState = {\n                startIndex, endIndex\n            };\n\n            if ( ! Any.isEqual(newState, this.state) ) {\n                this.state = newState;\n            }\n        },\n\n    },\n\n    renderItem(passed)\n    {\n        passed.index = (passed.index + \n            this.state.startIndex);\n\n        let topOffset = Math.round(this.itemHeight * \n            passed.index);\n\n        let renderFunction = this.$slots.default;\n\n        // Finally render node\n        if ( this.renderNode ) {\n            renderFunction = this.renderNode;\n        }\n\n        let props = {\n            'data-index': passed.index\n        };\n\n        props.style = {\n            top: topOffset + 'px', height: this.itemHeight + 'px'\n        };\n        \n        return (\n            <div class=\"n-virtualscroller__item\" {...props}>\n                { renderFunction(passed) }\n            </div>\n        );\n    },\n\n    renderItems()\n    {\n        if ( ! this.items.length ) {\n            return this.$slots.empty && this.$slots.empty() || null;\n        };\n\n        let items = Arr.slice(this.items, this.state.startIndex,\n            this.state.endIndex);\n\n        if ( this.items.length <= this.threshold ) {\n            items = this.items;\n        }\n\n        return Arr.each(items, (value, index) => {\n            return this.ctor('renderItem')({ value, index });\n        });\n    },\n\n    render()\n    {\n        let props = {\n            onSizechange: this.onSizechange,\n            onScrollupdate: this.onScrollupdate,\n        };\n\n        let style = {};\n\n        if ( this.items.length ) {\n            style.height = (this.items.length * this.itemHeight) + 'px';\n        }\n\n        return (\n            <NScrollbar ref=\"scrollbar\" {...props}>\n                <div class=\"n-virtualscroller__inner\" style={style}>\n                    { this.ctor('renderItems')() }\n                </div>\n            </NScrollbar>\n        );\n    }\n\n}\n","import Virtualscroller from './src/virtualscroller/virtualscroller.beta';\n\nexport default function (App) {\n    App.component(Virtualscroller.name, Virtualscroller);\n}","import { UUID, Num, Obj, Any, Dom, Locale } from \"nano-js\";\n\nexport default {\n\n    name: 'NLoader',\n\n    inject: {\n\n        NLoader: {\n            default: undefined\n        }\n\n    },\n\n    provide()\n    {\n        return {\n            NLoader: this\n        };\n    },\n\n    props: {\n\n        visible: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        minimum: {\n            default()\n            {\n                return 300;\n            },\n            type: [Number]\n        },\n\n        debounce: {\n            default()\n            {\n                return 100;\n            },\n            type: [Number]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempVisible: this.visible\n        };\n    },\n\n    methods: {\n\n        applyTimer()\n        {\n            this.timing = Date.now();\n\n            if ( this.visible) {\n                return this.tempVisible = this.visible;\n            }\n\n            this.startTimer();\n        },\n\n        startTimer()\n        {\n            let timing = Date.now() - this.timing;\n\n            if ( timing < this.minimum ) {\n                return this.restartTimer(timing);\n            }\n\n            this.timeout = setTimeout(() => this.tempVisible = false, \n                this.debounce);\n        },\n\n        restartTimer(timing = 0) {\n            Any.delay(this.startTimer, this.minimum - timing + 10);\n        }\n\n    },\n\n    watch: {\n\n        visible()\n        {\n            this.applyTimer();\n        }\n\n    },\n\n    mounted()\n    {\n        this.applyTimer();\n    },\n\n    render()\n    {\n        let classList = [\n            'n-loader', \n            'n-loader--' + this.size, \n            'n-loader--' + this.type\n        ];\n\n        if ( this.tempVisible ) {\n            classList.push('n-load');\n        }\n\n        return (\n            <div class={classList}>\n                { this.$slots.default && this.$slots.default() }\n            </div>\n        );\n    }\n}\n","import Loader from './src/loader/loader';\n\nexport default function (App) {\n    App.component(Loader.name, Loader);\n}\n","import { UUID, Arr, Obj, Dom, Any, Locale, Event, Num } from \"nano-js\";\n\nexport default {\n\n    name: 'NResizer',\n\n    inject: {\n\n        NScrollbar: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return 0;\n            },\n            type: [Number]\n        },\n\n        minWidth: {\n            default()\n            {\n                return 60;\n            },\n            type: [Number]\n        },\n\n        maxWidth: {\n            default()\n            {\n                return 0;\n            },\n            type: [Number]\n        },\n\n        group: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        position: {\n            default()\n            {\n                return 'right';\n            },\n            type: [String]\n        },\n\n        resizerWidth: {\n            default()\n            {\n                return 8;\n            },\n            type: [Number]\n        }\n\n    },\n\n    data()\n    {\n        return {\n            sizeFixed: false,\n            tempValue: this.modelValue,\n        };\n    },\n\n    mounted()\n    {\n        if ( ! this.modelValue ) {\n            this.updateWidth();\n        }\n\n        if ( this.NScrollbar ) {\n            this.bindSizechange();\n        }\n\n        Event.bind('NResizer:move', \n            this.forceWidth, this._.uid);\n\n        Dom.find(window).on('resize', \n            Any.debounce(this.onResize, 500), this._.uid);\n    },\n\n    updated()\n    {\n        this.updateWidth();\n    },\n\n    unmounted()\n    {\n        if ( this.NScrollbar ) {\n            this.unbindSizechange();\n        }\n\n        Event.unbind('NResizer:move', \n            this._.uid);\n        \n        Dom.find(window).off('resize', \n            null, this._.uid);\n    },\n\n    methods: {\n\n        forceWidth(group)\n        {\n            if ( ! Arr.has(group, this.group) ) {\n                return;\n            }\n            \n            if ( ! this.tempValue || ! this.group.length ) {\n                return;\n            }\n\n            this.sizeFixed = true;\n\n            let style = {\n                width: this.tempValue + 'px', flex: '0 0 auto'\n            };\n\n            Dom.find(this.$el).css(style);\n        },\n\n        updateWidth()\n        {\n            this.tempValue = Dom.find(this.$el)\n                .width();\n\n            this.updateHandle();\n\n            this.$emit('update:modelValue', \n                this.tempValue);\n        },\n\n        updateHandle()\n        {\n            let style = {};\n\n            if ( this.position === 'left' ) {\n                style.transform =`translateX(-${this.tempValue - this.resizerWidth}px)`\n            }\n    \n            if ( this.position === 'right' ) {\n                style.transform = `translateX(${this.tempValue - this.resizerWidth}px)`\n            }\n\n            Dom.find(this.$refs.handle).css(style);\n        },\n\n        bindSizechange()\n        {\n            Dom.find(this.NScrollbar.$el).on('resized', \n                Any.debounce(this.updateWidth, 100), this._.uid);\n        },\n\n        unbindSizechange()\n        {\n            Dom.find(this.NScrollbar.$el)\n                .off('resized', null, this._.uid);\n        },\n\n\n        onResize()\n        {\n            if ( this.NScrollbar ) {\n                return;\n            }\n\n            this.updateWidth();\n        },\n\n        onLeftMousedown(event)\n        {\n            if ( event.which !== 1 ) {\n                return;\n            }\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            if ( this.group.length ) {\n                Event.fire('NResizer:move', this.group);\n            }\n\n            Dom.find(this.$el).addClass('n-move');\n            Dom.find(document.body).addClass('n-move');\n\n            Dom.find(document).on('mouseup',\n                Any.framerate(this.onLeftMouseup, 60), this._.uid);\n\n            Dom.find(document).on('mousemove',\n                Any.framerate(this.onLeftMousemove, 60), this._.uid);\n        },\n\n        onLeftMousemove(event)\n        {\n            this.clientX = (window.innerWidth - event.clientX);\n\n            event.preventDefault();\n\n            let offsetX = Dom.find(this.$el)\n                .offset('right');\n\n            let scrollX = Dom.find(this.$el)\n                .scroll('right');\n\n            let targetWidth = (this.clientX + scrollX - offsetX) -\n                (this.resizerWidth / 2);\n\n            if ( this.minWidth ) {\n                targetWidth = Math.max(targetWidth,\n                    this.minWidth - this.resizerWidth);\n            }\n\n            if ( this.maxWidth ) {\n                targetWidth = Math.min(targetWidth,\n                    this.maxWidth - this.resizerWidth);\n            }\n\n            let style = {\n                transform: `translateX(-${targetWidth}px)`\n            };\n\n            Dom.find(this.$refs.handle).css(style);\n        },\n\n        onLeftMouseup(event)\n        {\n            event.preventDefault();\n            event.stopPropagation();\n\n            Dom.find(document).off('mouseup', null, this._.uid);\n            Dom.find(document).off('mousemove', null, this._.uid);\n\n            if ( ! this.clientX ) {\n                return;\n            }\n\n            let offsetX = Dom.find(this.$el)\n                .offset('right');\n\n            let scrollX = Dom.find(this.$el)\n                .scroll('right');\n\n            let targetWidth = this.clientX + scrollX - offsetX;\n\n            if ( this.minWidth ) {\n                targetWidth = Math.max(targetWidth, this.minWidth);\n            }\n\n            if ( this.maxWidth ) {\n                targetWidth = Math.min(targetWidth, this.maxWidth);\n            }\n\n            this.tempValue = Math.round(targetWidth);\n\n            Dom.find(this.$el).removeClass('n-move');\n\n            let style = {\n                transform: `translateX(-${targetWidth - this.resizerWidth}px)`\n            };\n\n            Dom.find(this.$refs.handle).css(style);\n\n            delete this.clientX;\n\n            if ( this.group.length ) {\n                Event.fire('NResizer:moved', this.group);\n            }\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        onRightMousedown(event)\n        {\n            if ( event.which !== 1 ) {\n                return;\n            }\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            if ( this.group.length ) {\n                Event.fire('NResizer:move', this.group);\n            }\n\n            Dom.find(this.$el).addClass('n-move');\n            Dom.find(document.body).addClass('n-move');\n\n            Dom.find(document).on('mouseup',\n                Any.framerate(this.onRightMouseup, 60), this._.uid);\n\n            Dom.find(document).on('mousemove',\n                Any.framerate(this.onRightMousemove, 60), this._.uid);\n        },\n\n        onRightMousemove(event)\n        {\n            this.clientX = event.clientX;\n\n            event.preventDefault();\n\n            let offsetX = Dom.find(this.$el)\n                .offset('left');\n\n            let scrollX = Dom.find(this.$el)\n                .scroll('left');\n\n            let targetWidth = (this.clientX + scrollX - offsetX) -\n                (this.resizerWidth / 2);\n\n            if ( this.minWidth ) {\n                targetWidth = Math.max(targetWidth,\n                    this.minWidth - this.resizerWidth);\n            }\n\n            if ( this.maxWidth ) {\n                targetWidth = Math.min(targetWidth,\n                    this.maxWidth - this.resizerWidth);\n            }\n\n            let style = {\n                transform: `translateX(${targetWidth}px)`\n            };\n\n            Dom.find(this.$refs.handle).css(style);\n        },\n\n        onRightMouseup(event)\n        {\n            event.preventDefault();\n            event.stopPropagation();\n\n            Dom.find(document).off('mousemove', null, this._.uid);\n            Dom.find(document).off('mouseup', null, this._.uid);\n\n            if ( ! this.clientX ) {\n                return;\n            }\n\n            let offsetX = Dom.find(this.$el)\n                .offset('left');\n\n            let scrollX = Dom.find(this.$el)\n                .scroll('left');\n\n            let targetWidth = this.clientX + scrollX - offsetX;\n\n            if ( this.minWidth ) {\n                targetWidth = Math.max(targetWidth, this.minWidth);\n            }\n\n            if ( this.maxWidth ) {\n                targetWidth = Math.min(targetWidth, this.maxWidth);\n            }\n\n            this.tempValue = Math.round(targetWidth);\n\n            Dom.find(this.$el).removeClass('n-move');\n\n            let style = {\n                transform: `translateX(${targetWidth - this.resizerWidth}px)`\n            };\n\n            Dom.find(this.$refs.handle).css(style);\n\n            let frameStyle = {\n                width: this.tempValue + 'px', flex: '0 0 auto'\n            };\n\n            Dom.find(this.$el).css(frameStyle);\n\n            delete this.clientX;\n\n            if ( this.group.length ) {\n                Event.fire('NResizer:moved', this.group);\n            }\n\n            this.$emit('update:modelValue', this.tempValue);\n        }\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue ) {\n                this.tempValue = value;\n            }\n        }\n\n    },\n\n    renderHandle()\n    {\n        if ( this.disabled ) {\n            return null;\n        }\n        \n        let classList = [\n            'n-resizer__handle',\n        ];\n\n        let props = {};\n\n        if ( this.position === 'right' ) {\n            props.onMousedown = this.onRightMousedown;\n        }\n\n        if ( this.position === 'left' ) {\n            props.onMousedown = this.onLeftMousedown;\n        }\n\n        return (\n            <div ref=\"handle\" class={classList} {...props}/>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-resizer',\n            'n-resizer--' + this.position,\n        ];\n\n        let style = {};\n\n        if ( this.minWidth ) {\n            style['min-width'] = this.minWidth + 'px';\n        }\n\n        if ( this.maxWidth ) {\n            style['max-width'] = this.maxWidth + 'px';\n        }\n\n        return (\n            <div class={classList} style={style}>\n                { [this.$slots.default(), this.ctor('renderHandle')()] }\n            </div>\n        );\n    }\n\n}\n","import Resizer from './src/resizer/resizer';\n\nexport default function (App) {\n    App.component(Resizer.name, Resizer);\n}\n","import { UUID, Num, Arr, Obj, Any, Dom, Locale } from \"nano-js\";\n\nexport default {\n\n    name: 'NModal',\n\n    inject: {\n\n        NScrollbar: {\n            default: undefined\n        }\n\n    },\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        selector: {\n            default()\n            {\n                return null;\n            },\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        width: {\n            default()\n            {\n                return '50%';\n            },\n            type: [String]\n        },\n\n        height: {\n            default()\n            {\n                return 'auto';\n            },\n            type: [String]\n        },\n\n        title: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'default';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        position: {\n            default()\n            {\n                return 'center-center';\n            },\n            type: [String]\n        },\n\n        closable: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        },\n\n        renderClose: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        }\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue ) {\n                this.tempValue = value;\n            }\n        },\n\n        tempValue()\n        {\n            this.startRefreshTimeout();\n        }\n\n    },\n\n    provide()\n    {\n        return {\n            NModal: this\n        };\n    },\n\n    data()\n    {\n        return {\n            target: null, tempValue: this.modelValue\n        };\n    },\n\n    mounted()\n    {\n        this.target = Dom.find(this.$el).previous().get(0);\n\n        Dom.find(document.body).on('mousedown',\n            this.eventClick, this._.uid);\n\n        Dom.find(document.body).on('keydown',\n            this.eventKeydown, this._.uid);\n\n        // if ( ! this.$listeners.close ) {\n        //     this.$on('close', this.close);\n        // }\n\n        // this.target = Dom.find(this.$el).previous().get(0);\n\n        // if ( ! Any.isEmpty(this.selector) ) {\n        //     this.target = Dom.find(this.$el).parent().find(this.selector).get(0);\n        // }\n\n        Dom.find(document.body).append(this.$el);\n    },\n\n    beforeUnmount()\n    {\n        this.$el.remove();\n    },\n\n    unmounted()\n    {\n        Dom.find(document.body).off('mousedown',\n            null, this._.uid);\n\n        Dom.find(document.body).off('keydown',\n            null, this._.uid);\n    },\n\n    methods: {\n\n        openModal(force = false, source = null)\n        {\n            if ( this.tempValue ) {\n                return;\n            }\n\n            if ( this.closable || force ) {\n                this.tempValue = true;\n            }\n\n            this.$emit('update:modelValue', true, source);\n        },\n\n        closeModal(force = false, source = null)\n        {\n            if ( ! this.tempValue ) {\n                return;\n            }\n\n            if ( this.closable || force ) {\n                this.tempValue = false;\n            }\n\n            this.$emit('update:modelValue', false, source);\n        },\n\n        stopRefreshTimeout()\n        {\n            clearInterval(this.refresh);\n\n            Dom.find(this.$el).removeClass('n-ready');\n        },\n\n        startRefreshTimeout()\n        {\n            if ( ! this.tempValue ) {\n                return this.stopRefreshTimeout();\n            }\n\n            window.zIndex += 1;\n\n            Dom.find(this.$el).attr('data-modal', \n                window.zIndex);\n\n            Dom.find(this.$el).css({ \n                'z-index': window.zIndex\n            });\n\n            this.refresh = setTimeout(() => {\n                Dom.find(this.$el).addClass('n-ready');\n            }, 100);\n        },\n\n        eventClick(event, el)\n        {\n            if ( this.disabled || event.which !== 1 ) {\n                return;\n            }\n\n            let result = !! Dom.find(el).closest(this.target);\n\n            if ( ! result && ! this.tempValue ) {\n                return;\n            }\n\n            if ( this.tempValue && this.closable ) {\n                result = ! Dom.find(el).closest(this.$refs.backdrop);\n            }\n\n            if ( result === this.tempValue ) {\n                return;\n            }\n\n            if ( ! result ) {\n                return this.closeModal(false, 'escape');\n            }\n            \n            this.openModal(true, 'selector');\n        },\n\n        eventKeydown(event, el)\n        {\n            if ( ! this.tempValue || event.which !== 27 ) {\n                return;\n            }\n\n            let extractIndex = (modal) => { \n                return Dom.find(modal).attr('data-modal');\n            };\n\n            let indexes = Dom.find('.n-modal:not(.n-hidden)')\n                .each(extractIndex);\n\n            let index = Dom.find(this.$el).attr('data-modal');\n\n            if ( Arr.last(indexes.sort()) !== index ) {\n                return;\n            }\n\n            this.closeModal(false, 'escape');\n        },\n\n    },\n\n    renderClose()\n    {\n        if ( ! this.renderClose || ! this.closable ) {\n            return null;\n        }\n\n        let props = {\n            onClick: () => this.closeModal(false, 'escape')\n        };\n\n        return (\n            <div class=\"n-modal__close\" {...props}>\n                <span class={this.icons.times}></span>\n            </div>\n        );\n    },\n\n    renderHeader()\n    {\n        if ( ! this.$slots.header && ! this.title ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-modal__header\">\n                { [this.$slots.header && this.$slots.header({ closeModal: this.closeModal }) || this.title, this.ctor('renderClose')()] }\n            </div>\n        );\n    },\n\n    renderFooter()\n    {\n        if ( ! this.$slots.footer ) {\n            return null;\n        }\n\n        return (\n            <div class=\"n-modal__footer\">\n                { this.$slots.footer({ closeModal: this.closeModal }) }\n            </div>\n        );\n    },\n\n    renderBody()\n    {\n        return (\n            <div class=\"n-modal__body\">\n                <NScrollbar ref=\"scrollbar\" relative={true} wrapClass=\"n-modal__wrap\">\n                    { this.$slots.default && this.$slots.default({ closeModal: this.closeModal }) }\n                </NScrollbar>\n            </div>\n        );\n    },\n\n    renderFrame()\n    {\n        if ( ! this.tempValue ) {\n            return null;\n        }\n\n        let style = {\n            width: this.width, height: this.height\n        };\n\n        let innerHtml = [\n            this.ctor('renderHeader')(),\n            this.ctor('renderBody')(),\n            this.ctor('renderFooter')(),\n        ]\n\n        return (\n            <div class=\"n-modal__frame\" style={style}>\n                { this.$slots.raw ? this.$slots.raw() : innerHtml }\n            </div>\n        );\n    },\n\n    renderBackdrop()\n    {\n        return (\n            <div ref=\"backdrop\" class=\"n-modal__backdrop\"></div>\n        );\n    },\n\n    render()\n    {\n        if ( ! window.zIndex ) {\n            window.zIndex = 9000;\n        }\n\n        let classList = [\n            'n-modal',\n            'n-modal--' + this.size,\n            'n-modal--' + this.type,\n            'n-modal--' + this.position\n        ];\n\n        if ( this.renderClose ) {\n            classList.push('n-closable');\n        }\n\n        if ( ! this.tempValue ) {\n            classList.push('n-hidden');\n        }\n\n        let innerHtml = null;\n\n        if ( this.tempValue ) {\n            innerHtml = this.ctor('renderFrame')();\n        }\n\n        return (\n            <div class={classList}>\n                { [innerHtml, this.ctor('renderBackdrop')()] } \n            </div>\n        );\n    }\n\n}\n","import Modal from './src/modal/modal';\n\nexport default function (App) {\n    App.component(Modal.name, Modal);\n}\n","import { h } from \"vue\";\nimport { Obj } from \"nano-js\";\n\nexport default {\n\n    name: 'NInput',\n\n    inheritAttrs: false,\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        icon: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        iconPosition: {\n            default()\n            {\n                return 'after';\n            },\n            type: [String]\n        },\n\n        iconDisabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        nativeType: {\n            default()\n            {\n                return 'text';\n            },\n            type: [String]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        placeholder: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        }\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue ) {\n                this.tempValue = value;\n            }\n        }\n\n    },\n\n    methods: {\n\n        eventIconClick(event)\n        {\n            this.$emit('icon-click', event);\n        },\n\n        eventInput(event)\n        {\n            this.$emit('update:modelValue', \n                this.tempValue = event.target.value);\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue || ''\n        };\n    },\n\n    renderIcon()\n    {\n        if ( ! this.icon ) {\n            return null;\n        }\n\n        let disabled = this.disabled || \n            this.iconDisabled;\n\n        let props = {\n            type:       'input',\n            icon:       this.icon,\n            size:       this.size,\n            square:     true,\n            disabled:   disabled,\n            onClick:    this.eventIconClick,\n        };\n\n        return (<NButton {...props} />);\n    },\n\n    renderInput()\n    {\n        let props = Obj.except(this.$attrs, ['class', 'style']);\n\n        Obj.assign(props, {\n            value:          this.tempValue,\n            type:           this.nativeType,\n            disabled:       this.disabled,\n            placeholder:    this.placeholder,\n            onInput:        this.eventInput\n        });\n\n        return h('input', props);\n    },\n\n    render()\n    {\n        let classList = [\n            'n-input',\n            'n-input--' + this.size,\n            'n-input--' + this.type,\n        ];\n\n        if ( this.icon ) {\n            classList.push('n-input--icon');\n            classList.push('n-input--icon-' + this.iconPosition);\n        }\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        let props = Obj.only(this.$attrs, ['style'], {\n            class: this.cmer(classList)\n        });\n\n        let innerHtml = [];\n\n        if ( this.iconPosition === 'before' ) {\n            innerHtml.push(this.ctor('renderIcon')());\n        }\n\n        innerHtml.push(this.ctor('renderInput')());\n\n        if ( this.iconPosition === 'after' ) {\n            innerHtml.push(this.ctor('renderIcon')());\n        }\n\n        return h('div', props, innerHtml);\n    }\n\n}\n","import Input from './src/input/input';\n\nexport default function (App) {\n    App.component(Input.name, Input);\n}\n","import { h } from \"vue\";\nimport {Obj, Any, UUID} from \"nano-js\";\n\nexport default {\n\n    name: 'NTextarea',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return null;\n            }\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        placeholder: {\n            default()\n            {\n                return '';\n            },\n            type: [String]\n        },\n\n        autoRows: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        maxRows: {\n            default()\n            {\n                return 12;\n            },\n            type: [Number]\n        },\n\n        minRows: {\n            default()\n            {\n                return 4;\n            },\n            type: [Number]\n        },\n\n        maxLength: {\n            default()\n            {\n                return 0;\n            },\n            type: [Number]\n        },\n\n    },\n\n    watch: {\n\n        modelValue(value)\n        {\n            if ( value !== this.tempValue ) {\n                this.tempValue = value;\n            }\n        }\n\n    },\n\n    methods: {\n\n        eventInput(event)\n        {\n            this.$emit('update:modelValue', \n                this.tempValue = event.target.value);\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue || ''\n        };\n    },\n\n    renderInput()\n    {\n        let props = Obj.except(this.$attrs, ['class', 'style']);\n\n        Obj.assign(props, {\n            value:          this.tempValue,\n            rows:           this.minRows,\n            disabled:       this.disabled,\n            placeholder:    this.placeholder,\n            onInput:        this.eventInput,\n        });\n\n        if ( this.maxLength !== 0 ) {\n            props.maxLength = this.maxLength;\n        }\n\n        let currentRows = (this.tempValue.match(/\\n/g) || []).length + 1;\n\n        if ( this.autoRows && props.rows < currentRows ) {\n            props.rows = currentRows <= this.maxRows ? currentRows : this.maxRows;\n        }\n\n        return h('textarea', props);\n    },\n\n    render()\n    {\n        let classList = [\n            'n-textarea',\n            'n-textarea--' + this.size,\n            'n-textarea--' + this.type,\n        ];\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        let props = Obj.only(this.$attrs, ['style'], {\n            class: this.cmer(classList)\n        });\n\n        return h('div', props, [this.ctor('renderInput')()]);\n    }\n\n}\n","import Textarea from './src/textarea/textarea';\n\nexport default function (App) {\n    App.component(Textarea.name, Textarea);\n}","import { Obj, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NSwitch',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return false;\n            }\n        },\n\n        onValue: {\n            default()\n            {\n                return true;\n            }\n        },\n\n        offValue: {\n            default()\n            {\n                return false;\n            }\n        },\n\n        onType: {\n            default()\n            {\n                return 'primary';\n            }\n        },\n\n        offType: {\n            default()\n            {\n                return 'default';\n            }\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            }\n        },\n\n        disabled: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n    },\n\n    data()\n    {\n        return {\n            tempValue: this.modelValue\n        };\n    },\n\n    methods: {\n\n        eventClick()\n        {\n            let tempValue = this.onValue;\n\n            if ( this.tempValue === this.onValue ) {\n                tempValue = this.offValue;\n            }\n\n            this.$emit('input', this.tempValue = tempValue);\n        }\n\n    },\n\n    watch: {\n\n        modelValue()\n        {\n            if ( this.modelValue !== this.tempValue ) {\n                this.tempValue = this.modelValue;\n            }\n        }\n\n    },\n\n    renderSwitch()\n    {\n        let classList = [\n            'n-switch__switch'\n        ];\n\n        let props = {};\n\n        if ( ! this.disabled ) {\n            props.onMousedown = this.eventClick;\n        }\n\n        return (\n            <div class={classList} {...props}>\n                <span></span>\n            </div>\n        )\n    },\n\n    renderLabel()\n    {\n        if ( ! this.$slots.default ) {\n            return null;\n        }\n\n        let classList = [\n            'n-switch__label',\n        ];\n\n        let props = {};\n\n        if ( ! this.disabled ) {\n            props.onMousedown = this.eventClick;\n        }\n\n        return (\n            <div class={classList} {...props}>\n                { this.$slots.default() }\n            </div>\n        )\n    },\n\n    render()\n    {\n        let classList = [\n            'n-switch',\n            'n-switch--' + this.size\n        ];\n\n        if ( this.tempValue === this.onValue ) {\n            classList.push('n-switch--' + this.onType);\n        }\n\n        if ( this.tempValue === this.offValue) {\n            classList.push('n-switch--' + this.offType);\n        }\n\n        if ( this.tempValue === this.onValue ) {\n            classList.push('n-on');\n        }\n\n        if ( this.tempValue === this.offValue ) {\n            classList.push('n-off');\n        }\n\n        if ( this.disabled ) {\n            classList.push('n-disabled');\n        }\n\n        return (\n            <div class={classList}>\n                { this.ctor('renderSwitch')() }\n                { this.ctor('renderLabel')() }\n            </div>\n        );\n    }\n\n}\n","import Vue from \"vue\";\n\nimport Switch from './src/switch/switch';\n\nexport default function (App) {\n    App.component(Switch.name, Switch);\n}","import { Obj, Locale } from \"nano-js\";\n\nexport default {\n\n    name: 'NConfirm',\n\n    props: {\n\n        visible: {\n            default()\n            {\n                return false;\n            },\n            type: [Boolean]\n        },\n\n        selector: {\n            default()\n            {\n                return null;\n            },\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        width: {\n            default()\n            {\n                return 'auto';\n            },\n            type: [String]\n        },\n\n        position: {\n            default()\n            {\n                return 'center-center';\n            },\n            type: [String]\n        },\n\n        closable: {\n            default()\n            {\n                return true;\n            },\n            type: [Boolean]\n        }\n\n    },\n\n    watch: {\n\n        visible()\n        {\n            if ( this.visible !== this.tempVisible ) {\n                this.tempVisible = this.visible;\n            }\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempVisible: this.visible\n        };\n    },\n\n    methods: {\n\n        abort(event)\n        {\n            this.$refs.modal.closeModal(true, 'self');\n            this.$emit('abort');\n        },\n\n        confirm(event)\n        {\n            this.$refs.modal.closeModal(true, 'self');\n            this.$emit('confirm');\n        },\n\n        eventInput(value, source)\n        {\n            if ( ! value && source !== 'self' ) {\n                this.$emit('abort');\n            }\n\n            this.$emit('update:visible', this.tempVisible = value);\n        }\n\n    },\n\n    renderIcon()\n    {\n        return (\n            <div class=\"n-confirm__icon\">\n                <span class={this.icons[this.type]}></span>\n            </div>\n        );\n    },\n\n    renderBody()\n    {\n        return (\n            <div class=\"n-confirm__body\">\n                { this.$slots.default && this.$slots.default() || this.trans('Are you sure?') }\n            </div>\n        );\n    },\n\n    renderAction()\n    {\n        let classList = [\n            'n-confirm__action'\n        ];\n\n        if ( window.WIN ) {\n            classList.push('n-reverse');\n        }\n\n        return (\n            <div class={classList}>\n                <NButton size={this.size} type={this.type} link={true} onClick={this.abort}>\n                    { this.trans('Abort') }\n                </NButton>\n                <NButton size={this.size} type={this.type} link={false} onClick={this.confirm}>\n                    { this.trans('Confirm') }\n                </NButton>\n            </div>\n        );\n    },\n\n    render()\n    {\n        let classList = [\n            'n-confirm',\n            'n-confirm--' + this.type,\n            'n-confirm--' + this.size\n        ];\n\n        let props = {\n            type: 'default',\n            selector: this.selector,\n            width: this.width,\n            position: this.position,\n            closable: this.closable,\n            modelValue: this.tempVisible,\n        };\n\n        // Override input listener\n        props['onUpdate:modelValue'] = this.eventInput;\n\n        let innerHtml = {\n            raw: () => (\n                <div class={classList}>\n                    { this.ctor('renderIcon')() }\n                    { this.ctor('renderBody')() }\n                    { this.ctor('renderAction')() }\n                </div>\n            )\n        };\n\n        return (\n            <NModal ref=\"modal\" {...props}>\n                { innerHtml }\n            </NModal>\n        );\n    }\n\n}\n","import Confirm from './src/confirm/confirm';\n\nexport default function (App) {\n    App.component(Confirm.name, Confirm);\n}\n","import { Str, Arr, Obj, Any, UUID } from \"nano-js\";\n\nexport default {\n\n    name: 'NTransfer',\n\n    props: {\n\n        modelValue: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        options: {\n            default()\n            {\n                return [];\n            },\n            type: [Array]\n        },\n\n        sourceLabel: {\n            default()\n            {\n                return 'Source';\n            },\n            type: [String]\n        },\n\n        targetLabel: {\n            default()\n            {\n                return 'Target';\n            },\n            type: [String]\n        },\n\n        labelProp: {\n            default()\n            {\n                return 'label';\n            },\n            type: [String]\n        },\n\n        uniqueProp: {\n            default()\n            {\n                return 'id';\n            },\n            type: [String]\n        }\n\n    },\n\n    computed: {\n\n        sourceChecked()\n        {\n            return !! this.selectedSource.length && \n                this.selectedSource.length === this.tempSource.length;\n        },\n\n        sourceIntermediate()\n        {\n            return !! this.selectedSource.length && \n                this.selectedSource.length !== this.tempSource.length;\n        },\n\n        targetChecked()\n        {\n            return !! this.selectedTarget.length && \n                this.selectedTarget.length === this.tempTarget.length;\n        },\n\n        targetIntermediate()\n        {\n            return !! this.selectedTarget.length && \n                this.selectedTarget.length !== this.tempTarget.length;\n        },\n\n        tempSource()\n        {\n            let source = Arr.filter(this.options, (item) => {\n                return ! Arr.find(this.tempValue, { [this.uniqueProp]: item[this.uniqueProp] });\n            });\n\n            if ( Any.isEmpty(this.sourceSearch) ) {\n                return Arr.clone(source);\n            }\n\n            let searchPattern = new RegExp(this.sourceSearch, 'i');\n\n            source = Arr.filter(source, (item) => {\n                return item[this.labelProp].match(searchPattern);\n            });\n\n            return Arr.clone(source);\n        },\n\n        tempTarget()\n        {\n            let target = Arr.filter(this.options, (item) => {\n                return !! Arr.find(this.tempValue, { [this.uniqueProp]: item[this.uniqueProp] });\n            });\n\n            if ( Any.isEmpty(this.targetSearch) ) {\n                return Arr.clone(target);\n            }\n\n            let searchPattern = new RegExp(this.targetSearch, 'i');\n\n            target = Arr.filter(target, (item) => {\n                return item[this.labelProp].match(searchPattern);\n            });\n\n            return Arr.clone(target);\n        }\n\n    },\n    data()\n    {\n        return {\n            uid: UUID(),\n            tempValue: this.modelValue,\n            sourceSearch: '',\n            targetSearch: '',\n            selectedSource: [],\n            selectedTarget: []\n        };\n    },\n\n    methods: {\n\n        moveItemsTarget(options)\n        {\n            Arr.each(options, (source) => {\n\n                let item = Arr.find(this.options, {\n                    [this.uniqueProp]: source\n                });\n\n                Arr.add(this.tempValue, item, {\n                    [this.uniqueProp]: source\n                });\n\n            });\n\n            this.$emit('input', this.tempValue);\n        },\n\n        moveItemsSource(options)\n        {\n            Arr.each(options, (source) => {\n\n                Arr.remove(this.tempValue, {\n                    [this.uniqueProp]: source\n                });\n\n            });\n\n            this.$emit('input', this.tempValue);\n        },\n\n        moveRowTarget(node)\n        {\n            // Get node unique\n            let target = node.value[this.uniqueProp];\n\n            // Remove item from selected list\n            Arr.remove(this.selectedTarget, target);\n\n            this.tempValue = Arr.remove(this.tempValue, {\n                [this.uniqueProp]: target\n            });\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        moveRowSource(node)\n        {\n            // Get node unique\n            let source = node.value[this.uniqueProp];\n\n            // Remove item from selected list\n            Arr.remove(this.selectedSource, source);\n\n            Arr.add(this.tempValue, node.item, source, {\n                [this.uniqueProp]: source\n            });\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        moveToSource()\n        {\n            Arr.each(this.selectedTarget, (target) => {\n\n                Arr.remove(this.tempValue, {\n                    [this.uniqueProp]: target\n                });\n\n            });\n\n            this.selectedTarget = [];\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        moveToTarget()\n        {\n            Arr.each(this.selectedSource, (source) => {\n\n                let item = Arr.find(this.options, {\n                    [this.uniqueProp]: source\n                });\n\n                Arr.add(this.tempValue, item, {\n                    [this.uniqueProp]: source\n                });\n\n            });\n\n            this.selectedSource = [];\n\n            this.$emit('update:modelValue', this.tempValue);\n        },\n\n        updateSelectedSource(selected)\n        {\n            this.selectedSource = selected;\n        },\n\n        updateSelectedTarget(selected)\n        {\n            this.selectedTarget = selected;\n        }\n\n    },\n\n    renderSourceSelect()\n    {\n        let props = {\n            modelValue: this.sourceChecked,\n            size: this.size,\n            type: this.type,\n            intermediate: this.sourceIntermediate,\n            disabled: ! this.tempSource.length\n        };\n\n        props['onUpdate:modelValue'] = () => {\n            this.$refs.source.selectAll();\n        };\n\n        return (\n            <div class=\"n-transfer__select\">\n                <NCheckbox {...props} />\n            </div>\n        );\n    },\n\n    renderSourceTitle()\n    {\n        let labelHtml = (\n            <span class=\"n-transfer__item-title\">\n                { this.sourceLabel }\n            </span>\n        );\n\n        let counterHtml = (\n            <span class=\"n-transfer__item-count\">\n                { this.tempSource.length }\n            </span>\n        );\n\n        return (\n            <div class=\"n-transfer__title\">\n                { [labelHtml, counterHtml] }\n            </div>\n        );\n    },\n\n    renderSourceHeader()\n    {\n        return (\n            <div class=\"n-transfer__header\">\n                { this.ctor('renderSourceSelect')() }\n                { this.ctor('renderSourceTitle')() }\n            </div>\n        );\n    },\n\n    renderSourceSearch()\n    {\n        let props = {\n            placeholder: this.trans('Search item'),\n            size: this.size,\n            type: this.type,\n            icon: this.icons.times,\n            iconDisabled: ! this.sourceSearch\n        };\n\n        props['onIconClick'] = () => {\n            this.sourceSearch = '';\n        };\n\n        props['onUpdate:modelValue'] = () => {\n            this.selectedSource = [];\n        };\n\n        return (\n            <div class=\"n-transfer__search\">\n                <NInput vModel={this.sourceSearch} {...props} />\n            </div>\n        )\n    },\n\n    renderSourceBody()\n    {\n        let props = {\n            group: [this.uid + 'source'],\n            allowGroups: [this.uid + 'target'],\n            items: this.tempSource,\n            size: this.size,\n            type: this.type,\n            renderSelect: true,\n            selected: this.selectedSource,\n            safezone: () => -10,\n            // viewportHeight: true,\n            // disableMove: true,\n            // updateDelay: 100,\n            renderNode: this.ctor('renderNode'),\n            onMove: this.moveItemsSource,\n            'onRowDblclick': this.moveRowSource,\n            'onUpdate:selected': this.updateSelectedSource\n        };\n\n        return (\n            <NDraglist ref=\"source\" class=\"n-transfer__body\" {...props} />\n        );\n    },\n\n    renderTargetSelect()\n    {\n        let props = {\n            modelValue: this.targetChecked,\n            size: this.size,\n            type: this.type,\n            intermediate: this.targetIntermediate,\n            disabled: ! this.tempTarget.length\n        };\n\n        props['onUpdate:modelValue'] = () => {\n            this.$refs.target.selectAll();\n        };\n\n        return (\n            <div class=\"n-transfer__select\">\n                <NCheckbox {...props} />\n            </div>\n        );\n    },\n\n    renderTargetTitle()\n    {\n        let labelHtml = (\n            <span class=\"n-transfer__item-title\">\n                { this.targetLabel }\n            </span>\n        );\n\n        let counterHtml = (\n            <span class=\"n-transfer__item-count\">\n                { this.tempTarget.length }\n            </span>\n        );\n\n        return (\n            <div class=\"n-transfer__title\">\n                { [labelHtml, counterHtml] }\n            </div>\n        );\n    },\n\n    renderTargetHeader()\n    {\n        return (\n            <div class=\"n-transfer__header\">\n                { this.ctor('renderTargetSelect')() }\n                { this.ctor('renderTargetTitle')() }\n            </div>\n        );\n    },\n\n    renderTargetSearch()\n    {\n        let props = {\n            placeholder: this.trans('Search item'),\n            size: this.size,\n            type: this.type,\n            icon: this.icons.times,\n            iconDisabled: ! this.targetSearch\n        };\n\n        props['onIconClick'] = () => {\n            this.targetSearch = '';\n        };\n\n        props['onUpdate:modelValue'] = () => {\n            this.selectedTarget = [];\n        };\n\n        return (\n            <div class=\"n-transfer__search\">\n                <NInput vModel={this.targetSearch} {...props} />\n            </div>\n        )\n    },\n\n    renderTargetBody()\n    {\n        let props = {\n            group: [this.uid + 'target'],\n            allowGroups: [this.uid + 'source'],\n            items: this.tempTarget,\n            size: this.size,\n            type: this.type,\n            renderSelect: true,\n            selected: this.selectedTarget,\n            safezone: () => -1,\n            // viewportHeight: true,\n            // disableMove: true,\n            // updateDelay: 100,\n            renderNode: this.ctor('renderNode'),\n            onMove: this.moveItemsTarget,\n            'onRowDblclick': this.moveRowTarget,\n            'onUpdate:selected': this.updateSelectedTarget\n        };\n\n        return (\n            <NDraglist ref=\"target\" class=\"n-transfer__body\" {...props} />\n        );\n    },\n\n    renderNode(props)\n    {\n        if ( this.$slots.default ) {\n            return this.$slots.default(props);\n        }\n        return (\n            <div class=\"n-transfer__item\">{ props.item.label }</div>\n        );\n    },\n\n    renderMoveSource()\n    {\n        let props = {\n            disabled: ! this.selectedSource.length,\n            size: this.size,\n            type: this.type,\n            square: true, \n            icon: this.icons.angleRight,\n            onClick: this.moveToTarget\n        };\n\n        // props.disabled = ! this.$refs.source ||\n        //     this.$refs.source.tempSelected.length;\n\n        return (\n            <NButton {...props} />\n        );\n    },\n\n    renderMoveTarget()\n    {\n        let props = {\n            disabled: ! this.selectedTarget.length,\n            size: this.size,\n            type: this.type,\n            square: true, \n            icon: this.icons.angleLeft,\n            onClick: this.moveToSource\n        };\n\n        // props.disabled = ! this.$refs.target||\n        //     this.$refs.target.tempSelected.length;\n\n        return (\n            <NButton {...props} />\n        );\n    },\n\n    render($render)\n    {\n        let classList = [\n            'n-transfer',\n            'n-transfer--' + this.size,\n            'n-transfer--' + this.type,\n        ]\n\n        return (\n            <div class={classList}>\n                <div class=\"n-transfer__panel\">\n                    { this.ctor('renderSourceHeader')() }\n                    { this.ctor('renderSourceSearch')() }\n                    { this.ctor('renderSourceBody')() }\n                </div>\n                <div class=\"n-transfer__controls\">\n                    { this.ctor('renderMoveSource')() }\n                    { this.ctor('renderMoveTarget')() }\n                </div>\n                <div class=\"n-transfer__panel\">\n                    { this.ctor('renderTargetHeader')() }\n                    { this.ctor('renderTargetSearch')() }\n                    { this.ctor('renderTargetBody')() }\n                </div>\n            </div>\n        );\n    }\n\n}","import Transfer from \"./src/transfer/transfer\";\n\nexport default function (App) {\n    App.component(Transfer.name, Transfer);\n}","import { Str, Num, Arr, Any } from \"nano-js\";\n\nexport default {\n\n    name: 'NPaginator',\n\n    props: {\n\n        page: {\n            default()\n            {\n                return 1;\n            },\n            type: [Number]\n        },\n\n        limit: {\n            default()\n            {\n                return 100;\n            },\n            type: [Number]\n        },\n\n        limitOptions: {\n            default()\n            {\n                return [25, 50, 100, 500, 1000, 2500];\n            },\n        },\n\n        total: {\n            default()\n            {\n                return 0;\n            },\n            type: [Number]\n        },\n\n        size: {\n            default()\n            {\n                return 'md';\n            },\n            type: [String]\n        },\n\n        type: {\n            default()\n            {\n                return 'primary';\n            },\n            type: [String]\n        },\n\n        maxPages: {\n            default()\n            {\n                return 5;\n            },\n            type: [Number]\n        },\n\n        layout: {\n            default()\n            {\n                return [\n                    'limit', 'count', 'spacer', 'goto', 'pages'\n                ]\n            },\n            type: [Array]\n        }\n\n    },\n\n    computed: {\n\n        pages()\n        {\n            return Num.ceil(this.total / this.tempLimit);\n        },\n\n        pageOptions()\n        {\n            return Arr.make(this.pages || 1);\n        }\n\n    },\n\n    data()\n    {\n        return {\n            tempPage: this.page, \n            tempLimit: this.limit,\n        }\n    },\n\n    methods: {\n\n        forcePage(page)\n        {\n            if ( page !== this.tempPage ) {\n                this.tempPage = page;\n            }\n        },\n\n        updatePaginate()\n        {\n            let paginate = {\n                page: this.tempPage, limit: this.tempLimit\n            };\n\n            this.$emit('paginate', paginate);\n        },\n\n        onPrevPage()\n        {\n            this.onPageInput(this.tempPage - 1);\n        },\n\n        onNextPage()\n        {\n            this.onPageInput(this.tempPage + 1);\n        },\n\n        onFirstPage()\n        {\n            this.onPageInput(1);\n        },\n\n        onLastPage()\n        {\n            this.onPageInput(this.pages);\n        },\n\n        onPageInput(value)\n        {\n            this.$emit('update:page', this.tempPage = value);\n\n            this.updatePaginate();\n        },\n\n        onLimitInput(value)\n        {\n            this.$emit('update:limit', this.tempLimit = value);\n\n            if ( this.pages < this.tempPage ) {\n                this.$emit('update:page', this.tempPage = 1);\n            }\n\n            this.updatePaginate();\n        },\n\n    },\n\n    watch: {\n\n        page(value)\n        {\n            if ( value !== this.tempPage ) {\n                this.tempPage = value;\n            }\n        },\n\n        limit(value)\n        {\n            if ( value !== this.tempLimit ) {\n                this.tempLimit = value;\n            }\n        }\n\n    },\n\n    renderLimit()\n    {\n        let props = {\n            modelValue:     this.tempLimit,\n            size:           this.size,\n            type:           this.type,\n            optionsValue:  '$value.value',\n            optionsLabel:  '$value.label',\n        };\n\n        props.options = Arr.each(this.limitOptions, (limit) => {\n            return {\n                value: limit, label: this.choice(':count items', limit)\n            };\n        });\n\n        props['onUpdate:modelValue'] = this.onLimitInput;\n\n        return (\n            <div class=\"n-paginator__limit\">\n                <NSelect {...props} />\n            </div>\n        );\n    },\n\n    renderCount()\n    {\n        return (\n            <div class=\"n-paginator__count\">\n                { this.choice('No items|Total :count item|Total :count items', this.total) }\n            </div>\n        );\n    },\n\n    renderSpacer()\n    {\n        return (\n            <div class=\"n-paginator__spacer\">\n                { /* Nothing :( */ }\n            </div>\n        );\n    },\n\n    renderGoto()\n    {\n        let props = {\n            modelValue:     this.tempPage,\n            size:           this.size,\n            type:           this.type,\n            undefinedText:  '?',\n            optionsValue:   '$value.value',\n            optionsLabel:   '$value.label',\n        };\n\n        props.options = Arr.reduce(this.pageOptions, (merge, index) => {\n            return Arr.push(merge, {\n                value: index, label: index\n            });\n        }, []);\n\n        props['onUpdate:modelValue'] = this.onPageInput;\n\n        return (\n            <div class=\"n-paginator__goto\">\n                <NSelect {...props} />\n            </div>\n        );\n    },\n\n    renderPrev()\n    {\n        let props = {\n            type: this.type,\n            square: true,\n            size: this.size,\n            icon: this.icons.angleLeft,\n            onClick: this.onPrevPage\n        };\n\n        if ( this.tempPage - 1 < 1 ) {\n            props.disabled = true;\n        }\n\n        return (\n            <NButton {...props} />\n        );\n    },\n\n    renderNext()\n    {\n        let props = {\n            type: this.type,\n            square: true,\n            size: this.size,\n            icon: this.icons.angleRight,\n            onClick: this.onNextPage\n        };\n\n        if ( this.tempPage + 1 > this.pages ) {\n            props.disabled = true;\n        }\n\n        return (\n            <NButton {...props} />\n        );\n    },\n\n    renderFirst()\n    {\n        if ( this.pages < this.maxPages ) {\n            return null;\n        }\n\n        let props = {\n            type: this.type,\n            square: true,\n            size: this.size,\n            icon: this.icons.angleDoubleLeft,\n            onClick: this.onFirstPage\n        };\n\n        if ( this.tempPage - 1 < 1 ) {\n            props.disabled = true;\n        }\n\n        return (\n            <NButton {...props} />\n        );\n    },\n\n    renderLast()\n    {\n        if ( this.pages < this.maxPages ) {\n            return null;\n        }\n\n        let props = {\n            type: this.type,\n            square: true,\n            size: this.size,\n            icon: this.icons.angleDoubleRight,\n            onClick: this.onLastPage\n        };\n\n        if ( this.tempPage + 1 > this.pages ) {\n            props.disabled = true;\n        }\n\n        return (\n            <NButton {...props} />\n        );\n    },\n\n    renderPage(index)\n    {\n        let page = this.tempPage;\n\n        let pages = Math.abs(this.maxPages / 2);\n\n        if ( page < pages ) {\n            page = pages;\n        }\n\n        let global = Array(this.pages).length;\n\n        if ( page > global - pages ) {\n            page = global - pages;\n        }\n\n        let current = Num.int(index);\n\n        if ( current < page - pages ) {\n            return null;\n        }\n\n        if ( current > Math.max(1, page + pages) ) {\n            return null;\n        }\n\n        let props = {\n            type: this.type,\n            size: this.size,\n        };\n\n        if ( current === this.tempPage ) {\n            props.disabled = true;\n        }\n\n        props.onClick = () => {\n            this.onPageInput(current);\n        };\n\n        return (\n            <NButton {...props}>{ current }</NButton>\n        );\n    },\n\n    renderPages()\n    {\n        let pages = Arr.each(this.pageOptions, (index) => {\n            return this.ctor('renderPage')(index);\n        });\n\n        return (\n            <div class=\"n-paginator__pages\">\n                { this.ctor('renderFirst')() }\n                { this.ctor('renderPrev')() }\n                { ...pages }\n                { this.ctor('renderNext')() }\n                { this.ctor('renderLast')() }\n            </div>\n        );\n    },\n\n    renderSlot(view)\n    {\n        let renderFunction = this.ctor('render' + \n            Str.ucfirst(view));\n\n        if ( Any.isFunction(renderFunction) ) {\n            return renderFunction();\n        }\n\n        return this.$slots[view] && this.$slots[view]();\n    },\n\n    render()\n    {\n        let className = [\n            'n-paginator',\n            'n-paginator--' + this.size,\n            'n-paginator--' + this.type\n        ];\n\n        return <div class={className}>\n            {\n                Arr.each(this.layout, (view) => {\n                    return this.ctor('renderSlot')(view);\n                })\n            }\n        </div>;\n    }\n}\n","import Paginator from './src/paginator/paginator';\n\nexport default function (App) {\n    App.component(Paginator.name, Paginator);\n}"],"sourceRoot":""}